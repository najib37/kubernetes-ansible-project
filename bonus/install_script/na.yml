apiVersion: v1
items:
  - apiVersion: v1
    kind: Pod
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      creationTimestamp: "2025-05-06T16:00:15Z"
      generateName: gitlab-controller-manager-55c94b95bc-
      labels:
        control-plane: controller-manager
        pod-template-hash: 55c94b95bc
      name: gitlab-controller-manager-55c94b95bc-zwp6r
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: ReplicaSet
          name: gitlab-controller-manager-55c94b95bc
          uid: b8000e59-99b2-431e-a070-01dcb717fbcf
      resourceVersion: "8925"
      uid: b93e4914-0c08-4a92-a82c-f9b9ead07f2f
    spec:
      containers:
        - args:
            - --metrics-addr=:8443
            - --enable-leader-election
            - --zap-devel=false
            - --zap-log-level=info
            - --zap-time-encoding=epoch
          command:
            - /manager
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: GITLAB_MANAGER_SERVICE_ACCOUNT
              value: gitlab-manager
            - name: GITLAB_APP_NONROOT_SERVICE_ACCOUNT
              value: gitlab-app-nonroot
            - name: NGINX_SERVICE_ACCOUNT
              value: gitlab-nginx-ingress
            - name: PROMETHEUS_SERVICE_ACCOUNT
              value: gitlab-prometheus-server
          image: registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator:1.12.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /liveness
              port: health-port
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
            - containerPort: 6060
              name: health-port
              protocol: TCP
            - containerPort: 8443
              name: metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: health-port
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: kube-api-access-lnk98
              readOnly: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      nodeName: k3d-mycluster-server-0
      preemptionPolicy: PreemptLowerPriority
      priority: 0
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: gitlab-manager
      serviceAccountName: gitlab-manager
      terminationGracePeriodSeconds: 10
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: webhook-server-cert
        - name: kube-api-access-lnk98
          projected:
            defaultMode: 420
            sources:
              - serviceAccountToken:
                  expirationSeconds: 3607
                  path: token
              - configMap:
                  items:
                    - key: ca.crt
                      path: ca.crt
                  name: kube-root-ca.crt
              - downwardAPI:
                  items:
                    - fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.namespace
                      path: namespace
    status:
      conditions:
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T16:00:17Z"
          status: "True"
          type: PodReadyToStartContainers
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T16:00:15Z"
          status: "True"
          type: Initialized
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T16:00:26Z"
          status: "True"
          type: Ready
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T16:00:26Z"
          status: "True"
          type: ContainersReady
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T16:00:15Z"
          status: "True"
          type: PodScheduled
      containerStatuses:
        - containerID: containerd://e3030303253090723c3fc08547cfa40e29f72bb4fbf8409a2348f8e8f104bce2
          image: registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator:1.12.1
          imageID: registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:91dcd6b0eb591347c13deca7a191fe0d81b2c78308640d0e8585f4c576db1e90
          lastState: {}
          name: manager
          ready: true
          restartCount: 0
          started: true
          state:
            running:
              startedAt: "2025-05-06T16:00:17Z"
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: kube-api-access-lnk98
              readOnly: true
              recursiveReadOnly: Disabled
      hostIP: 172.18.0.2
      hostIPs:
        - ip: 172.18.0.2
      phase: Running
      podIP: 10.42.0.79
      podIPs:
        - ip: 10.42.0.79
      qosClass: Burstable
      startTime: "2025-05-06T16:00:15Z"
  - apiVersion: v1
    kind: Pod
    metadata:
      annotations:
        checksum/config: d9a5409ab980906f8c80dfc1b06bad4367e204641330ab72875ddffd0efe1bf2
        gitlab.com/prometheus_path: /metrics
        gitlab.com/prometheus_port: "9236"
        gitlab.com/prometheus_scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9236"
        prometheus.io/scrape: "true"
      creationTimestamp: "2025-05-06T15:53:54Z"
      generateName: gitlab-gitaly-
      labels:
        app: gitaly
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: v17.11.1
        apps.kubernetes.io/pod-index: "0"
        chart: gitaly-8.11.1
        controller-revision-hash: gitlab-gitaly-78f5fd556f
        heritage: Helm
        release: gitlab
        statefulset.kubernetes.io/pod-name: gitlab-gitaly-0
      name: gitlab-gitaly-0
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: StatefulSet
          name: gitlab-gitaly
          uid: 54a06dda-4f06-4c60-9956-0088c62e9930
      resourceVersion: "8424"
      uid: 399b4027-24dc-4a95-bf33-2fada4044d96
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: gitaly
                    release: gitlab
                topologyKey: kubernetes.io/hostname
              weight: 1
      automountServiceAccountToken: false
      containers:
        - env:
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: /etc/gitaly/templates
            - name: CONFIG_DIRECTORY
              value: /etc/gitaly
            - name: GITALY_CONFIG_FILE
              value: /etc/gitaly/config.toml
            - name: SSL_CERT_DIR
              value: /etc/ssl/certs
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/gitaly:v17.11.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8075
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: gitaly
          ports:
            - containerPort: 8075
              name: grpc-gitaly
              protocol: TCP
            - containerPort: 9236
              name: http-metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8075
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          startupProbe:
            failureThreshold: 60
            grpc:
              port: 8075
              service: ""
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
            - mountPath: /etc/gitaly/templates
              name: gitaly-config
            - mountPath: /etc/gitlab-secrets
              name: gitaly-secrets
              readOnly: true
            - mountPath: /home/git/repositories
              name: repo-data
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      hostname: gitlab-gitaly-0
      initContainers:
        - env:
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
          imagePullPolicy: IfNotPresent
          name: certificates
          resources:
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: etc-ssl-certs
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
        - command:
            - sh
            - /config/configure
          env:
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
          imagePullPolicy: IfNotPresent
          name: configure
          resources:
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /config
              name: gitaly-config
              readOnly: true
            - mountPath: /init-config
              name: init-gitaly-secrets
              readOnly: true
            - mountPath: /init-secrets
              name: gitaly-secrets
      nodeName: k3d-mycluster-server-0
      preemptionPolicy: PreemptLowerPriority
      priority: 0
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccount: default
      serviceAccountName: default
      subdomain: gitlab-gitaly
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
      volumes:
        - name: repo-data
          persistentVolumeClaim:
            claimName: repo-data-gitlab-gitaly-0
        - configMap:
            defaultMode: 420
            name: gitlab-gitaly
          name: gitaly-config
        - emptyDir:
            medium: Memory
          name: gitaly-secrets
        - name: init-gitaly-secrets
          projected:
            defaultMode: 288
            sources:
              - secret:
                  items:
                    - key: token
                      path: gitaly_token
                  name: gitlab-gitaly-secret
              - secret:
                  items:
                    - key: secret
                      path: .gitlab_shell_secret
                  name: gitlab-gitlab-shell-secret
        - emptyDir:
            medium: Memory
          name: etc-ssl-certs
        - emptyDir:
            medium: Memory
          name: etc-pki-ca-trust-extracted-pem
    status:
      conditions:
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:00Z"
          status: "True"
          type: PodReadyToStartContainers
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:08Z"
          status: "True"
          type: Initialized
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:10Z"
          status: "True"
          type: Ready
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:10Z"
          status: "True"
          type: ContainersReady
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:53:59Z"
          status: "True"
          type: PodScheduled
      containerStatuses:
        - containerID: containerd://8d387b8abad7ed053460cdfeb0a0cc9167bc553bb57cdcaa748e6f6ea1984b58
          image: registry.gitlab.com/gitlab-org/build/cng/gitaly:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/gitaly@sha256:45035ee27149b854655f329625a42f473813b220bd43c1f201dfa5430bee4479
          lastState: {}
          name: gitaly
          ready: true
          restartCount: 0
          started: true
          state:
            running:
              startedAt: "2025-05-06T15:54:08Z"
          volumeMounts:
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /etc/gitaly/templates
              name: gitaly-config
            - mountPath: /etc/gitlab-secrets
              name: gitaly-secrets
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /home/git/repositories
              name: repo-data
      hostIP: 172.18.0.2
      hostIPs:
        - ip: 172.18.0.2
      initContainerStatuses:
        - containerID: containerd://641c53031cf2a642cae208508bc35e7cd805d0a1f30300d37c71bcdc87ef1b22
          image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/certificates@sha256:befb63aef4e1eee996c2be37c1621cd81cfeb37885db85f85000e52e94aa993a
          lastState: {}
          name: certificates
          ready: true
          restartCount: 0
          started: false
          state:
            terminated:
              containerID: containerd://641c53031cf2a642cae208508bc35e7cd805d0a1f30300d37c71bcdc87ef1b22
              exitCode: 0
              finishedAt: "2025-05-06T15:54:07Z"
              reason: Completed
              startedAt: "2025-05-06T15:54:00Z"
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: etc-ssl-certs
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
        - containerID: containerd://9571c50871da5ec40f511f155e4794c4d2e3a77665aefc958701e56f034135ce
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/gitlab-base@sha256:471d6bd67f9dbd5473c62fdd2c7f827c012c98e36f233b63c247d5e0926fb1a5
          lastState: {}
          name: configure
          ready: true
          restartCount: 0
          started: false
          state:
            terminated:
              containerID: containerd://9571c50871da5ec40f511f155e4794c4d2e3a77665aefc958701e56f034135ce
              exitCode: 0
              finishedAt: "2025-05-06T15:54:07Z"
              reason: Completed
              startedAt: "2025-05-06T15:54:07Z"
          volumeMounts:
            - mountPath: /config
              name: gitaly-config
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /init-config
              name: init-gitaly-secrets
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /init-secrets
              name: gitaly-secrets
      phase: Running
      podIP: 10.42.0.75
      podIPs:
        - ip: 10.42.0.75
      qosClass: Burstable
      startTime: "2025-05-06T15:53:59Z"
  - apiVersion: v1
    kind: Pod
    metadata:
      annotations:
        checksum/config: 7b82c156cd9172f3acf0df7031d9fdb86cbc7ccb4f45c4f636591144d47d6ab4
        gitlab.com/prometheus_path: /metrics
        gitlab.com/prometheus_port: "9168"
        gitlab.com/prometheus_scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9168"
        prometheus.io/scrape: "true"
      creationTimestamp: "2025-05-06T15:53:54Z"
      generateName: gitlab-gitlab-exporter-78f695889f-
      labels:
        app: gitlab-exporter
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: v17.11.1
        chart: gitlab-exporter-8.11.1
        heritage: Helm
        pod-template-hash: 78f695889f
        release: gitlab
      name: gitlab-gitlab-exporter-78f695889f-42nkt
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: ReplicaSet
          name: gitlab-gitlab-exporter-78f695889f
          uid: eb0a5e84-02dc-443d-8917-9dd5fad93faf
      resourceVersion: "8345"
      uid: caebcc15-ab27-4142-9615-d406e3fd35d5
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: gitlab-exporter
                    release: gitlab
                topologyKey: kubernetes.io/hostname
              weight: 1
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: UTC
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: /var/opt/gitlab-exporter/templates
            - name: CONFIG_DIRECTORY
              value: /etc/gitlab-exporter
            - name: MALLOC_CONF
              value: dirty_decay_ms:0,muzzy_decay_ms:0
            - name: RUBY_GC_HEAP_FREE_SLOTS_MAX_RATIO
              value: "0.111"
            - name: RUBY_GC_HEAP_FREE_SLOTS_MIN_RATIO
              value: "0.055"
            - name: RUBY_GC_HEAP_INIT_SLOTS
              value: "80000"
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-exporter:15.3.0
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/bash
                  - -c
                  - pkill -f 'gitlab-exporter'
          livenessProbe:
            exec:
              command:
                - pgrep
                - -f
                - gitlab-exporter
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: gitlab-exporter
          ports:
            - containerPort: 9168
              name: http-metrics
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - pgrep
                - -f
                - gitlab-exporter
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 75m
              memory: 100M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/opt/gitlab-exporter/templates/gitlab-exporter.yml.erb
              name: gitlab-exporter-config
              subPath: gitlab-exporter.yml.erb
            - mountPath: /etc/gitlab
              name: gitlab-exporter-secrets
              readOnly: true
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      initContainers:
        - env:
            - name: TZ
              value: UTC
            - name: MALLOC_CONF
              value: dirty_decay_ms:0,muzzy_decay_ms:0
            - name: RUBY_GC_HEAP_FREE_SLOTS_MAX_RATIO
              value: "0.111"
            - name: RUBY_GC_HEAP_FREE_SLOTS_MIN_RATIO
              value: "0.055"
            - name: RUBY_GC_HEAP_INIT_SLOTS
              value: "80000"
          image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
          imagePullPolicy: IfNotPresent
          name: certificates
          resources:
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: etc-ssl-certs
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
        - command:
            - sh
            - /config/configure
          env:
            - name: TZ
              value: UTC
            - name: MALLOC_CONF
              value: dirty_decay_ms:0,muzzy_decay_ms:0
            - name: RUBY_GC_HEAP_FREE_SLOTS_MAX_RATIO
              value: "0.111"
            - name: RUBY_GC_HEAP_FREE_SLOTS_MIN_RATIO
              value: "0.055"
            - name: RUBY_GC_HEAP_INIT_SLOTS
              value: "80000"
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
          imagePullPolicy: IfNotPresent
          name: configure
          resources:
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /config
              name: gitlab-exporter-config
              readOnly: true
            - mountPath: /init-config
              name: init-gitlab-exporter-secrets
              readOnly: true
            - mountPath: /init-secrets
              name: gitlab-exporter-secrets
      nodeName: k3d-mycluster-server-0
      preemptionPolicy: PreemptLowerPriority
      priority: 0
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
      volumes:
        - configMap:
            defaultMode: 420
            name: gitlab-gitlab-exporter
          name: gitlab-exporter-config
        - name: init-gitlab-exporter-secrets
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: postgresql-password
                      path: postgres/psql-password-ci
                  name: gitlab-postgresql-password
              - secret:
                  items:
                    - key: postgresql-password
                      path: postgres/psql-password-main
                  name: gitlab-postgresql-password
              - secret:
                  items:
                    - key: secret
                      path: redis/redis-password
                  name: gitlab-redis-secret
        - emptyDir:
            medium: Memory
          name: gitlab-exporter-secrets
        - emptyDir:
            medium: Memory
          name: etc-ssl-certs
        - emptyDir:
            medium: Memory
          name: etc-pki-ca-trust-extracted-pem
    status:
      conditions:
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:53:56Z"
          status: "True"
          type: PodReadyToStartContainers
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:01Z"
          status: "True"
          type: Initialized
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:03Z"
          status: "True"
          type: Ready
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:03Z"
          status: "True"
          type: ContainersReady
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:53:54Z"
          status: "True"
          type: PodScheduled
      containerStatuses:
        - containerID: containerd://21d2dc4d4fbb7e0aa98db60191711f018e93697d352883a704b24277706be1d1
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-exporter:15.3.0
          imageID: registry.gitlab.com/gitlab-org/build/cng/gitlab-exporter@sha256:a85d29d417a64bc4a2690fa256e2843db21661d4f7907039e59ef1d77a8bb0d8
          lastState: {}
          name: gitlab-exporter
          ready: true
          restartCount: 0
          started: true
          state:
            running:
              startedAt: "2025-05-06T15:54:02Z"
          volumeMounts:
            - mountPath: /var/opt/gitlab-exporter/templates/gitlab-exporter.yml.erb
              name: gitlab-exporter-config
            - mountPath: /etc/gitlab
              name: gitlab-exporter-secrets
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
              recursiveReadOnly: Disabled
      hostIP: 172.18.0.2
      hostIPs:
        - ip: 172.18.0.2
      initContainerStatuses:
        - containerID: containerd://dd4b02be1e667009b4289caf13ceaa264b6c41e3b41b67e8013928d35244f52c
          image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/certificates@sha256:befb63aef4e1eee996c2be37c1621cd81cfeb37885db85f85000e52e94aa993a
          lastState: {}
          name: certificates
          ready: true
          restartCount: 0
          started: false
          state:
            terminated:
              containerID: containerd://dd4b02be1e667009b4289caf13ceaa264b6c41e3b41b67e8013928d35244f52c
              exitCode: 0
              finishedAt: "2025-05-06T15:54:00Z"
              reason: Completed
              startedAt: "2025-05-06T15:53:56Z"
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: etc-ssl-certs
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
        - containerID: containerd://3a63c346d64bb94c69587efad4e8bbef474e8b7f3feb38ffe70fa01fab6a818e
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/gitlab-base@sha256:471d6bd67f9dbd5473c62fdd2c7f827c012c98e36f233b63c247d5e0926fb1a5
          lastState: {}
          name: configure
          ready: true
          restartCount: 0
          started: false
          state:
            terminated:
              containerID: containerd://3a63c346d64bb94c69587efad4e8bbef474e8b7f3feb38ffe70fa01fab6a818e
              exitCode: 0
              finishedAt: "2025-05-06T15:54:00Z"
              reason: Completed
              startedAt: "2025-05-06T15:54:00Z"
          volumeMounts:
            - mountPath: /config
              name: gitlab-exporter-config
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /init-config
              name: init-gitlab-exporter-secrets
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /init-secrets
              name: gitlab-exporter-secrets
      phase: Running
      podIP: 10.42.0.68
      podIPs:
        - ip: 10.42.0.68
      qosClass: Burstable
      startTime: "2025-05-06T15:53:54Z"
  - apiVersion: v1
    kind: Pod
    metadata:
      annotations:
        checksum/config: e19c03fbe02a0049de6285b98359d4acaaf34e7222ac4026fe03ebd52688c72d
        checksum/config-sshd: 44ed1eca6e5f82430bf45cc116da39f7d235b4a0672a0bd34c54cb33eceb61a4
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      creationTimestamp: "2025-05-06T15:53:54Z"
      generateName: gitlab-gitlab-shell-64f8c9b487-
      labels:
        app: gitlab-shell
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: v17.11.1
        chart: gitlab-shell-8.11.1
        heritage: Helm
        pod-template-hash: 64f8c9b487
        release: gitlab
      name: gitlab-gitlab-shell-64f8c9b487-p7dj6
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: ReplicaSet
          name: gitlab-gitlab-shell-64f8c9b487
          uid: 107dbcce-5dd1-4e3d-a245-fbd619f972ca
      resourceVersion: "8458"
      uid: 81b1e9ff-955b-452c-8c1d-0da36cc538c4
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: gitlab-shell
                    release: gitlab
                topologyKey: kubernetes.io/hostname
              weight: 1
      automountServiceAccountToken: false
      containers:
        - env:
            - name: GITALY_FEATURE_DEFAULT_ON
              value: "1"
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: /etc/gitlab-shell
            - name: CONFIG_DIRECTORY
              value: /srv/gitlab-shell
            - name: KEYS_DIRECTORY
              value: /etc/gitlab-secrets/ssh
            - name: SSH_DAEMON
              value: openssh
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-shell:v14.41.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - /scripts/healthcheck
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: gitlab-shell
          ports:
            - containerPort: 2222
              name: ssh
              protocol: TCP
          readinessProbe:
            failureThreshold: 2
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 2222
            timeoutSeconds: 3
          resources:
            requests:
              cpu: "0"
              memory: 6M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/gitlab-shell
              name: shell-config
            - mountPath: /etc/gitlab-secrets
              name: shell-secrets
              readOnly: true
            - mountPath: /etc/krb5.conf
              name: shell-config
              readOnly: true
              subPath: krb5.conf
            - mountPath: /etc/ssh/sshd_config
              name: sshd-config
              readOnly: true
              subPath: sshd_config
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      initContainers:
        - env:
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
          imagePullPolicy: IfNotPresent
          name: certificates
          resources:
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: etc-ssl-certs
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
        - command:
            - sh
            - /config/configure
          env:
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
          imagePullPolicy: IfNotPresent
          name: configure
          resources:
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /config
              name: shell-config
              readOnly: true
            - mountPath: /init-config
              name: shell-init-secrets
              readOnly: true
            - mountPath: /init-secrets
              name: shell-secrets
      nodeName: k3d-mycluster-server-0
      preemptionPolicy: PreemptLowerPriority
      priority: 0
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
      volumes:
        - configMap:
            defaultMode: 420
            name: gitlab-gitlab-shell
          name: shell-config
        - configMap:
            defaultMode: 420
            name: gitlab-gitlab-shell-sshd
          name: sshd-config
        - name: shell-init-secrets
          projected:
            defaultMode: 288
            sources:
              - secret:
                  name: gitlab-gitlab-shell-host-keys
              - secret:
                  items:
                    - key: secret
                      path: shell/.gitlab_shell_secret
                  name: gitlab-gitlab-shell-secret
        - emptyDir:
            medium: Memory
          name: shell-secrets
        - emptyDir:
            medium: Memory
          name: etc-ssl-certs
        - emptyDir:
            medium: Memory
          name: etc-pki-ca-trust-extracted-pem
    status:
      conditions:
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:53:56Z"
          status: "True"
          type: PodReadyToStartContainers
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:01Z"
          status: "True"
          type: Initialized
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:15Z"
          status: "True"
          type: Ready
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:15Z"
          status: "True"
          type: ContainersReady
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:53:54Z"
          status: "True"
          type: PodScheduled
      containerStatuses:
        - containerID: containerd://cf7991145ec1d041827d3a7464d2334a80eb2e5f296a34dd3d1feef5961bc952
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-shell:v14.41.0
          imageID: registry.gitlab.com/gitlab-org/build/cng/gitlab-shell@sha256:ec1e9fcdf4d695254ecf32a1ad13cb0686c07f50bcc40643ef75b1a8afc339c2
          lastState: {}
          name: gitlab-shell
          ready: true
          restartCount: 0
          started: true
          state:
            running:
              startedAt: "2025-05-06T15:54:02Z"
          volumeMounts:
            - mountPath: /etc/gitlab-shell
              name: shell-config
            - mountPath: /etc/gitlab-secrets
              name: shell-secrets
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /etc/krb5.conf
              name: shell-config
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /etc/ssh/sshd_config
              name: sshd-config
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
              recursiveReadOnly: Disabled
      hostIP: 172.18.0.2
      hostIPs:
        - ip: 172.18.0.2
      initContainerStatuses:
        - containerID: containerd://e8ff56fc264c69f9aaa3e223c2b0f611f38e3483a9ac3a8b93f99ec287d638e3
          image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/certificates@sha256:befb63aef4e1eee996c2be37c1621cd81cfeb37885db85f85000e52e94aa993a
          lastState: {}
          name: certificates
          ready: true
          restartCount: 0
          started: false
          state:
            terminated:
              containerID: containerd://e8ff56fc264c69f9aaa3e223c2b0f611f38e3483a9ac3a8b93f99ec287d638e3
              exitCode: 0
              finishedAt: "2025-05-06T15:54:00Z"
              reason: Completed
              startedAt: "2025-05-06T15:53:55Z"
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: etc-ssl-certs
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
        - containerID: containerd://9a9bb2c1d6d91ea9988701c7cfbf8ee7851f08b51e8252da5b58d10c641017fa
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/gitlab-base@sha256:471d6bd67f9dbd5473c62fdd2c7f827c012c98e36f233b63c247d5e0926fb1a5
          lastState: {}
          name: configure
          ready: true
          restartCount: 0
          started: false
          state:
            terminated:
              containerID: containerd://9a9bb2c1d6d91ea9988701c7cfbf8ee7851f08b51e8252da5b58d10c641017fa
              exitCode: 0
              finishedAt: "2025-05-06T15:54:00Z"
              reason: Completed
              startedAt: "2025-05-06T15:54:00Z"
          volumeMounts:
            - mountPath: /config
              name: shell-config
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /init-config
              name: shell-init-secrets
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /init-secrets
              name: shell-secrets
      phase: Running
      podIP: 10.42.0.64
      podIPs:
        - ip: 10.42.0.64
      qosClass: Burstable
      startTime: "2025-05-06T15:53:54Z"
  - apiVersion: v1
    kind: Pod
    metadata:
      annotations:
        checksum/config: cd0e5701cd886cdf296bbe882e8cee02c663ece7265d5fe2824c082611ec409f
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        gitlab.com/prometheus_path: /metrics
        gitlab.com/prometheus_port: "8151"
        gitlab.com/prometheus_scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8151"
        prometheus.io/scrape: "true"
      creationTimestamp: "2025-05-06T15:54:09Z"
      generateName: gitlab-kas-799cc6dfff-
      labels:
        app: kas
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: v17.11.1
        chart: kas-8.11.1
        heritage: Helm
        pod-template-hash: 799cc6dfff
        release: gitlab
      name: gitlab-kas-799cc6dfff-4xzqd
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: ReplicaSet
          name: gitlab-kas-799cc6dfff
          uid: e8285def-aaa2-4fa1-9230-e988d5345e5e
      resourceVersion: "8541"
      uid: 899ee8a4-806b-4472-9ecd-a3de929e7775
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: kas
                    release: gitlab
                topologyKey: kubernetes.io/hostname
              weight: 1
      automountServiceAccountToken: false
      containers:
        - args:
            - --configuration-file=/etc/kas/config.yaml
          env:
            - name: OWN_PRIVATE_API_HOST
              value: gitlab-kas.gitlab.svc
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: OWN_PRIVATE_API_URL
              value: grpc://$(POD_IP):8155
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-kas:v17.11.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /liveness
              port: 8151
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: kas
          ports:
            - containerPort: 8150
              name: kas
              protocol: TCP
            - containerPort: 8154
              name: kas-k8s-api
              protocol: TCP
            - containerPort: 8155
              name: kas-private-api
              protocol: TCP
            - containerPort: 8151
              name: http-metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 8151
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/kas
              name: init-etc-kas
              readOnly: true
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      initContainers:
        - env:
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
          imagePullPolicy: IfNotPresent
          name: certificates
          resources:
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: etc-ssl-certs
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
      nodeName: k3d-mycluster-server-0
      preemptionPolicy: PreemptLowerPriority
      priority: 0
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 65532
        runAsGroup: 65532
        runAsUser: 65532
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 300
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
      volumes:
        - emptyDir:
            medium: Memory
          name: etc-ssl-certs
        - emptyDir:
            medium: Memory
          name: etc-pki-ca-trust-extracted-pem
        - name: init-etc-kas
          projected:
            defaultMode: 288
            sources:
              - configMap:
                  name: gitlab-kas
              - secret:
                  items:
                    - key: kas_shared_secret
                      path: .gitlab_kas_secret
                  name: gitlab-gitlab-kas-secret
              - secret:
                  items:
                    - key: kas_private_api_secret
                      path: .gitlab_kas_private_api_secret
                  name: gitlab-kas-private-api
              - secret:
                  items:
                    - key: kas_websocket_token_secret
                      path: .gitlab_kas_websocket_token_secret
                  name: gitlab-kas-websocket-token
              - secret:
                  items:
                    - key: secret
                      path: redis/redis-password
                  name: gitlab-redis-secret
    status:
      conditions:
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:10Z"
          status: "True"
          type: PodReadyToStartContainers
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:13Z"
          status: "True"
          type: Initialized
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:39Z"
          status: "True"
          type: Ready
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:39Z"
          status: "True"
          type: ContainersReady
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:09Z"
          status: "True"
          type: PodScheduled
      containerStatuses:
        - containerID: containerd://d57fbea5569e59bc09c1cee1c76a6730ef1e731bd6ff34527b46aeae2385c541
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-kas:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/gitlab-kas@sha256:d01b39da8c001ce8e75e8e12a9e12149927942ad93b9329970613be69d307dd9
          lastState:
            terminated:
              containerID: containerd://9597075746c7ecf24b05a7e7cc04097e49e4e46b420fcce06363a4156d16454c
              exitCode: 1
              finishedAt: "2025-05-06T15:54:14Z"
              reason: Error
              startedAt: "2025-05-06T15:54:14Z"
          name: kas
          ready: true
          restartCount: 2
          started: true
          state:
            running:
              startedAt: "2025-05-06T15:54:30Z"
          volumeMounts:
            - mountPath: /etc/kas
              name: init-etc-kas
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
              recursiveReadOnly: Disabled
      hostIP: 172.18.0.2
      hostIPs:
        - ip: 172.18.0.2
      initContainerStatuses:
        - containerID: containerd://8f028aaf3cfe167568de6a84bd281b59eaf4553d923c124268c7d7010c786bff
          image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/certificates@sha256:befb63aef4e1eee996c2be37c1621cd81cfeb37885db85f85000e52e94aa993a
          lastState: {}
          name: certificates
          ready: true
          restartCount: 0
          started: false
          state:
            terminated:
              containerID: containerd://8f028aaf3cfe167568de6a84bd281b59eaf4553d923c124268c7d7010c786bff
              exitCode: 0
              finishedAt: "2025-05-06T15:54:11Z"
              reason: Completed
              startedAt: "2025-05-06T15:54:10Z"
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: etc-ssl-certs
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
      phase: Running
      podIP: 10.42.0.78
      podIPs:
        - ip: 10.42.0.78
      qosClass: Burstable
      startTime: "2025-05-06T15:54:09Z"
  - apiVersion: v1
    kind: Pod
    metadata:
      annotations:
        checksum/config: cd0e5701cd886cdf296bbe882e8cee02c663ece7265d5fe2824c082611ec409f
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        gitlab.com/prometheus_path: /metrics
        gitlab.com/prometheus_port: "8151"
        gitlab.com/prometheus_scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8151"
        prometheus.io/scrape: "true"
      creationTimestamp: "2025-05-06T15:53:54Z"
      generateName: gitlab-kas-799cc6dfff-
      labels:
        app: kas
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: v17.11.1
        chart: kas-8.11.1
        heritage: Helm
        pod-template-hash: 799cc6dfff
        release: gitlab
      name: gitlab-kas-799cc6dfff-vk5vc
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: ReplicaSet
          name: gitlab-kas-799cc6dfff
          uid: e8285def-aaa2-4fa1-9230-e988d5345e5e
      resourceVersion: "8515"
      uid: 5bf703e3-e80f-442c-82cc-f9c1840cef52
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: kas
                    release: gitlab
                topologyKey: kubernetes.io/hostname
              weight: 1
      automountServiceAccountToken: false
      containers:
        - args:
            - --configuration-file=/etc/kas/config.yaml
          env:
            - name: OWN_PRIVATE_API_HOST
              value: gitlab-kas.gitlab.svc
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: OWN_PRIVATE_API_URL
              value: grpc://$(POD_IP):8155
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-kas:v17.11.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /liveness
              port: 8151
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: kas
          ports:
            - containerPort: 8150
              name: kas
              protocol: TCP
            - containerPort: 8154
              name: kas-k8s-api
              protocol: TCP
            - containerPort: 8155
              name: kas-private-api
              protocol: TCP
            - containerPort: 8151
              name: http-metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 8151
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/kas
              name: init-etc-kas
              readOnly: true
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      initContainers:
        - env:
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
          imagePullPolicy: IfNotPresent
          name: certificates
          resources:
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: etc-ssl-certs
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
      nodeName: k3d-mycluster-server-0
      preemptionPolicy: PreemptLowerPriority
      priority: 0
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 65532
        runAsGroup: 65532
        runAsUser: 65532
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 300
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
      volumes:
        - emptyDir:
            medium: Memory
          name: etc-ssl-certs
        - emptyDir:
            medium: Memory
          name: etc-pki-ca-trust-extracted-pem
        - name: init-etc-kas
          projected:
            defaultMode: 288
            sources:
              - configMap:
                  name: gitlab-kas
              - secret:
                  items:
                    - key: kas_shared_secret
                      path: .gitlab_kas_secret
                  name: gitlab-gitlab-kas-secret
              - secret:
                  items:
                    - key: kas_private_api_secret
                      path: .gitlab_kas_private_api_secret
                  name: gitlab-kas-private-api
              - secret:
                  items:
                    - key: kas_websocket_token_secret
                      path: .gitlab_kas_websocket_token_secret
                  name: gitlab-kas-websocket-token
              - secret:
                  items:
                    - key: secret
                      path: redis/redis-password
                  name: gitlab-redis-secret
    status:
      conditions:
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:53:56Z"
          status: "True"
          type: PodReadyToStartContainers
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:00Z"
          status: "True"
          type: Initialized
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:34Z"
          status: "True"
          type: Ready
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:34Z"
          status: "True"
          type: ContainersReady
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:53:54Z"
          status: "True"
          type: PodScheduled
      containerStatuses:
        - containerID: containerd://c62b090770fec2fc00e54fe7de2554652e0ed0937c05574d37ff8e0357c42dd1
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-kas:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/gitlab-kas@sha256:d01b39da8c001ce8e75e8e12a9e12149927942ad93b9329970613be69d307dd9
          lastState:
            terminated:
              containerID: containerd://5dc6f2c4c4d9b653f5c7a6d38574b9f4cc216d7333e594a95aca59457ca6bca0
              exitCode: 1
              finishedAt: "2025-05-06T15:54:05Z"
              reason: Error
              startedAt: "2025-05-06T15:54:03Z"
          name: kas
          ready: true
          restartCount: 2
          started: true
          state:
            running:
              startedAt: "2025-05-06T15:54:29Z"
          volumeMounts:
            - mountPath: /etc/kas
              name: init-etc-kas
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
              recursiveReadOnly: Disabled
      hostIP: 172.18.0.2
      hostIPs:
        - ip: 172.18.0.2
      initContainerStatuses:
        - containerID: containerd://08843f5f9a77a1f432824263b0e6951d9590c93afe38e091d14312be9f985682
          image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/certificates@sha256:befb63aef4e1eee996c2be37c1621cd81cfeb37885db85f85000e52e94aa993a
          lastState: {}
          name: certificates
          ready: true
          restartCount: 0
          started: false
          state:
            terminated:
              containerID: containerd://08843f5f9a77a1f432824263b0e6951d9590c93afe38e091d14312be9f985682
              exitCode: 0
              finishedAt: "2025-05-06T15:53:59Z"
              reason: Completed
              startedAt: "2025-05-06T15:53:55Z"
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: etc-ssl-certs
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
      phase: Running
      podIP: 10.42.0.61
      podIPs:
        - ip: 10.42.0.61
      qosClass: Burstable
      startTime: "2025-05-06T15:53:54Z"
  - apiVersion: v1
    kind: Pod
    metadata:
      creationTimestamp: "2025-05-06T15:53:54Z"
      generateName: gitlab-migrations-e83ea2f-
      labels:
        app: migrations
        batch.kubernetes.io/controller-uid: b941baf1-f2a8-4c46-9412-e2adfb6bda58
        batch.kubernetes.io/job-name: gitlab-migrations-e83ea2f
        chart: migrations-8.11.1
        controller-uid: b941baf1-f2a8-4c46-9412-e2adfb6bda58
        heritage: Helm
        job-name: gitlab-migrations-e83ea2f
        release: gitlab
      name: gitlab-migrations-e83ea2f-tfzll
      namespace: gitlab
      ownerReferences:
        - apiVersion: batch/v1
          blockOwnerDeletion: true
          controller: true
          kind: Job
          name: gitlab-migrations-e83ea2f
          uid: b941baf1-f2a8-4c46-9412-e2adfb6bda58
      resourceVersion: "8710"
      uid: a620e558-28ec-4824-8dbc-efa40999ed8f
    spec:
      automountServiceAccountToken: false
      containers:
        - args:
            - /bin/bash
            - -c
            - "set -e;\n/scripts/wait-for-deps;\n/scripts/db-migrate;\n                    \n"
          env:
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: /var/opt/gitlab/templates
            - name: CONFIG_DIRECTORY
              value: /srv/gitlab/config
            - name: BYPASS_SCHEMA_VERSION
              value: "true"
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce:v17.11.1
          imagePullPolicy: IfNotPresent
          name: migrations
          resources:
            requests:
              cpu: 250m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/opt/gitlab/templates
              name: migrations-config
            - mountPath: /etc/gitlab
              name: migrations-secrets
              readOnly: true
            - mountPath: /srv/gitlab/config/secrets.yml
              name: migrations-secrets
              subPath: rails-secrets/secrets.yml
            - mountPath: /srv/gitlab/config/initial_root_password
              name: migrations-secrets
              subPath: migrations/initial_root_password
            - mountPath: /srv/gitlab/config/gitlab_shared_runners_registration_token
              name: migrations-secrets
              subPath: migrations/gitlab_shared_runners_registration_token
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      initContainers:
        - env:
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
          imagePullPolicy: IfNotPresent
          name: certificates
          resources:
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: etc-ssl-certs
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
        - command:
            - sh
            - /config/configure
          env:
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
          imagePullPolicy: IfNotPresent
          name: configure
          resources:
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /config
              name: migrations-config
              readOnly: true
            - mountPath: /init-config
              name: init-migrations-secrets
              readOnly: true
            - mountPath: /init-secrets
              name: migrations-secrets
      nodeName: k3d-mycluster-server-0
      preemptionPolicy: PreemptLowerPriority
      priority: 0
      restartPolicy: OnFailure
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
      volumes:
        - configMap:
            defaultMode: 420
            name: gitlab-migrations
          name: migrations-config
        - name: init-migrations-secrets
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: secrets.yml
                      path: rails-secrets/secrets.yml
                  name: gitlab-rails-secret
              - secret:
                  items:
                    - key: token
                      path: gitaly/gitaly_token
                  name: gitlab-gitaly-secret
              - secret:
                  items:
                    - key: secret
                      path: redis/redis-password
                  name: gitlab-redis-secret
              - secret:
                  items:
                    - key: postgresql-password
                      path: postgres/psql-password-ci
                  name: gitlab-postgresql-password
              - secret:
                  items:
                    - key: postgresql-password
                      path: postgres/psql-password-main
                  name: gitlab-postgresql-password
              - secret:
                  items:
                    - key: password
                      path: migrations/initial_root_password
                  name: gitlab-gitlab-initial-root-password
              - secret:
                  items:
                    - key: runner-registration-token
                      path: migrations/gitlab_shared_runners_registration_token
                  name: gitlab-gitlab-runner-secret
        - emptyDir:
            medium: Memory
          name: migrations-secrets
        - emptyDir:
            medium: Memory
          name: etc-ssl-certs
        - emptyDir:
            medium: Memory
          name: etc-pki-ca-trust-extracted-pem
    status:
      conditions:
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:56:44Z"
          status: "False"
          type: PodReadyToStartContainers
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:01Z"
          reason: PodCompleted
          status: "True"
          type: Initialized
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:56:42Z"
          reason: PodCompleted
          status: "False"
          type: Ready
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:56:42Z"
          reason: PodCompleted
          status: "False"
          type: ContainersReady
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:53:54Z"
          status: "True"
          type: PodScheduled
      containerStatuses:
        - containerID: containerd://0333de158a552853c5b85265163c1c523cdf592ad5a604e808db3935e16c3468
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce@sha256:312c656da763147e01982236deef6f8094d85cc4814e55b4b8a07c44a8a09866
          lastState: {}
          name: migrations
          ready: false
          restartCount: 2
          started: false
          state:
            terminated:
              containerID: containerd://0333de158a552853c5b85265163c1c523cdf592ad5a604e808db3935e16c3468
              exitCode: 0
              finishedAt: "2025-05-06T15:56:41Z"
              reason: Completed
              startedAt: "2025-05-06T15:54:30Z"
          volumeMounts:
            - mountPath: /var/opt/gitlab/templates
              name: migrations-config
            - mountPath: /etc/gitlab
              name: migrations-secrets
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /srv/gitlab/config/secrets.yml
              name: migrations-secrets
            - mountPath: /srv/gitlab/config/initial_root_password
              name: migrations-secrets
            - mountPath: /srv/gitlab/config/gitlab_shared_runners_registration_token
              name: migrations-secrets
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
              recursiveReadOnly: Disabled
      hostIP: 172.18.0.2
      hostIPs:
        - ip: 172.18.0.2
      initContainerStatuses:
        - containerID: containerd://f6f76920171609a5b5adff5dc670219194315445552a27e15ff3d9e0a57633c8
          image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/certificates@sha256:befb63aef4e1eee996c2be37c1621cd81cfeb37885db85f85000e52e94aa993a
          lastState: {}
          name: certificates
          ready: true
          restartCount: 0
          started: false
          state:
            terminated:
              containerID: containerd://f6f76920171609a5b5adff5dc670219194315445552a27e15ff3d9e0a57633c8
              exitCode: 0
              finishedAt: "2025-05-06T15:53:59Z"
              reason: Completed
              startedAt: "2025-05-06T15:53:55Z"
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: etc-ssl-certs
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
        - containerID: containerd://c914a2ead6b3664f4ebae810583a67721140f6cf3f329f958fae105d8466d711
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/gitlab-base@sha256:471d6bd67f9dbd5473c62fdd2c7f827c012c98e36f233b63c247d5e0926fb1a5
          lastState: {}
          name: configure
          ready: true
          restartCount: 0
          started: false
          state:
            terminated:
              containerID: containerd://c914a2ead6b3664f4ebae810583a67721140f6cf3f329f958fae105d8466d711
              exitCode: 0
              finishedAt: "2025-05-06T15:54:00Z"
              reason: Completed
              startedAt: "2025-05-06T15:54:00Z"
          volumeMounts:
            - mountPath: /config
              name: migrations-config
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /init-config
              name: init-migrations-secrets
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /init-secrets
              name: migrations-secrets
      phase: Succeeded
      podIP: 10.42.0.67
      podIPs:
        - ip: 10.42.0.67
      qosClass: Burstable
      startTime: "2025-05-06T15:53:54Z"
  - apiVersion: v1
    kind: Pod
    metadata:
      creationTimestamp: "2025-05-06T15:53:54Z"
      generateName: gitlab-minio-68fdc7fdb4-
      labels:
        app: minio
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: RELEASE.2017-12-28T01-21-00Z
        chart: minio-0.4.3
        component: app
        heritage: Helm
        pod-template-hash: 68fdc7fdb4
        release: gitlab
      name: gitlab-minio-68fdc7fdb4-jl6fv
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: ReplicaSet
          name: gitlab-minio-68fdc7fdb4
          uid: 5a2eb025-fd08-4a63-94ae-fce56d8e7a58
      resourceVersion: "8238"
      uid: 459e1456-1151-4ce3-b084-01bb6086ea99
    spec:
      automountServiceAccountToken: false
      containers:
        - args:
            - -C
            - /tmp/.minio
            - --quiet
            - server
            - /export
          env:
            - name: TZ
              value: UTC
          image: minio/minio:RELEASE.2017-12-28T01-21-00Z
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 9000
            timeoutSeconds: 1
          name: minio
          ports:
            - containerPort: 9000
              name: service
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /export
              name: export
            - mountPath: /tmp/.minio
              name: minio-server-config
            - mountPath: /podinfo
              name: podinfo
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      initContainers:
        - command:
            - sh
            - /config/configure
          env:
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
          imagePullPolicy: IfNotPresent
          name: configure
          resources:
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /config
              name: minio-configuration
            - mountPath: /minio
              name: minio-server-config
      nodeName: k3d-mycluster-server-0
      preemptionPolicy: PreemptLowerPriority
      priority: 0
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
      volumes:
        - downwardAPI:
            defaultMode: 420
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels
                path: labels
          name: podinfo
        - name: export
          persistentVolumeClaim:
            claimName: gitlab-minio
        - name: minio-configuration
          projected:
            defaultMode: 420
            sources:
              - configMap:
                  name: gitlab-minio-config-cm
              - secret:
                  name: gitlab-minio-secret
        - emptyDir:
            medium: Memory
          name: minio-server-config
    status:
      conditions:
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:53:59Z"
          status: "True"
          type: PodReadyToStartContainers
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:53:59Z"
          status: "True"
          type: Initialized
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:00Z"
          status: "True"
          type: Ready
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:00Z"
          status: "True"
          type: ContainersReady
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:53:58Z"
          status: "True"
          type: PodScheduled
      containerStatuses:
        - containerID: containerd://e14c77eada30ddaaa042d27fbfae694a46bec1191db78919896faf5f78b504f2
          image: docker.io/minio/minio:RELEASE.2017-12-28T01-21-00Z
          imageID: docker.io/minio/minio@sha256:3611f1644cf5447e2f3639b4212ade26155f6a0632bef155c4d6510811c1fe1d
          lastState: {}
          name: minio
          ready: true
          restartCount: 0
          started: true
          state:
            running:
              startedAt: "2025-05-06T15:53:59Z"
          volumeMounts:
            - mountPath: /export
              name: export
            - mountPath: /tmp/.minio
              name: minio-server-config
            - mountPath: /podinfo
              name: podinfo
      hostIP: 172.18.0.2
      hostIPs:
        - ip: 172.18.0.2
      initContainerStatuses:
        - containerID: containerd://169e8368e13c971425ea5f48790d54d03de5ddc5c0f6f1c7a70abde08186c9c7
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/gitlab-base@sha256:471d6bd67f9dbd5473c62fdd2c7f827c012c98e36f233b63c247d5e0926fb1a5
          lastState: {}
          name: configure
          ready: true
          restartCount: 0
          started: false
          state:
            terminated:
              containerID: containerd://169e8368e13c971425ea5f48790d54d03de5ddc5c0f6f1c7a70abde08186c9c7
              exitCode: 0
              finishedAt: "2025-05-06T15:53:59Z"
              reason: Completed
              startedAt: "2025-05-06T15:53:59Z"
          volumeMounts:
            - mountPath: /config
              name: minio-configuration
            - mountPath: /minio
              name: minio-server-config
      phase: Running
      podIP: 10.42.0.74
      podIPs:
        - ip: 10.42.0.74
      qosClass: Burstable
      startTime: "2025-05-06T15:53:58Z"
  - apiVersion: v1
    kind: Pod
    metadata:
      creationTimestamp: "2025-05-06T15:53:54Z"
      generateName: gitlab-minio-create-buckets-c71e587-
      labels:
        app: minio
        batch.kubernetes.io/controller-uid: 8bd7872d-fe36-4db5-83a0-f8211048fcf2
        batch.kubernetes.io/job-name: gitlab-minio-create-buckets-c71e587
        chart: minio-0.4.3
        component: create-buckets
        controller-uid: 8bd7872d-fe36-4db5-83a0-f8211048fcf2
        heritage: Helm
        job-name: gitlab-minio-create-buckets-c71e587
        release: gitlab
      name: gitlab-minio-create-buckets-c71e587-sxqkm
      namespace: gitlab
      ownerReferences:
        - apiVersion: batch/v1
          blockOwnerDeletion: true
          controller: true
          kind: Job
          name: gitlab-minio-create-buckets-c71e587
          uid: 8bd7872d-fe36-4db5-83a0-f8211048fcf2
      resourceVersion: "8374"
      uid: eaafabb1-890c-4215-b6b1-f13003cad569
    spec:
      automountServiceAccountToken: false
      containers:
        - command:
            - /bin/sh
            - /config/initialize
          env:
            - name: HOME
              value: /tmp
            - name: MINIO_ENDPOINT
              value: gitlab-minio-svc.gitlab.svc
            - name: MINIO_PORT
              value: "9000"
          image: minio/mc:RELEASE.2018-07-13T00-53-22Z
          imagePullPolicy: IfNotPresent
          name: minio-mc
          resources:
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /config
              name: minio-configuration
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      nodeName: k3d-mycluster-server-0
      preemptionPolicy: PreemptLowerPriority
      priority: 0
      restartPolicy: OnFailure
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
      volumes:
        - name: minio-configuration
          projected:
            defaultMode: 420
            sources:
              - configMap:
                  name: gitlab-minio-config-cm
              - secret:
                  name: gitlab-minio-secret
    status:
      conditions:
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:06Z"
          status: "False"
          type: PodReadyToStartContainers
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:53:54Z"
          reason: PodCompleted
          status: "True"
          type: Initialized
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:05Z"
          reason: PodCompleted
          status: "False"
          type: Ready
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:05Z"
          reason: PodCompleted
          status: "False"
          type: ContainersReady
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:53:54Z"
          status: "True"
          type: PodScheduled
      containerStatuses:
        - containerID: containerd://8498241732952d89e6a66161b568ea4995afe6f4755a58542400ec6a5697da33
          image: docker.io/minio/mc:RELEASE.2018-07-13T00-53-22Z
          imageID: docker.io/minio/mc@sha256:88890e23ba30a056293bf4e83563d18ac51b4102e784c939db541bcca53c05ac
          lastState: {}
          name: minio-mc
          ready: false
          restartCount: 0
          started: false
          state:
            terminated:
              containerID: containerd://8498241732952d89e6a66161b568ea4995afe6f4755a58542400ec6a5697da33
              exitCode: 0
              finishedAt: "2025-05-06T15:54:04Z"
              reason: Completed
              startedAt: "2025-05-06T15:53:55Z"
          volumeMounts:
            - mountPath: /config
              name: minio-configuration
      hostIP: 172.18.0.2
      hostIPs:
        - ip: 172.18.0.2
      phase: Succeeded
      podIP: 10.42.0.65
      podIPs:
        - ip: 10.42.0.65
      qosClass: Burstable
      startTime: "2025-05-06T15:53:54Z"
  - apiVersion: v1
    kind: Pod
    metadata:
      annotations:
        postgresql.gitlab/init-revision: "1"
      creationTimestamp: "2025-05-06T15:53:54Z"
      generateName: gitlab-postgresql-
      labels:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: gitlab
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/version: 15.4.0
        apps.kubernetes.io/pod-index: "0"
        controller-revision-hash: gitlab-postgresql-688bb84654
        helm.sh/chart: postgresql-12.12.10
        statefulset.kubernetes.io/pod-name: gitlab-postgresql-0
      name: gitlab-postgresql-0
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: StatefulSet
          name: gitlab-postgresql
          uid: 7d594ada-a434-48ee-914b-efa87b48c648
      resourceVersion: "8431"
      uid: 32c3bfd7-01d9-4133-bbc2-88a708b9f2df
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: primary
                    app.kubernetes.io/instance: gitlab
                    app.kubernetes.io/name: postgresql
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: /bitnami/postgresql
            - name: PGDATA
              value: /bitnami/postgresql/data
            - name: POSTGRES_USER
              value: gitlab
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgresql-password
                  name: gitlab-postgresql-password
            - name: POSTGRES_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgresql-postgres-password
                  name: gitlab-postgresql-password
            - name: POSTGRES_DATABASE
              value: gitlabhq_production
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: error
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: pgaudit
          image: docker.io/bitnami/postgresql:14.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "gitlab" -d "dbname=gitlabhq_production" -h 127.0.0.1 -p 5432
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: postgresql
          ports:
            - containerPort: 5432
              name: tcp-postgresql
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "gitlab" -d "dbname=gitlabhq_production" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsGroup: 0
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/
              name: custom-init-scripts
            - mountPath: /dev/shm
              name: dshm
            - mountPath: /bitnami/postgresql
              name: data
            - mountPath: /docker-entrypoint-preinitdb.d/init_revision.sh
              name: custom-init-scripts
              subPath: init_revision.sh
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: kube-api-access-9bmvh
              readOnly: true
        - env:
            - name: DATA_SOURCE_URI
              value: 127.0.0.1:5432/gitlabhq_production?sslmode=disable
            - name: DATA_SOURCE_PASS
              valueFrom:
                secretKeyRef:
                  key: postgresql-password
                  name: gitlab-postgresql-password
            - name: DATA_SOURCE_USER
              value: gitlab
          image: docker.io/bitnami/postgres-exporter:0.14.0-debian-11-r2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /
              port: http-metrics
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: metrics
          ports:
            - containerPort: 9187
              name: http-metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /
              port: http-metrics
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsGroup: 0
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: kube-api-access-9bmvh
              readOnly: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      hostname: gitlab-postgresql-0
      nodeName: k3d-mycluster-server-0
      preemptionPolicy: PreemptLowerPriority
      priority: 0
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
      serviceAccount: default
      serviceAccountName: default
      subdomain: gitlab-postgresql-hl
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data-gitlab-postgresql-0
        - configMap:
            defaultMode: 420
            name: gitlab-postgresql-init-db
          name: custom-init-scripts
        - emptyDir:
            medium: Memory
          name: dshm
        - name: kube-api-access-9bmvh
          projected:
            defaultMode: 420
            sources:
              - serviceAccountToken:
                  expirationSeconds: 3607
                  path: token
              - configMap:
                  items:
                    - key: ca.crt
                      path: ca.crt
                  name: kube-root-ca.crt
              - downwardAPI:
                  items:
                    - fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.namespace
                      path: namespace
    status:
      conditions:
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:03Z"
          status: "True"
          type: PodReadyToStartContainers
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:00Z"
          status: "True"
          type: Initialized
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:11Z"
          status: "True"
          type: Ready
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:11Z"
          status: "True"
          type: ContainersReady
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:00Z"
          status: "True"
          type: PodScheduled
      containerStatuses:
        - containerID: containerd://86c6cb8bea8e7c1416e3537d110b64027e60d51d73062649b2000ceab3c769d3
          image: docker.io/bitnami/postgres-exporter:0.14.0-debian-11-r2
          imageID: docker.io/bitnami/postgres-exporter@sha256:cfecb2a33789173be41e20d515dd81d8e7f55583a8c985753f43702bb67314f6
          lastState: {}
          name: metrics
          ready: true
          restartCount: 0
          started: true
          state:
            running:
              startedAt: "2025-05-06T15:54:02Z"
          volumeMounts:
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: kube-api-access-9bmvh
              readOnly: true
              recursiveReadOnly: Disabled
        - containerID: containerd://0eb63aeb33b228f65d22df24aa6a7787a059ce0ffa7d51d55cfdd88bf1bce783
          image: docker.io/bitnami/postgresql:14.8.0
          imageID: docker.io/bitnami/postgresql@sha256:ba5e9a674d6837dc992f1ad3dba96d8348460950bb944020cabea4eafd84c0a1
          lastState: {}
          name: postgresql
          ready: true
          restartCount: 0
          started: true
          state:
            running:
              startedAt: "2025-05-06T15:54:01Z"
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/
              name: custom-init-scripts
            - mountPath: /dev/shm
              name: dshm
            - mountPath: /bitnami/postgresql
              name: data
            - mountPath: /docker-entrypoint-preinitdb.d/init_revision.sh
              name: custom-init-scripts
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: kube-api-access-9bmvh
              readOnly: true
              recursiveReadOnly: Disabled
      hostIP: 172.18.0.2
      hostIPs:
        - ip: 172.18.0.2
      phase: Running
      podIP: 10.42.0.76
      podIPs:
        - ip: 10.42.0.76
      qosClass: Burstable
      startTime: "2025-05-06T15:54:00Z"
  - apiVersion: v1
    kind: Pod
    metadata:
      annotations:
        checksum/configmap: 86bcc953bb473748a3d3dc60b7c11f34e60c93519234d4c37f42e22ada559d47
        checksum/health: aff24913d801436ea469d8d374b2ddb3ec4c43ee7ab24663d5f8ff1a1b6991a9
        checksum/scripts: 560c33ff34d845009b51830c332aa05fa211444d1877d3526d3599be7543aaa5
        checksum/secret: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        prometheus.io/port: "9121"
        prometheus.io/scrape: "true"
      creationTimestamp: "2025-05-06T15:53:54Z"
      generateName: gitlab-redis-master-
      labels:
        app.kubernetes.io/component: master
        app.kubernetes.io/instance: gitlab
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redis
        app.kubernetes.io/version: 7.2.4
        apps.kubernetes.io/pod-index: "0"
        controller-revision-hash: gitlab-redis-master-5d556fd764
        helm.sh/chart: redis-18.19.4
        statefulset.kubernetes.io/pod-name: gitlab-redis-master-0
      name: gitlab-redis-master-0
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: StatefulSet
          name: gitlab-redis-master
          uid: ae5c8a26-84e1-4c04-bb8c-3e5dc8a70e47
      resourceVersion: "8488"
      uid: 4da27c2a-2b6e-485a-994d-f9c2715933b5
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: master
                    app.kubernetes.io/instance: gitlab
                    app.kubernetes.io/name: redis
                topologyKey: kubernetes.io/hostname
              weight: 1
      automountServiceAccountToken: false
      containers:
        - args:
            - -c
            - /opt/bitnami/scripts/start-scripts/start-master.sh
          command:
            - /bin/bash
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: REDIS_REPLICATION_MODE
              value: master
            - name: ALLOW_EMPTY_PASSWORD
              value: "no"
            - name: REDIS_PASSWORD_FILE
              value: /opt/bitnami/redis/secrets/redis-password
            - name: REDIS_TLS_ENABLED
              value: "no"
            - name: REDIS_PORT
              value: "6379"
          image: docker.io/bitnami/redis:7.2.4-debian-12-r9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - /health/ping_liveness_local.sh 5
            failureThreshold: 5
            initialDelaySeconds: 20
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 6
          name: redis
          ports:
            - containerPort: 6379
              name: redis
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - /health/ping_readiness_local.sh 1
            failureThreshold: 5
            initialDelaySeconds: 20
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /opt/bitnami/scripts/start-scripts
              name: start-scripts
            - mountPath: /health
              name: health
            - mountPath: /opt/bitnami/redis/secrets/
              name: redis-password
            - mountPath: /data
              name: redis-data
            - mountPath: /opt/bitnami/redis/mounted-etc
              name: config
            - mountPath: /opt/bitnami/redis/etc/
              name: empty-dir
              subPath: app-conf-dir
            - mountPath: /tmp
              name: empty-dir
              subPath: tmp-dir
        - command:
            - /bin/bash
            - -c
            - |
              if [[ -f '/secrets/redis-password' ]]; then
              export REDIS_PASSWORD=$(cat /secrets/redis-password)
              fi
              redis_exporter
          env:
            - name: REDIS_ALIAS
              value: gitlab-redis
            - name: REDIS_EXPORTER_WEB_LISTEN_ADDRESS
              value: :9121
            - name: REDIS_USER
              value: default
          image: docker.io/bitnami/redis-exporter:1.58.0-debian-12-r4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: metrics
            timeoutSeconds: 5
          name: metrics
          ports:
            - containerPort: 9121
              name: metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /tmp
              name: empty-dir
              subPath: app-tmp-dir
            - mountPath: /secrets/
              name: redis-password
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      hostname: gitlab-redis-master-0
      nodeName: k3d-mycluster-server-0
      preemptionPolicy: PreemptLowerPriority
      priority: 0
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
      serviceAccount: gitlab-redis-master
      serviceAccountName: gitlab-redis-master
      subdomain: gitlab-redis-headless
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-data-gitlab-redis-master-0
        - configMap:
            defaultMode: 493
            name: gitlab-redis-scripts
          name: start-scripts
        - configMap:
            defaultMode: 493
            name: gitlab-redis-health
          name: health
        - name: redis-password
          secret:
            defaultMode: 420
            items:
              - key: secret
                path: redis-password
            secretName: gitlab-redis-secret
        - configMap:
            defaultMode: 420
            name: gitlab-redis-configuration
          name: config
        - emptyDir: {}
          name: empty-dir
    status:
      conditions:
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:04Z"
          status: "True"
          type: PodReadyToStartContainers
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:00Z"
          status: "True"
          type: Initialized
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:26Z"
          status: "True"
          type: Ready
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:26Z"
          status: "True"
          type: ContainersReady
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:00Z"
          status: "True"
          type: PodScheduled
      containerStatuses:
        - containerID: containerd://ef8dd6cd0ef0a7547817e97af3cd1689e24a4e8dd732f678dd40882cfa1e57e8
          image: docker.io/bitnami/redis-exporter:1.58.0-debian-12-r4
          imageID: docker.io/bitnami/redis-exporter@sha256:1c1ab23f5dd780f8203f1b4f764a12c2853ae191ea983e1f26228b47576758fe
          lastState: {}
          name: metrics
          ready: true
          restartCount: 0
          started: true
          state:
            running:
              startedAt: "2025-05-06T15:54:03Z"
          volumeMounts:
            - mountPath: /tmp
              name: empty-dir
            - mountPath: /secrets/
              name: redis-password
        - containerID: containerd://a4843ddfcf294ac58eebcfd2bf824c98337439ae2821d7e2e9553dea339b583e
          image: docker.io/bitnami/redis:7.2.4-debian-12-r9
          imageID: docker.io/bitnami/redis@sha256:c1843bcdb2f413d2aff67adbaf482082673cd40ec602fa9fefad74ec685cb813
          lastState: {}
          name: redis
          ready: true
          restartCount: 0
          started: true
          state:
            running:
              startedAt: "2025-05-06T15:54:02Z"
          volumeMounts:
            - mountPath: /opt/bitnami/scripts/start-scripts
              name: start-scripts
            - mountPath: /health
              name: health
            - mountPath: /opt/bitnami/redis/secrets/
              name: redis-password
            - mountPath: /data
              name: redis-data
            - mountPath: /opt/bitnami/redis/mounted-etc
              name: config
            - mountPath: /opt/bitnami/redis/etc/
              name: empty-dir
            - mountPath: /tmp
              name: empty-dir
      hostIP: 172.18.0.2
      hostIPs:
        - ip: 172.18.0.2
      phase: Running
      podIP: 10.42.0.77
      podIPs:
        - ip: 10.42.0.77
      qosClass: BestEffort
      startTime: "2025-05-06T15:54:00Z"
  - apiVersion: v1
    kind: Pod
    metadata:
      annotations:
        checksum/configmap: 840dba49c1629192eac0ddefb235b0e1b6f2acae680290acc888bf1b8578ff7a
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      creationTimestamp: "2025-05-06T15:53:54Z"
      generateName: gitlab-registry-6dd584bfb5-
      labels:
        app: registry
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: v17.11.1
        chart: registry-0.7.0
        heritage: Helm
        pod-template-hash: 6dd584bfb5
        release: gitlab
      name: gitlab-registry-6dd584bfb5-kjhkm
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: ReplicaSet
          name: gitlab-registry-6dd584bfb5
          uid: 77242983-8045-47f0-967b-fa9a62a865b3
      resourceVersion: "8412"
      uid: 3f2b91fb-364e-41ab-82ee-f40446ecba56
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: registry
                    release: gitlab
                topologyKey: kubernetes.io/hostname
              weight: 1
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-container-registry:v4.19.0-gitlab
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/bash
                  - -c
                  - sleep 5
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /debug/health
              port: debug
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: registry
          ports:
            - containerPort: 5000
              name: http
              protocol: TCP
            - containerPort: 5001
              name: debug
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /debug/health
              port: debug
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 50m
              memory: 32Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/docker/registry/
              name: registry-server-config
              readOnly: true
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      initContainers:
        - env:
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
          imagePullPolicy: IfNotPresent
          name: certificates
          resources:
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: etc-ssl-certs
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
        - args:
            - sh
            - /config/configure
          env:
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: /templates
            - name: CONFIG_DIRECTORY
              value: /registry
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
          imagePullPolicy: IfNotPresent
          name: configure
          resources:
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /config
              name: registry-secrets
            - mountPath: /templates
              name: registry-server-config-templates
              readOnly: true
            - mountPath: /registry
              name: registry-server-config
      nodeName: k3d-mycluster-server-0
      preemptionPolicy: PreemptLowerPriority
      priority: 0
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: config.yml.tpl
                path: config.yml.tpl
            name: gitlab-registry
          name: registry-server-config-templates
        - emptyDir:
            medium: Memory
          name: registry-server-config
        - name: registry-secrets
          projected:
            defaultMode: 420
            sources:
              - configMap:
                  name: gitlab-registry
              - secret:
                  items:
                    - key: registry-auth.crt
                      path: certificate.crt
                  name: gitlab-registry-secret
              - secret:
                  items:
                    - key: secret
                      path: httpSecret
                  name: gitlab-registry-httpsecret
              - secret:
                  name: gitlab-minio-secret
        - emptyDir:
            medium: Memory
          name: etc-ssl-certs
        - emptyDir:
            medium: Memory
          name: etc-pki-ca-trust-extracted-pem
    status:
      conditions:
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:53:56Z"
          status: "True"
          type: PodReadyToStartContainers
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:01Z"
          status: "True"
          type: Initialized
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:09Z"
          status: "True"
          type: Ready
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:09Z"
          status: "True"
          type: ContainersReady
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:53:54Z"
          status: "True"
          type: PodScheduled
      containerStatuses:
        - containerID: containerd://1634af160af843e48418be62dbae11c73fcd50a7bd488e213eccb3e468ef9ada
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-container-registry:v4.19.0-gitlab
          imageID: registry.gitlab.com/gitlab-org/build/cng/gitlab-container-registry@sha256:ae6f8dc658b47b59c7c0304c4bccfb823b2d5d21f49d0c495a0dd4dea1fe0f41
          lastState: {}
          name: registry
          ready: true
          restartCount: 0
          started: true
          state:
            running:
              startedAt: "2025-05-06T15:54:02Z"
          volumeMounts:
            - mountPath: /etc/docker/registry/
              name: registry-server-config
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
              recursiveReadOnly: Disabled
      hostIP: 172.18.0.2
      hostIPs:
        - ip: 172.18.0.2
      initContainerStatuses:
        - containerID: containerd://131f0d8c3c2d023609af2961100d58c14cbbf466e4d23737c825569510d19239
          image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/certificates@sha256:befb63aef4e1eee996c2be37c1621cd81cfeb37885db85f85000e52e94aa993a
          lastState: {}
          name: certificates
          ready: true
          restartCount: 0
          started: false
          state:
            terminated:
              containerID: containerd://131f0d8c3c2d023609af2961100d58c14cbbf466e4d23737c825569510d19239
              exitCode: 0
              finishedAt: "2025-05-06T15:54:00Z"
              reason: Completed
              startedAt: "2025-05-06T15:53:55Z"
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: etc-ssl-certs
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
        - containerID: containerd://927dfc35006941301f0aceb79d44a213ce919c29c16e8ebb259ca544a4a27737
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/gitlab-base@sha256:471d6bd67f9dbd5473c62fdd2c7f827c012c98e36f233b63c247d5e0926fb1a5
          lastState: {}
          name: configure
          ready: true
          restartCount: 0
          started: false
          state:
            terminated:
              containerID: containerd://927dfc35006941301f0aceb79d44a213ce919c29c16e8ebb259ca544a4a27737
              exitCode: 0
              finishedAt: "2025-05-06T15:54:00Z"
              reason: Completed
              startedAt: "2025-05-06T15:54:00Z"
          volumeMounts:
            - mountPath: /config
              name: registry-secrets
            - mountPath: /templates
              name: registry-server-config-templates
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /registry
              name: registry-server-config
      phase: Running
      podIP: 10.42.0.62
      podIPs:
        - ip: 10.42.0.62
      qosClass: Burstable
      startTime: "2025-05-06T15:53:54Z"
  - apiVersion: v1
    kind: Pod
    metadata:
      annotations:
        checksum/configmap: 3fd9390b8ac4b62085613cb2b4a44fc5be33f31920ba6f7df58588277a8bdf74
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        gitlab.com/prometheus_path: /metrics
        gitlab.com/prometheus_port: "3807"
        gitlab.com/prometheus_scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "3807"
        prometheus.io/scrape: "true"
      creationTimestamp: "2025-05-06T15:53:54Z"
      generateName: gitlab-sidekiq-all-in-1-v2-79c9955c5d-
      labels:
        app: sidekiq
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: v17.11.1
        chart: sidekiq-8.11.1
        heritage: Helm
        pod-template-hash: 79c9955c5d
        queue-pod-name: all-in-1
        release: gitlab
      name: gitlab-sidekiq-all-in-1-v2-79c9955c5d-kdvx2
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: ReplicaSet
          name: gitlab-sidekiq-all-in-1-v2-79c9955c5d
          uid: d282ad98-d0cc-4692-9dd8-207c2be573db
      resourceVersion: "8672"
      uid: 720defd0-2a88-4761-b688-a07e07c90401
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: sidekiq
                    release: gitlab
                topologyKey: kubernetes.io/hostname
              weight: 1
      automountServiceAccountToken: false
      containers:
        - env:
            - name: prometheus_multiproc_dir
              value: /metrics
            - name: GITALY_FEATURE_DEFAULT_ON
              value: "1"
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: /var/opt/gitlab/templates
            - name: CONFIG_DIRECTORY
              value: /srv/gitlab/config
            - name: SIDEKIQ_CONCURRENCY
              value: "20"
            - name: SIDEKIQ_TIMEOUT
              value: "25"
            - name: SIDEKIQ_QUEUES
            - name: SIDEKIQ_DAEMON_MEMORY_KILLER
              value: "1"
            - name: SIDEKIQ_MEMORY_KILLER_CHECK_INTERVAL
              value: "3"
            - name: SIDEKIQ_MEMORY_KILLER_MAX_RSS
              value: "2000000"
            - name: SIDEKIQ_MEMORY_KILLER_GRACE_TIME
              value: "900"
            - name: SIDEKIQ_MEMORY_KILLER_SHUTDOWN_WAIT
              value: "30"
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce:v17.11.1
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/bash
                  - -c
                  - pkill -f 'sidekiq'
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /liveness
              port: 3808
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 30
          name: sidekiq
          ports:
            - containerPort: 3807
              name: http-metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 3808
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            requests:
              cpu: 900m
              memory: 2G
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /metrics
              name: sidekiq-metrics
            - mountPath: /var/opt/gitlab/templates
              name: sidekiq-config
              readOnly: true
            - mountPath: /etc/gitlab
              name: sidekiq-secrets
              readOnly: true
            - mountPath: /srv/gitlab/config/secrets.yml
              name: sidekiq-secrets
              subPath: rails-secrets/secrets.yml
            - mountPath: /etc/krb5.conf
              name: sidekiq-config
              subPath: krb5.conf
            - mountPath: /srv/gitlab/config/initializers/smtp_settings.rb
              name: sidekiq-config
              subPath: smtp_settings.rb
            - mountPath: /srv/gitlab/INSTALLATION_TYPE
              name: sidekiq-config
              subPath: installation_type
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      initContainers:
        - env:
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
          imagePullPolicy: IfNotPresent
          name: certificates
          resources:
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: etc-ssl-certs
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
        - command:
            - sh
            - /config/configure
          env:
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
          imagePullPolicy: IfNotPresent
          name: configure
          resources:
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /config
              name: sidekiq-config
              readOnly: true
            - mountPath: /init-config
              name: init-sidekiq-secrets
              readOnly: true
            - mountPath: /init-secrets
              name: sidekiq-secrets
        - args:
            - /scripts/wait-for-deps
          env:
            - name: GITALY_FEATURE_DEFAULT_ON
              value: "1"
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: /var/opt/gitlab/templates
            - name: CONFIG_DIRECTORY
              value: /srv/gitlab/config
            - name: SIDEKIQ_CONCURRENCY
              value: "20"
            - name: SIDEKIQ_TIMEOUT
              value: "25"
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce:v17.11.1
          imagePullPolicy: IfNotPresent
          name: dependencies
          resources:
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
            - mountPath: /var/opt/gitlab/templates
              name: sidekiq-config
              readOnly: true
            - mountPath: /etc/gitlab
              name: sidekiq-secrets
              readOnly: true
            - mountPath: /srv/gitlab/config/secrets.yml
              name: sidekiq-secrets
              readOnly: true
              subPath: rails-secrets/secrets.yml
      nodeName: k3d-mycluster-server-0
      preemptionPolicy: PreemptLowerPriority
      priority: 0
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
      volumes:
        - emptyDir:
            medium: Memory
          name: sidekiq-metrics
        - name: sidekiq-config
          projected:
            defaultMode: 420
            sources:
              - configMap:
                  name: gitlab-sidekiq
        - name: init-sidekiq-secrets
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: secrets.yml
                      path: rails-secrets/secrets.yml
                  name: gitlab-rails-secret
              - secret:
                  items:
                    - key: token
                      path: gitaly/gitaly_token
                  name: gitlab-gitaly-secret
              - secret:
                  items:
                    - key: secret
                      path: redis/redis-password
                  name: gitlab-redis-secret
              - secret:
                  items:
                    - key: postgresql-password
                      path: postgres/psql-password-ci
                  name: gitlab-postgresql-password
              - secret:
                  items:
                    - key: postgresql-password
                      path: postgres/psql-password-main
                  name: gitlab-postgresql-password
              - secret:
                  items:
                    - key: registry-auth.key
                      path: registry/gitlab-registry.key
                  name: gitlab-registry-secret
              - secret:
                  items:
                    - key: secret
                      path: registry/notificationSecret
                  name: gitlab-registry-notification
              - secret:
                  items:
                    - key: kas_shared_secret
                      path: kas/.gitlab_kas_secret
                  name: gitlab-gitlab-kas-secret
              - secret:
                  items:
                    - key: suggested_reviewers_secret
                      path: suggested_reviewers/.gitlab_suggested_reviewers_secret
                  name: gitlab-gitlab-suggested-reviewers
              - secret:
                  items:
                    - key: gitlab_username
                      path: zoekt/.gitlab_zoekt_username
                    - key: gitlab_password
                      path: zoekt/.gitlab_zoekt_password
                  name: gitlab-zoekt-basicauth
                  optional: true
              - secret:
                  items:
                    - key: accesskey
                      path: minio/accesskey
                    - key: secretkey
                      path: minio/secretkey
                  name: gitlab-minio-secret
        - emptyDir:
            medium: Memory
          name: sidekiq-secrets
        - emptyDir:
            medium: Memory
          name: etc-ssl-certs
        - emptyDir:
            medium: Memory
          name: etc-pki-ca-trust-extracted-pem
    status:
      conditions:
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:53:56Z"
          status: "True"
          type: PodReadyToStartContainers
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:55:28Z"
          status: "True"
          type: Initialized
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:56:31Z"
          status: "True"
          type: Ready
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:56:31Z"
          status: "True"
          type: ContainersReady
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:53:54Z"
          status: "True"
          type: PodScheduled
      containerStatuses:
        - containerID: containerd://184bd1680d6dfa0debb4263243e49f0c8efa8baa3c293dae56ca0d90364b6d14
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce@sha256:b321d3ec2389db31c3baff28aa66c2885ac876bb32a0e75b8ede4f6c17955961
          lastState: {}
          name: sidekiq
          ready: true
          restartCount: 0
          started: true
          state:
            running:
              startedAt: "2025-05-06T15:55:28Z"
          volumeMounts:
            - mountPath: /metrics
              name: sidekiq-metrics
            - mountPath: /var/opt/gitlab/templates
              name: sidekiq-config
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /etc/gitlab
              name: sidekiq-secrets
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /srv/gitlab/config/secrets.yml
              name: sidekiq-secrets
            - mountPath: /etc/krb5.conf
              name: sidekiq-config
            - mountPath: /srv/gitlab/config/initializers/smtp_settings.rb
              name: sidekiq-config
            - mountPath: /srv/gitlab/INSTALLATION_TYPE
              name: sidekiq-config
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
              recursiveReadOnly: Disabled
      hostIP: 172.18.0.2
      hostIPs:
        - ip: 172.18.0.2
      initContainerStatuses:
        - containerID: containerd://f238a94137f0ac02558d581cdd689bfd1ee15e58cba9ba1086f0c3ddfd1619da
          image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/certificates@sha256:befb63aef4e1eee996c2be37c1621cd81cfeb37885db85f85000e52e94aa993a
          lastState: {}
          name: certificates
          ready: true
          restartCount: 0
          started: false
          state:
            terminated:
              containerID: containerd://f238a94137f0ac02558d581cdd689bfd1ee15e58cba9ba1086f0c3ddfd1619da
              exitCode: 0
              finishedAt: "2025-05-06T15:53:58Z"
              reason: Completed
              startedAt: "2025-05-06T15:53:55Z"
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: etc-ssl-certs
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
        - containerID: containerd://98ce8a9e54a50a0f9c8c8c0db873be2b63a8c146fa5c95b6b7eb4ec21725eaf1
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/gitlab-base@sha256:471d6bd67f9dbd5473c62fdd2c7f827c012c98e36f233b63c247d5e0926fb1a5
          lastState: {}
          name: configure
          ready: true
          restartCount: 0
          started: false
          state:
            terminated:
              containerID: containerd://98ce8a9e54a50a0f9c8c8c0db873be2b63a8c146fa5c95b6b7eb4ec21725eaf1
              exitCode: 0
              finishedAt: "2025-05-06T15:53:59Z"
              reason: Completed
              startedAt: "2025-05-06T15:53:59Z"
          volumeMounts:
            - mountPath: /config
              name: sidekiq-config
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /init-config
              name: init-sidekiq-secrets
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /init-secrets
              name: sidekiq-secrets
        - containerID: containerd://36c69086516eddb848c902f4bbd9e9c43d0499e44978c2af4e026ec1ed7cd54e
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce@sha256:b321d3ec2389db31c3baff28aa66c2885ac876bb32a0e75b8ede4f6c17955961
          lastState: {}
          name: dependencies
          ready: true
          restartCount: 2
          started: false
          state:
            terminated:
              containerID: containerd://36c69086516eddb848c902f4bbd9e9c43d0499e44978c2af4e026ec1ed7cd54e
              exitCode: 0
              finishedAt: "2025-05-06T15:55:28Z"
              reason: Completed
              startedAt: "2025-05-06T15:55:24Z"
          volumeMounts:
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /var/opt/gitlab/templates
              name: sidekiq-config
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /etc/gitlab
              name: sidekiq-secrets
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /srv/gitlab/config/secrets.yml
              name: sidekiq-secrets
              readOnly: true
              recursiveReadOnly: Disabled
      phase: Running
      podIP: 10.42.0.63
      podIPs:
        - ip: 10.42.0.63
      qosClass: Burstable
      startTime: "2025-05-06T15:53:54Z"
  - apiVersion: v1
    kind: Pod
    metadata:
      annotations:
        checksum/config: b9d8cc05eee84b5d587b6b2f1830174bb8b0ee817ce90c82c9e871403f61332a
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      creationTimestamp: "2025-05-06T15:53:54Z"
      generateName: gitlab-toolbox-6f44749bb7-
      labels:
        app: toolbox
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: v17.11.1
        chart: toolbox-8.11.1
        heritage: Helm
        pod-template-hash: 6f44749bb7
        release: gitlab
      name: gitlab-toolbox-6f44749bb7-88qnx
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: ReplicaSet
          name: gitlab-toolbox-6f44749bb7
          uid: 4403ddcf-883f-42c9-85a3-de3939694bd5
      resourceVersion: "8352"
      uid: 03a1ab30-425d-45a7-80da-2a55b7fd06de
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: gitaly
                    release: gitlab
                topologyKey: kubernetes.io/hostname
              weight: 1
      automountServiceAccountToken: false
      containers:
        - args:
            - /bin/bash
            - -c
            - cp -v -r -L /etc/gitlab/.s3cfg $HOME/.s3cfg && while sleep 3600; do :; done
          env:
            - name: ARTIFACTS_BUCKET_NAME
              value: gitlab-artifacts
            - name: REGISTRY_BUCKET_NAME
              value: registry
            - name: LFS_BUCKET_NAME
              value: git-lfs
            - name: UPLOADS_BUCKET_NAME
              value: gitlab-uploads
            - name: PACKAGES_BUCKET_NAME
              value: gitlab-packages
            - name: EXTERNAL_DIFFS_BUCKET_NAME
              value: gitlab-mr-diffs
            - name: TERRAFORM_STATE_BUCKET_NAME
              value: gitlab-terraform-state
            - name: CI_SECURE_FILES_BUCKET_NAME
              value: gitlab-ci-secure-files
            - name: BACKUP_BUCKET_NAME
              value: gitlab-backups
            - name: BACKUP_BACKEND
              value: s3
            - name: TMP_BUCKET_NAME
              value: tmp
            - name: PAGES_BUCKET_NAME
              value: gitlab-pages
            - name: GITALY_FEATURE_DEFAULT_ON
              value: "1"
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: /var/opt/gitlab/templates
            - name: CONFIG_DIRECTORY
              value: /srv/gitlab/config
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce:v17.11.1
          imagePullPolicy: IfNotPresent
          name: toolbox
          resources:
            requests:
              cpu: 50m
              memory: 350M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/opt/gitlab/templates
              name: toolbox-config
            - mountPath: /etc/krb5.conf
              name: toolbox-config
              subPath: krb5.conf
            - mountPath: /srv/gitlab/config/initializers/smtp_settings.rb
              name: toolbox-config
              subPath: smtp_settings.rb
            - mountPath: /etc/gitlab
              name: toolbox-secrets
              readOnly: true
            - mountPath: /srv/gitlab/config/secrets.yml
              name: toolbox-secrets
              subPath: rails-secrets/secrets.yml
            - mountPath: /srv/gitlab/tmp
              name: toolbox-tmp
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      initContainers:
        - env:
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
          imagePullPolicy: IfNotPresent
          name: certificates
          resources:
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: etc-ssl-certs
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
        - command:
            - sh
            - /config/configure
          env:
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
          imagePullPolicy: IfNotPresent
          name: configure
          resources:
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /config
              name: toolbox-config
              readOnly: true
            - mountPath: /init-config
              name: init-toolbox-secrets
              readOnly: true
            - mountPath: /init-secrets
              name: toolbox-secrets
      nodeName: k3d-mycluster-server-0
      preemptionPolicy: PreemptLowerPriority
      priority: 0
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
      volumes:
        - name: toolbox-config
          projected:
            defaultMode: 420
            sources:
              - configMap:
                  name: gitlab-toolbox
        - emptyDir: {}
          name: toolbox-tmp
        - name: init-toolbox-secrets
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: secrets.yml
                      path: rails-secrets/secrets.yml
                  name: gitlab-rails-secret
              - secret:
                  items:
                    - key: secret
                      path: shell/.gitlab_shell_secret
                  name: gitlab-gitlab-shell-secret
              - secret:
                  items:
                    - key: token
                      path: gitaly/gitaly_token
                  name: gitlab-gitaly-secret
              - secret:
                  items:
                    - key: secret
                      path: redis/redis-password
                  name: gitlab-redis-secret
              - secret:
                  items:
                    - key: postgresql-password
                      path: postgres/psql-password-ci
                  name: gitlab-postgresql-password
              - secret:
                  items:
                    - key: postgresql-password
                      path: postgres/psql-password-main
                  name: gitlab-postgresql-password
              - secret:
                  items:
                    - key: registry-auth.key
                      path: registry/gitlab-registry.key
                  name: gitlab-registry-secret
              - secret:
                  items:
                    - key: secret
                      path: registry/notificationSecret
                  name: gitlab-registry-notification
              - secret:
                  items:
                    - key: kas_shared_secret
                      path: kas/.gitlab_kas_secret
                  name: gitlab-gitlab-kas-secret
              - secret:
                  items:
                    - key: suggested_reviewers_secret
                      path: suggested_reviewers/.gitlab_suggested_reviewers_secret
                  name: gitlab-gitlab-suggested-reviewers
              - secret:
                  items:
                    - key: gitlab_username
                      path: zoekt/.gitlab_zoekt_username
                    - key: gitlab_password
                      path: zoekt/.gitlab_zoekt_password
                  name: gitlab-zoekt-basicauth
                  optional: true
              - secret:
                  items:
                    - key: accesskey
                      path: minio/accesskey
                    - key: secretkey
                      path: minio/secretkey
                  name: gitlab-minio-secret
        - emptyDir:
            medium: Memory
          name: toolbox-secrets
        - emptyDir:
            medium: Memory
          name: etc-ssl-certs
        - emptyDir:
            medium: Memory
          name: etc-pki-ca-trust-extracted-pem
    status:
      conditions:
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:53:57Z"
          status: "True"
          type: PodReadyToStartContainers
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:03Z"
          status: "True"
          type: Initialized
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:04Z"
          status: "True"
          type: Ready
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:54:04Z"
          status: "True"
          type: ContainersReady
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:53:54Z"
          status: "True"
          type: PodScheduled
      containerStatuses:
        - containerID: containerd://b0fdc66db6b3715fc6f1dfac93fe8779e65ba70a09d952def17be68427907576
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce@sha256:312c656da763147e01982236deef6f8094d85cc4814e55b4b8a07c44a8a09866
          lastState: {}
          name: toolbox
          ready: true
          restartCount: 0
          started: true
          state:
            running:
              startedAt: "2025-05-06T15:54:03Z"
          volumeMounts:
            - mountPath: /var/opt/gitlab/templates
              name: toolbox-config
            - mountPath: /etc/krb5.conf
              name: toolbox-config
            - mountPath: /srv/gitlab/config/initializers/smtp_settings.rb
              name: toolbox-config
            - mountPath: /etc/gitlab
              name: toolbox-secrets
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /srv/gitlab/config/secrets.yml
              name: toolbox-secrets
            - mountPath: /srv/gitlab/tmp
              name: toolbox-tmp
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
              recursiveReadOnly: Disabled
      hostIP: 172.18.0.2
      hostIPs:
        - ip: 172.18.0.2
      initContainerStatuses:
        - containerID: containerd://085b97a8de9f9f323655c4685f7b0598ddb3e5c5186c83fd38d22a12c11305ed
          image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/certificates@sha256:befb63aef4e1eee996c2be37c1621cd81cfeb37885db85f85000e52e94aa993a
          lastState: {}
          name: certificates
          ready: true
          restartCount: 0
          started: false
          state:
            terminated:
              containerID: containerd://085b97a8de9f9f323655c4685f7b0598ddb3e5c5186c83fd38d22a12c11305ed
              exitCode: 0
              finishedAt: "2025-05-06T15:54:00Z"
              reason: Completed
              startedAt: "2025-05-06T15:53:56Z"
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: etc-ssl-certs
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
        - containerID: containerd://042705bf1a3fc6d8b669941db5fd54499608d6f2d018cc77df3285cc14c55220
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/gitlab-base@sha256:471d6bd67f9dbd5473c62fdd2c7f827c012c98e36f233b63c247d5e0926fb1a5
          lastState: {}
          name: configure
          ready: true
          restartCount: 0
          started: false
          state:
            terminated:
              containerID: containerd://042705bf1a3fc6d8b669941db5fd54499608d6f2d018cc77df3285cc14c55220
              exitCode: 0
              finishedAt: "2025-05-06T15:54:02Z"
              reason: Completed
              startedAt: "2025-05-06T15:54:02Z"
          volumeMounts:
            - mountPath: /config
              name: toolbox-config
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /init-config
              name: init-toolbox-secrets
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /init-secrets
              name: toolbox-secrets
      phase: Running
      podIP: 10.42.0.73
      podIPs:
        - ip: 10.42.0.73
      qosClass: Burstable
      startTime: "2025-05-06T15:53:54Z"
  - apiVersion: v1
    kind: Pod
    metadata:
      annotations:
        checksum/config: d26dca7a19e69253f24a88ae26d0c1fba73ea8f9129c03d36eca4227fa175ff4
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        gitlab.com/prometheus_path: /metrics
        gitlab.com/prometheus_port: "8083"
        gitlab.com/prometheus_scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8083"
        prometheus.io/scrape: "true"
      creationTimestamp: "2025-05-06T15:53:54Z"
      generateName: gitlab-webservice-default-67b89c8759-
      labels:
        app: webservice
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: v17.11.1
        chart: webservice-8.11.1
        gitlab.com/webservice-name: default
        heritage: Helm
        pod-template-hash: 67b89c8759
        release: gitlab
      name: gitlab-webservice-default-67b89c8759-7hsnp
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: ReplicaSet
          name: gitlab-webservice-default-67b89c8759
          uid: 7e7d4602-9612-4352-b840-e2ae2b945d46
      resourceVersion: "8677"
      uid: ff7f4e36-e7b7-4c1d-88de-0b368f9c70c9
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: webservice
                    gitlab.com/webservice-name: default
                    release: gitlab
                topologyKey: kubernetes.io/hostname
              weight: 1
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: UTC
            - name: GITLAB_WEBSERVER
              value: puma
            - name: TMPDIR
              value: /tmp/gitlab
            - name: GITALY_FEATURE_DEFAULT_ON
              value: "1"
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: /var/opt/gitlab/templates
            - name: CONFIG_DIRECTORY
              value: /srv/gitlab/config
            - name: prometheus_multiproc_dir
              value: /metrics
            - name: WORKER_PROCESSES
              value: "2"
            - name: WORKER_TIMEOUT
              value: "60"
            - name: INTERNAL_PORT
              value: "8080"
            - name: PUMA_THREADS_MIN
              value: "4"
            - name: PUMA_THREADS_MAX
              value: "4"
            - name: PUMA_WORKER_MAX_MEMORY
            - name: DISABLE_PUMA_WORKER_KILLER
              value: "true"
            - name: SHUTDOWN_BLACKOUT_SECONDS
              value: "10"
            - name: WORKHORSE_ARCHIVE_CACHE_DISABLED
              value: "true"
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce:v17.11.1
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/bash
                  - -c
                  - pkill -SIGINT -o ruby
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/liveness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 30
          name: webservice
          ports:
            - containerPort: 8080
              name: http-webservice
              protocol: TCP
            - containerPort: 8083
              name: http-metrics-ws
              protocol: TCP
          readinessProbe:
            failureThreshold: 2
            httpGet:
              path: /-/readiness
              port: 8080
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            requests:
              cpu: 300m
              memory: 2500M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /metrics
              name: webservice-metrics
            - mountPath: /var/opt/gitlab/templates
              name: webservice-config
            - mountPath: /etc/gitlab
              name: webservice-secrets
              readOnly: true
            - mountPath: /srv/gitlab/config/secrets.yml
              name: webservice-secrets
              subPath: rails-secrets/secrets.yml
            - mountPath: /etc/krb5.conf
              name: webservice-config
              subPath: krb5.conf
            - mountPath: /srv/gitlab/config/initializers/smtp_settings.rb
              name: webservice-config
              subPath: smtp_settings.rb
            - mountPath: /srv/gitlab/INSTALLATION_TYPE
              name: webservice-config
              subPath: installation_type
            - mountPath: /srv/gitlab/public/uploads/tmp
              name: shared-upload-directory
            - mountPath: /tmp
              name: shared-tmp
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
        - env:
            - name: TZ
              value: UTC
            - name: TMPDIR
              value: /tmp/gitlab
            - name: GITLAB_WORKHORSE_AUTH_BACKEND
              value: http://localhost:8080
            - name: GITLAB_WORKHORSE_EXTRA_ARGS
            - name: GITLAB_WORKHORSE_LISTEN_PORT
              value: "8181"
            - name: GITLAB_WORKHORSE_LOG_FORMAT
              value: json
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: /var/opt/gitlab/templates
            - name: CONFIG_DIRECTORY
              value: /srv/gitlab/config
            - name: SHUTDOWN_BLACKOUT_SECONDS
              value: "10"
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ce:v17.11.1
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/bash
                  - -c
                  - sleep $SHUTDOWN_BLACKOUT_SECONDS
          livenessProbe:
            exec:
              command:
                - /scripts/healthcheck
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 30
          name: gitlab-workhorse
          ports:
            - containerPort: 8181
              name: http-workhorse
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /scripts/healthcheck
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            requests:
              cpu: 100m
              memory: 100M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/opt/gitlab/templates
              name: workhorse-config
            - mountPath: /etc/gitlab
              name: workhorse-secrets
              readOnly: true
            - mountPath: /srv/gitlab/public/uploads/tmp
              name: shared-upload-directory
            - mountPath: /tmp
              name: shared-tmp
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      initContainers:
        - env:
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
          imagePullPolicy: IfNotPresent
          name: certificates
          resources:
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: etc-ssl-certs
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
        - args:
            - -c
            - sh -x /config-webservice/configure ; sh -x /config-workhorse/configure ; mkdir -p -m 3770 /tmp/gitlab
          command:
            - sh
          env:
            - name: TZ
              value: UTC
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
          imagePullPolicy: IfNotPresent
          name: configure
          resources:
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /config-webservice
              name: webservice-config
              readOnly: true
            - mountPath: /config-workhorse
              name: workhorse-config
              readOnly: true
            - mountPath: /init-config
              name: init-webservice-secrets
              readOnly: true
            - mountPath: /init-secrets
              name: webservice-secrets
            - mountPath: /init-secrets-workhorse
              name: workhorse-secrets
            - mountPath: /tmp
              name: shared-tmp
        - args:
            - /scripts/wait-for-deps
          env:
            - name: TZ
              value: UTC
            - name: GITALY_FEATURE_DEFAULT_ON
              value: "1"
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: /var/opt/gitlab/templates
            - name: CONFIG_DIRECTORY
              value: /srv/gitlab/config
            - name: WORKHORSE_ARCHIVE_CACHE_DISABLED
              value: "1"
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce:v17.11.1
          imagePullPolicy: IfNotPresent
          name: dependencies
          resources:
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
            - mountPath: /var/opt/gitlab/templates
              name: webservice-config
            - mountPath: /etc/gitlab
              name: webservice-secrets
              readOnly: true
            - mountPath: /srv/gitlab/config/secrets.yml
              name: webservice-secrets
              readOnly: true
              subPath: rails-secrets/secrets.yml
      nodeName: k3d-mycluster-server-0
      preemptionPolicy: PreemptLowerPriority
      priority: 0
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
      volumes:
        - emptyDir: {}
          name: shared-tmp
        - emptyDir:
            medium: Memory
          name: webservice-metrics
        - configMap:
            defaultMode: 420
            name: gitlab-webservice
          name: webservice-config
        - configMap:
            defaultMode: 420
            name: gitlab-workhorse-default
          name: workhorse-config
        - name: init-webservice-secrets
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: secrets.yml
                      path: rails-secrets/secrets.yml
                  name: gitlab-rails-secret
              - secret:
                  items:
                    - key: secret
                      path: shell/.gitlab_shell_secret
                  name: gitlab-gitlab-shell-secret
              - secret:
                  items:
                    - key: token
                      path: gitaly/gitaly_token
                  name: gitlab-gitaly-secret
              - secret:
                  items:
                    - key: secret
                      path: redis/redis-password
                  name: gitlab-redis-secret
              - secret:
                  items:
                    - key: postgresql-password
                      path: postgres/psql-password-ci
                  name: gitlab-postgresql-password
              - secret:
                  items:
                    - key: postgresql-password
                      path: postgres/psql-password-main
                  name: gitlab-postgresql-password
              - secret:
                  items:
                    - key: registry-auth.key
                      path: registry/gitlab-registry.key
                  name: gitlab-registry-secret
              - secret:
                  items:
                    - key: secret
                      path: registry/notificationSecret
                  name: gitlab-registry-notification
              - secret:
                  items:
                    - key: shared_secret
                      path: gitlab-workhorse/secret
                  name: gitlab-gitlab-workhorse-secret
              - secret:
                  items:
                    - key: kas_shared_secret
                      path: kas/.gitlab_kas_secret
                  name: gitlab-gitlab-kas-secret
              - secret:
                  items:
                    - key: suggested_reviewers_secret
                      path: suggested_reviewers/.gitlab_suggested_reviewers_secret
                  name: gitlab-gitlab-suggested-reviewers
              - secret:
                  items:
                    - key: gitlab_username
                      path: zoekt/.gitlab_zoekt_username
                    - key: gitlab_password
                      path: zoekt/.gitlab_zoekt_password
                  name: gitlab-zoekt-basicauth
                  optional: true
              - secret:
                  items:
                    - key: accesskey
                      path: minio/accesskey
                    - key: secretkey
                      path: minio/secretkey
                  name: gitlab-minio-secret
        - emptyDir:
            medium: Memory
          name: webservice-secrets
        - emptyDir:
            medium: Memory
          name: workhorse-secrets
        - emptyDir: {}
          name: shared-upload-directory
        - emptyDir:
            medium: Memory
          name: etc-ssl-certs
        - emptyDir:
            medium: Memory
          name: etc-pki-ca-trust-extracted-pem
    status:
      conditions:
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:53:56Z"
          status: "True"
          type: PodReadyToStartContainers
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:55:28Z"
          status: "True"
          type: Initialized
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:56:33Z"
          status: "True"
          type: Ready
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:56:33Z"
          status: "True"
          type: ContainersReady
        - lastProbeTime: null
          lastTransitionTime: "2025-05-06T15:53:54Z"
          status: "True"
          type: PodScheduled
      containerStatuses:
        - containerID: containerd://03048e7e5f5aa2d8ce0cf1af1bf2865c5ffb638cb1b0cd1e06b5c789f60cc895
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ce:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ce@sha256:fda6b236f43f81e1cc875dd33e89c16a039439158ed1fda872df1f24e3028f77
          lastState: {}
          name: gitlab-workhorse
          ready: true
          restartCount: 0
          started: true
          state:
            running:
              startedAt: "2025-05-06T15:55:28Z"
          volumeMounts:
            - mountPath: /var/opt/gitlab/templates
              name: workhorse-config
            - mountPath: /etc/gitlab
              name: workhorse-secrets
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /srv/gitlab/public/uploads/tmp
              name: shared-upload-directory
            - mountPath: /tmp
              name: shared-tmp
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
              recursiveReadOnly: Disabled
        - containerID: containerd://b145ec81858defe9ad1c3c46e8ae52371bb9834da1d1a7b2725330390a28714c
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce@sha256:2c17cf282ad35b02213436c08d4c4f299326be10ef5a11ae807222946ef9975b
          lastState: {}
          name: webservice
          ready: true
          restartCount: 0
          started: true
          state:
            running:
              startedAt: "2025-05-06T15:55:28Z"
          volumeMounts:
            - mountPath: /metrics
              name: webservice-metrics
            - mountPath: /var/opt/gitlab/templates
              name: webservice-config
            - mountPath: /etc/gitlab
              name: webservice-secrets
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /srv/gitlab/config/secrets.yml
              name: webservice-secrets
            - mountPath: /etc/krb5.conf
              name: webservice-config
            - mountPath: /srv/gitlab/config/initializers/smtp_settings.rb
              name: webservice-config
            - mountPath: /srv/gitlab/INSTALLATION_TYPE
              name: webservice-config
            - mountPath: /srv/gitlab/public/uploads/tmp
              name: shared-upload-directory
            - mountPath: /tmp
              name: shared-tmp
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
              recursiveReadOnly: Disabled
      hostIP: 172.18.0.2
      hostIPs:
        - ip: 172.18.0.2
      initContainerStatuses:
        - containerID: containerd://58fd6d554983b72b6ac4b62621d7cf35135153fccd03a54d50fea826cb7a0740
          image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/certificates@sha256:befb63aef4e1eee996c2be37c1621cd81cfeb37885db85f85000e52e94aa993a
          lastState: {}
          name: certificates
          ready: true
          restartCount: 0
          started: false
          state:
            terminated:
              containerID: containerd://58fd6d554983b72b6ac4b62621d7cf35135153fccd03a54d50fea826cb7a0740
              exitCode: 0
              finishedAt: "2025-05-06T15:53:59Z"
              reason: Completed
              startedAt: "2025-05-06T15:53:56Z"
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: etc-ssl-certs
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
        - containerID: containerd://5533e655d1f0cbd16d77ddcb23532bb16116ddbf4719bfacb988886115c43236
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/gitlab-base@sha256:471d6bd67f9dbd5473c62fdd2c7f827c012c98e36f233b63c247d5e0926fb1a5
          lastState: {}
          name: configure
          ready: true
          restartCount: 0
          started: false
          state:
            terminated:
              containerID: containerd://5533e655d1f0cbd16d77ddcb23532bb16116ddbf4719bfacb988886115c43236
              exitCode: 0
              finishedAt: "2025-05-06T15:54:00Z"
              reason: Completed
              startedAt: "2025-05-06T15:54:00Z"
          volumeMounts:
            - mountPath: /config-webservice
              name: webservice-config
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /config-workhorse
              name: workhorse-config
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /init-config
              name: init-webservice-secrets
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /init-secrets
              name: webservice-secrets
            - mountPath: /init-secrets-workhorse
              name: workhorse-secrets
            - mountPath: /tmp
              name: shared-tmp
        - containerID: containerd://a41b782bf3a021c35b1b989011b666ed42b87f1ed0f808e4789bd056163bb1c0
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce:v17.11.1
          imageID: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce@sha256:2c17cf282ad35b02213436c08d4c4f299326be10ef5a11ae807222946ef9975b
          lastState: {}
          name: dependencies
          ready: true
          restartCount: 2
          started: false
          state:
            terminated:
              containerID: containerd://a41b782bf3a021c35b1b989011b666ed42b87f1ed0f808e4789bd056163bb1c0
              exitCode: 0
              finishedAt: "2025-05-06T15:55:28Z"
              reason: Completed
              startedAt: "2025-05-06T15:55:24Z"
          volumeMounts:
            - mountPath: /etc/ssl/certs/
              name: etc-ssl-certs
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: etc-pki-ca-trust-extracted-pem
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /var/opt/gitlab/templates
              name: webservice-config
            - mountPath: /etc/gitlab
              name: webservice-secrets
              readOnly: true
              recursiveReadOnly: Disabled
            - mountPath: /srv/gitlab/config/secrets.yml
              name: webservice-secrets
              readOnly: true
              recursiveReadOnly: Disabled
      phase: Running
      podIP: 10.42.0.69
      podIPs:
        - ip: 10.42.0.69
      qosClass: Burstable
      startTime: "2025-05-06T15:53:54Z"
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        meta.helm.sh/release-name: gitlab-operator
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T16:00:15Z"
      labels:
        app.kubernetes.io/managed-by: Helm
        control-plane: controller-manager
      name: gitlab-controller-manager-metrics-service
      namespace: gitlab
      resourceVersion: "8856"
      uid: 5a4e1297-6e2d-448a-a3c3-66a5ff79e69f
    spec:
      clusterIP: 10.43.154.183
      clusterIPs:
        - 10.43.154.183
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: https
          port: 8443
          protocol: TCP
          targetPort: metrics
      selector:
        control-plane: controller-manager
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      labels:
        app: gitaly
        app.kubernetes.io/managed-by: Helm
        chart: gitaly-8.11.1
        heritage: Helm
        release: gitlab
      name: gitlab-gitaly
      namespace: gitlab
      resourceVersion: "7882"
      uid: 43a676e8-8ba9-4711-82f2-d1495db2106d
    spec:
      clusterIP: None
      clusterIPs:
        - None
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: tcp-gitaly
          port: 8075
          protocol: TCP
          targetPort: grpc-gitaly
        - name: http-metrics
          port: 9236
          protocol: TCP
          targetPort: http-metrics
      selector:
        app: gitaly
        release: gitlab
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      labels:
        app: gitlab-exporter
        app.kubernetes.io/managed-by: Helm
        chart: gitlab-exporter-8.11.1
        heritage: Helm
        release: gitlab
      name: gitlab-gitlab-exporter
      namespace: gitlab
      resourceVersion: "7898"
      uid: d8950250-7c90-468a-9ec7-f00fe4a45ad1
    spec:
      clusterIP: 10.43.125.183
      clusterIPs:
        - 10.43.125.183
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: http-metrics
          port: 9168
          protocol: TCP
          targetPort: http-metrics
      selector:
        app: gitlab-exporter
        release: gitlab
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      labels:
        app: gitlab-shell
        app.kubernetes.io/managed-by: Helm
        chart: gitlab-shell-8.11.1
        heritage: Helm
        release: gitlab
      name: gitlab-gitlab-shell
      namespace: gitlab
      resourceVersion: "7893"
      uid: c6124501-454d-4f46-9169-fb2463accb30
    spec:
      clusterIP: 10.43.248.246
      clusterIPs:
        - 10.43.248.246
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: ssh
          port: 22
          protocol: TCP
          targetPort: 2222
      selector:
        app: gitlab-shell
        release: gitlab
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      labels:
        app: kas
        app.kubernetes.io/managed-by: Helm
        chart: kas-8.11.1
        heritage: Helm
        release: gitlab
      name: gitlab-kas
      namespace: gitlab
      resourceVersion: "7916"
      uid: 5bf92112-89a3-4795-9707-80b5fc3da7d0
    spec:
      clusterIP: 10.43.198.43
      clusterIPs:
        - 10.43.198.43
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: tcp-kas-external-api
          port: 8150
          protocol: TCP
          targetPort: 8150
        - name: tcp-kas-internal-api
          port: 8153
          protocol: TCP
          targetPort: 8153
        - name: tcp-kas-k8s-api
          port: 8154
          protocol: TCP
          targetPort: 8154
        - name: http-metrics
          port: 8151
          protocol: TCP
          targetPort: http-metrics
      selector:
        app: kas
        release: gitlab
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      labels:
        app: minio
        app.kubernetes.io/managed-by: Helm
        chart: minio-0.4.3
        heritage: Helm
        release: gitlab
      name: gitlab-minio-svc
      namespace: gitlab
      resourceVersion: "7920"
      uid: df114387-e26c-4b02-a60c-df01091a7867
    spec:
      clusterIP: 10.43.127.11
      clusterIPs:
        - 10.43.127.11
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: http
          port: 9000
          protocol: TCP
          targetPort: 9000
      selector:
        app: minio
        component: app
        release: gitlab
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      labels:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: gitlab
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/version: 15.4.0
        helm.sh/chart: postgresql-12.12.10
      name: gitlab-postgresql
      namespace: gitlab
      resourceVersion: "7895"
      uid: 926ee1ad-c846-4c69-8b0f-75363454be08
    spec:
      clusterIP: 10.43.38.56
      clusterIPs:
        - 10.43.38.56
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: tcp-postgresql
          port: 5432
          protocol: TCP
          targetPort: tcp-postgresql
      selector:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: gitlab
        app.kubernetes.io/name: postgresql
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
        service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
      creationTimestamp: "2025-05-06T15:53:54Z"
      labels:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: gitlab
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/version: 15.4.0
        helm.sh/chart: postgresql-12.12.10
      name: gitlab-postgresql-hl
      namespace: gitlab
      resourceVersion: "7879"
      uid: 65b9fa08-0b3f-4219-b116-c3713c4f79ae
    spec:
      clusterIP: None
      clusterIPs:
        - None
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: tcp-postgresql
          port: 5432
          protocol: TCP
          targetPort: tcp-postgresql
      publishNotReadyAddresses: true
      selector:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: gitlab
        app.kubernetes.io/name: postgresql
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        gitlab.com/prometheus_port: "9187"
        gitlab.com/prometheus_scrape: "true"
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
        prometheus.io/port: "9187"
        prometheus.io/scrape: "true"
      creationTimestamp: "2025-05-06T15:53:54Z"
      labels:
        app.kubernetes.io/component: metrics
        app.kubernetes.io/instance: gitlab
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/version: 15.4.0
        helm.sh/chart: postgresql-12.12.10
      name: gitlab-postgresql-metrics
      namespace: gitlab
      resourceVersion: "7911"
      uid: 91e56462-497e-4dd0-94f2-75865d4b6cc1
    spec:
      clusterIP: 10.43.66.198
      clusterIPs:
        - 10.43.66.198
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: http-metrics
          port: 9187
          protocol: TCP
          targetPort: http-metrics
      selector:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: gitlab
        app.kubernetes.io/name: postgresql
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      labels:
        app.kubernetes.io/instance: gitlab
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redis
        app.kubernetes.io/version: 7.2.4
        helm.sh/chart: redis-18.19.4
      name: gitlab-redis-headless
      namespace: gitlab
      resourceVersion: "7883"
      uid: ec2fc83a-7b22-4a41-a6be-d0e19af32973
    spec:
      clusterIP: None
      clusterIPs:
        - None
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: tcp-redis
          port: 6379
          protocol: TCP
          targetPort: redis
      selector:
        app.kubernetes.io/instance: gitlab
        app.kubernetes.io/name: redis
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      labels:
        app.kubernetes.io/component: master
        app.kubernetes.io/instance: gitlab
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redis
        app.kubernetes.io/version: 7.2.4
        helm.sh/chart: redis-18.19.4
      name: gitlab-redis-master
      namespace: gitlab
      resourceVersion: "7927"
      uid: ccc0db22-fc0d-4702-8613-223e57cdcd74
    spec:
      clusterIP: 10.43.9.226
      clusterIPs:
        - 10.43.9.226
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: tcp-redis
          port: 6379
          protocol: TCP
          targetPort: redis
      selector:
        app.kubernetes.io/component: master
        app.kubernetes.io/instance: gitlab
        app.kubernetes.io/name: redis
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      labels:
        app.kubernetes.io/component: metrics
        app.kubernetes.io/instance: gitlab
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redis
        app.kubernetes.io/version: 7.2.4
        helm.sh/chart: redis-18.19.4
      name: gitlab-redis-metrics
      namespace: gitlab
      resourceVersion: "7928"
      uid: f4e08db9-cdc0-4cc4-88f1-c0f8fa8476a1
    spec:
      clusterIP: 10.43.89.141
      clusterIPs:
        - 10.43.89.141
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: http-metrics
          port: 9121
          protocol: TCP
          targetPort: metrics
      selector:
        app.kubernetes.io/instance: gitlab
        app.kubernetes.io/name: redis
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      labels:
        app: registry
        app.kubernetes.io/managed-by: Helm
        chart: registry-0.7.0
        heritage: Helm
        release: gitlab
      name: gitlab-registry
      namespace: gitlab
      resourceVersion: "7903"
      uid: 4f3c4504-bc58-425c-8dec-44ff4c093ec3
    spec:
      clusterIP: 10.43.233.116
      clusterIPs:
        - 10.43.233.116
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: http-registry
          port: 5000
          protocol: TCP
          targetPort: http
      selector:
        app: registry
        release: gitlab
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: "2025-05-06T15:56:43Z"
      name: gitlab-shell-nodeport
      namespace: gitlab
      resourceVersion: "8702"
      uid: 48cbd193-ed6c-4bc7-85ed-d559857741d2
    spec:
      clusterIP: 10.43.245.99
      clusterIPs:
        - 10.43.245.99
      externalTrafficPolicy: Cluster
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - nodePort: 30022
          port: 22
          protocol: TCP
          targetPort: 2222
      selector:
        app: gitlab-shell
        release: gitlab
      sessionAffinity: None
      type: NodePort
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        meta.helm.sh/release-name: gitlab-operator
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T16:00:15Z"
      labels:
        app.kubernetes.io/managed-by: Helm
      name: gitlab-webhook-service
      namespace: gitlab
      resourceVersion: "8860"
      uid: ead2e007-f9b9-45ec-965c-13f5e1635404
    spec:
      clusterIP: 10.43.63.42
      clusterIPs:
        - 10.43.63.42
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - port: 443
          protocol: TCP
          targetPort: 9443
      selector:
        control-plane: controller-manager
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      labels:
        app: webservice
        app.kubernetes.io/managed-by: Helm
        chart: webservice-8.11.1
        gitlab.com/webservice-name: default
        heritage: Helm
        release: gitlab
      name: gitlab-webservice-default
      namespace: gitlab
      resourceVersion: "7932"
      uid: 356daef6-4480-48ee-9395-6b368e447631
    spec:
      clusterIP: 10.43.197.33
      clusterIPs:
        - 10.43.197.33
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: http-webservice
          port: 8080
          protocol: TCP
          targetPort: http-webservice
        - name: http-workhorse
          port: 8181
          protocol: TCP
          targetPort: http-workhorse
        - name: http-metrics-ws
          port: 8083
          protocol: TCP
          targetPort: http-metrics-ws
      selector:
        app: webservice
        gitlab.com/webservice-name: default
        release: gitlab
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: "2025-05-06T15:56:39Z"
      name: gitlab-webservice-nodeport
      namespace: gitlab
      resourceVersion: "8687"
      uid: ecdafe33-bea9-4229-ba9e-b7ac33a7ccc7
    spec:
      clusterIP: 10.43.24.244
      clusterIPs:
        - 10.43.24.244
      externalTrafficPolicy: Cluster
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - nodePort: 30081
          port: 8080
          protocol: TCP
          targetPort: 8181
      selector:
        app: webservice
        gitlab.com/webservice-name: default
        release: gitlab
      sessionAffinity: None
      type: NodePort
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "1"
        meta.helm.sh/release-name: gitlab-operator
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T16:00:15Z"
      generation: 1
      labels:
        app.kubernetes.io/managed-by: Helm
        control-plane: controller-manager
      name: gitlab-controller-manager
      namespace: gitlab
      resourceVersion: "8931"
      uid: d142805a-4d9b-4fb6-8b46-8d034fe80f78
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          control-plane: controller-manager
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            kubectl.kubernetes.io/default-container: manager
          creationTimestamp: null
          labels:
            control-plane: controller-manager
        spec:
          containers:
            - args:
                - --metrics-addr=:8443
                - --enable-leader-election
                - --zap-devel=false
                - --zap-log-level=info
                - --zap-time-encoding=epoch
              command:
                - /manager
              env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: GITLAB_MANAGER_SERVICE_ACCOUNT
                  value: gitlab-manager
                - name: GITLAB_APP_NONROOT_SERVICE_ACCOUNT
                  value: gitlab-app-nonroot
                - name: NGINX_SERVICE_ACCOUNT
                  value: gitlab-nginx-ingress
                - name: PROMETHEUS_SERVICE_ACCOUNT
                  value: gitlab-prometheus-server
              image: registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator:1.12.1
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /liveness
                  port: health-port
                  scheme: HTTP
                initialDelaySeconds: 15
                periodSeconds: 20
                successThreshold: 1
                timeoutSeconds: 1
              name: manager
              ports:
                - containerPort: 9443
                  name: webhook-server
                  protocol: TCP
                - containerPort: 6060
                  name: health-port
                  protocol: TCP
                - containerPort: 8443
                  name: metrics
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /readiness
                  port: health-port
                  scheme: HTTP
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                limits:
                  cpu: 200m
                  memory: 300Mi
                requests:
                  cpu: 200m
                  memory: 100Mi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /tmp/k8s-webhook-server/serving-certs
                  name: cert
                  readOnly: true
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: gitlab-manager
          serviceAccountName: gitlab-manager
          terminationGracePeriodSeconds: 10
          volumes:
            - name: cert
              secret:
                defaultMode: 420
                secretName: webhook-server-cert
    status:
      availableReplicas: 1
      conditions:
        - lastTransitionTime: "2025-05-06T16:00:26Z"
          lastUpdateTime: "2025-05-06T16:00:26Z"
          message: Deployment has minimum availability.
          reason: MinimumReplicasAvailable
          status: "True"
          type: Available
        - lastTransitionTime: "2025-05-06T16:00:15Z"
          lastUpdateTime: "2025-05-06T16:00:26Z"
          message: ReplicaSet "gitlab-controller-manager-55c94b95bc" has successfully progressed.
          reason: NewReplicaSetAvailable
          status: "True"
          type: Progressing
      observedGeneration: 1
      readyReplicas: 1
      replicas: 1
      updatedReplicas: 1
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "1"
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      generation: 1
      labels:
        app: gitlab-exporter
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: v17.11.1
        chart: gitlab-exporter-8.11.1
        heritage: Helm
        release: gitlab
      name: gitlab-gitlab-exporter
      namespace: gitlab
      resourceVersion: "8349"
      uid: f480df6f-4f29-4fe9-8809-78629296afe4
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: gitlab-exporter
          release: gitlab
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            checksum/config: 7b82c156cd9172f3acf0df7031d9fdb86cbc7ccb4f45c4f636591144d47d6ab4
            gitlab.com/prometheus_path: /metrics
            gitlab.com/prometheus_port: "9168"
            gitlab.com/prometheus_scrape: "true"
            prometheus.io/path: /metrics
            prometheus.io/port: "9168"
            prometheus.io/scrape: "true"
          creationTimestamp: null
          labels:
            app: gitlab-exporter
            app.kubernetes.io/name: gitlab
            app.kubernetes.io/version: v17.11.1
            chart: gitlab-exporter-8.11.1
            heritage: Helm
            release: gitlab
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchLabels:
                        app: gitlab-exporter
                        release: gitlab
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          automountServiceAccountToken: false
          containers:
            - env:
                - name: TZ
                  value: UTC
                - name: CONFIG_TEMPLATE_DIRECTORY
                  value: /var/opt/gitlab-exporter/templates
                - name: CONFIG_DIRECTORY
                  value: /etc/gitlab-exporter
                - name: MALLOC_CONF
                  value: dirty_decay_ms:0,muzzy_decay_ms:0
                - name: RUBY_GC_HEAP_FREE_SLOTS_MAX_RATIO
                  value: "0.111"
                - name: RUBY_GC_HEAP_FREE_SLOTS_MIN_RATIO
                  value: "0.055"
                - name: RUBY_GC_HEAP_INIT_SLOTS
                  value: "80000"
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-exporter:15.3.0
              imagePullPolicy: IfNotPresent
              lifecycle:
                preStop:
                  exec:
                    command:
                      - /bin/bash
                      - -c
                      - pkill -f 'gitlab-exporter'
              livenessProbe:
                exec:
                  command:
                    - pgrep
                    - -f
                    - gitlab-exporter
                failureThreshold: 3
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              name: gitlab-exporter
              ports:
                - containerPort: 9168
                  name: http-metrics
                  protocol: TCP
              readinessProbe:
                exec:
                  command:
                    - pgrep
                    - -f
                    - gitlab-exporter
                failureThreshold: 3
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                requests:
                  cpu: 75m
                  memory: 100M
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/opt/gitlab-exporter/templates/gitlab-exporter.yml.erb
                  name: gitlab-exporter-config
                  subPath: gitlab-exporter.yml.erb
                - mountPath: /etc/gitlab
                  name: gitlab-exporter-secrets
                  readOnly: true
                - mountPath: /etc/ssl/certs/
                  name: etc-ssl-certs
                  readOnly: true
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
                  readOnly: true
          dnsPolicy: ClusterFirst
          initContainers:
            - env:
                - name: TZ
                  value: UTC
                - name: MALLOC_CONF
                  value: dirty_decay_ms:0,muzzy_decay_ms:0
                - name: RUBY_GC_HEAP_FREE_SLOTS_MAX_RATIO
                  value: "0.111"
                - name: RUBY_GC_HEAP_FREE_SLOTS_MIN_RATIO
                  value: "0.055"
                - name: RUBY_GC_HEAP_INIT_SLOTS
                  value: "80000"
              image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
              imagePullPolicy: IfNotPresent
              name: certificates
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/ssl/certs
                  name: etc-ssl-certs
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
            - command:
                - sh
                - /config/configure
              env:
                - name: TZ
                  value: UTC
                - name: MALLOC_CONF
                  value: dirty_decay_ms:0,muzzy_decay_ms:0
                - name: RUBY_GC_HEAP_FREE_SLOTS_MAX_RATIO
                  value: "0.111"
                - name: RUBY_GC_HEAP_FREE_SLOTS_MIN_RATIO
                  value: "0.055"
                - name: RUBY_GC_HEAP_INIT_SLOTS
                  value: "80000"
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
              imagePullPolicy: IfNotPresent
              name: configure
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /config
                  name: gitlab-exporter-config
                  readOnly: true
                - mountPath: /init-config
                  name: init-gitlab-exporter-secrets
                  readOnly: true
                - mountPath: /init-secrets
                  name: gitlab-exporter-secrets
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationGracePeriodSeconds: 30
          volumes:
            - configMap:
                defaultMode: 420
                name: gitlab-gitlab-exporter
              name: gitlab-exporter-config
            - name: init-gitlab-exporter-secrets
              projected:
                defaultMode: 256
                sources:
                  - secret:
                      items:
                        - key: postgresql-password
                          path: postgres/psql-password-ci
                      name: gitlab-postgresql-password
                  - secret:
                      items:
                        - key: postgresql-password
                          path: postgres/psql-password-main
                      name: gitlab-postgresql-password
                  - secret:
                      items:
                        - key: secret
                          path: redis/redis-password
                      name: gitlab-redis-secret
            - emptyDir:
                medium: Memory
              name: gitlab-exporter-secrets
            - emptyDir:
                medium: Memory
              name: etc-ssl-certs
            - emptyDir:
                medium: Memory
              name: etc-pki-ca-trust-extracted-pem
    status:
      availableReplicas: 1
      conditions:
        - lastTransitionTime: "2025-05-06T15:54:03Z"
          lastUpdateTime: "2025-05-06T15:54:03Z"
          message: Deployment has minimum availability.
          reason: MinimumReplicasAvailable
          status: "True"
          type: Available
        - lastTransitionTime: "2025-05-06T15:53:54Z"
          lastUpdateTime: "2025-05-06T15:54:03Z"
          message: ReplicaSet "gitlab-gitlab-exporter-78f695889f" has successfully progressed.
          reason: NewReplicaSetAvailable
          status: "True"
          type: Progressing
      observedGeneration: 1
      readyReplicas: 1
      replicas: 1
      updatedReplicas: 1
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "1"
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      generation: 1
      labels:
        app: gitlab-shell
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: v17.11.1
        chart: gitlab-shell-8.11.1
        heritage: Helm
        release: gitlab
      name: gitlab-gitlab-shell
      namespace: gitlab
      resourceVersion: "8463"
      uid: cfd16965-594a-4184-ad32-9b0ce0f02f2b
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: gitlab-shell
          release: gitlab
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            checksum/config: e19c03fbe02a0049de6285b98359d4acaaf34e7222ac4026fe03ebd52688c72d
            checksum/config-sshd: 44ed1eca6e5f82430bf45cc116da39f7d235b4a0672a0bd34c54cb33eceb61a4
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          creationTimestamp: null
          labels:
            app: gitlab-shell
            app.kubernetes.io/name: gitlab
            app.kubernetes.io/version: v17.11.1
            chart: gitlab-shell-8.11.1
            heritage: Helm
            release: gitlab
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchLabels:
                        app: gitlab-shell
                        release: gitlab
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          automountServiceAccountToken: false
          containers:
            - env:
                - name: GITALY_FEATURE_DEFAULT_ON
                  value: "1"
                - name: CONFIG_TEMPLATE_DIRECTORY
                  value: /etc/gitlab-shell
                - name: CONFIG_DIRECTORY
                  value: /srv/gitlab-shell
                - name: KEYS_DIRECTORY
                  value: /etc/gitlab-secrets/ssh
                - name: SSH_DAEMON
                  value: openssh
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-shell:v14.41.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                exec:
                  command:
                    - /scripts/healthcheck
                failureThreshold: 3
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 3
              name: gitlab-shell
              ports:
                - containerPort: 2222
                  name: ssh
                  protocol: TCP
              readinessProbe:
                failureThreshold: 2
                initialDelaySeconds: 10
                periodSeconds: 5
                successThreshold: 1
                tcpSocket:
                  port: 2222
                timeoutSeconds: 3
              resources:
                requests:
                  cpu: "0"
                  memory: 6M
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/gitlab-shell
                  name: shell-config
                - mountPath: /etc/gitlab-secrets
                  name: shell-secrets
                  readOnly: true
                - mountPath: /etc/krb5.conf
                  name: shell-config
                  readOnly: true
                  subPath: krb5.conf
                - mountPath: /etc/ssh/sshd_config
                  name: sshd-config
                  readOnly: true
                  subPath: sshd_config
                - mountPath: /etc/ssl/certs/
                  name: etc-ssl-certs
                  readOnly: true
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
                  readOnly: true
          dnsPolicy: ClusterFirst
          initContainers:
            - env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
              imagePullPolicy: IfNotPresent
              name: certificates
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/ssl/certs
                  name: etc-ssl-certs
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
            - command:
                - sh
                - /config/configure
              env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
              imagePullPolicy: IfNotPresent
              name: configure
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /config
                  name: shell-config
                  readOnly: true
                - mountPath: /init-config
                  name: shell-init-secrets
                  readOnly: true
                - mountPath: /init-secrets
                  name: shell-secrets
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationGracePeriodSeconds: 30
          volumes:
            - configMap:
                defaultMode: 420
                name: gitlab-gitlab-shell
              name: shell-config
            - configMap:
                defaultMode: 420
                name: gitlab-gitlab-shell-sshd
              name: sshd-config
            - name: shell-init-secrets
              projected:
                defaultMode: 288
                sources:
                  - secret:
                      name: gitlab-gitlab-shell-host-keys
                  - secret:
                      items:
                        - key: secret
                          path: shell/.gitlab_shell_secret
                      name: gitlab-gitlab-shell-secret
            - emptyDir:
                medium: Memory
              name: shell-secrets
            - emptyDir:
                medium: Memory
              name: etc-ssl-certs
            - emptyDir:
                medium: Memory
              name: etc-pki-ca-trust-extracted-pem
    status:
      availableReplicas: 1
      conditions:
        - lastTransitionTime: "2025-05-06T15:54:15Z"
          lastUpdateTime: "2025-05-06T15:54:15Z"
          message: Deployment has minimum availability.
          reason: MinimumReplicasAvailable
          status: "True"
          type: Available
        - lastTransitionTime: "2025-05-06T15:53:54Z"
          lastUpdateTime: "2025-05-06T15:54:15Z"
          message: ReplicaSet "gitlab-gitlab-shell-64f8c9b487" has successfully progressed.
          reason: NewReplicaSetAvailable
          status: "True"
          type: Progressing
      observedGeneration: 1
      readyReplicas: 1
      replicas: 1
      updatedReplicas: 1
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "1"
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      generation: 2
      labels:
        app: kas
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: v17.11.1
        chart: kas-8.11.1
        heritage: Helm
        release: gitlab
      name: gitlab-kas
      namespace: gitlab
      resourceVersion: "8546"
      uid: ce408bc7-f2cf-400d-afa4-a49849173569
    spec:
      progressDeadlineSeconds: 600
      replicas: 2
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: kas
          release: gitlab
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            checksum/config: cd0e5701cd886cdf296bbe882e8cee02c663ece7265d5fe2824c082611ec409f
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
            gitlab.com/prometheus_path: /metrics
            gitlab.com/prometheus_port: "8151"
            gitlab.com/prometheus_scrape: "true"
            prometheus.io/path: /metrics
            prometheus.io/port: "8151"
            prometheus.io/scrape: "true"
          creationTimestamp: null
          labels:
            app: kas
            app.kubernetes.io/name: gitlab
            app.kubernetes.io/version: v17.11.1
            chart: kas-8.11.1
            heritage: Helm
            release: gitlab
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchLabels:
                        app: kas
                        release: gitlab
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          automountServiceAccountToken: false
          containers:
            - args:
                - --configuration-file=/etc/kas/config.yaml
              env:
                - name: OWN_PRIVATE_API_HOST
                  value: gitlab-kas.gitlab.svc
                - name: POD_IP
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: status.podIP
                - name: OWN_PRIVATE_API_URL
                  value: grpc://$(POD_IP):8155
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-kas:v17.11.1
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /liveness
                  port: 8151
                  scheme: HTTP
                initialDelaySeconds: 15
                periodSeconds: 20
                successThreshold: 1
                timeoutSeconds: 1
              name: kas
              ports:
                - containerPort: 8150
                  name: kas
                  protocol: TCP
                - containerPort: 8154
                  name: kas-k8s-api
                  protocol: TCP
                - containerPort: 8155
                  name: kas-private-api
                  protocol: TCP
                - containerPort: 8151
                  name: http-metrics
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /readiness
                  port: 8151
                  scheme: HTTP
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                requests:
                  cpu: 100m
                  memory: 256Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 65532
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/kas
                  name: init-etc-kas
                  readOnly: true
                - mountPath: /etc/ssl/certs/
                  name: etc-ssl-certs
                  readOnly: true
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
                  readOnly: true
          dnsPolicy: ClusterFirst
          initContainers:
            - env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
              imagePullPolicy: IfNotPresent
              name: certificates
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/ssl/certs
                  name: etc-ssl-certs
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 65532
            runAsGroup: 65532
            runAsUser: 65532
            seccompProfile:
              type: RuntimeDefault
          terminationGracePeriodSeconds: 300
          volumes:
            - emptyDir:
                medium: Memory
              name: etc-ssl-certs
            - emptyDir:
                medium: Memory
              name: etc-pki-ca-trust-extracted-pem
            - name: init-etc-kas
              projected:
                defaultMode: 288
                sources:
                  - configMap:
                      name: gitlab-kas
                  - secret:
                      items:
                        - key: kas_shared_secret
                          path: .gitlab_kas_secret
                      name: gitlab-gitlab-kas-secret
                  - secret:
                      items:
                        - key: kas_private_api_secret
                          path: .gitlab_kas_private_api_secret
                      name: gitlab-kas-private-api
                  - secret:
                      items:
                        - key: kas_websocket_token_secret
                          path: .gitlab_kas_websocket_token_secret
                      name: gitlab-kas-websocket-token
                  - secret:
                      items:
                        - key: secret
                          path: redis/redis-password
                      name: gitlab-redis-secret
    status:
      availableReplicas: 2
      conditions:
        - lastTransitionTime: "2025-05-06T15:54:39Z"
          lastUpdateTime: "2025-05-06T15:54:39Z"
          message: Deployment has minimum availability.
          reason: MinimumReplicasAvailable
          status: "True"
          type: Available
        - lastTransitionTime: "2025-05-06T15:53:54Z"
          lastUpdateTime: "2025-05-06T15:54:39Z"
          message: ReplicaSet "gitlab-kas-799cc6dfff" has successfully progressed.
          reason: NewReplicaSetAvailable
          status: "True"
          type: Progressing
      observedGeneration: 2
      readyReplicas: 2
      replicas: 2
      updatedReplicas: 2
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "1"
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      generation: 1
      labels:
        app: minio
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: RELEASE.2017-12-28T01-21-00Z
        chart: minio-0.4.3
        heritage: Helm
        release: gitlab
      name: gitlab-minio
      namespace: gitlab
      resourceVersion: "8248"
      uid: 057fd465-979e-42ec-ab97-0ff09258a246
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: minio
          component: app
          release: gitlab
      strategy:
        type: Recreate
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: minio
            app.kubernetes.io/name: gitlab
            app.kubernetes.io/version: RELEASE.2017-12-28T01-21-00Z
            chart: minio-0.4.3
            component: app
            heritage: Helm
            release: gitlab
          name: gitlab-minio
        spec:
          automountServiceAccountToken: false
          containers:
            - args:
                - -C
                - /tmp/.minio
                - --quiet
                - server
                - /export
              env:
                - name: TZ
                  value: UTC
              image: minio/minio:RELEASE.2017-12-28T01-21-00Z
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 9000
                timeoutSeconds: 1
              name: minio
              ports:
                - containerPort: 9000
                  name: service
                  protocol: TCP
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /export
                  name: export
                - mountPath: /tmp/.minio
                  name: minio-server-config
                - mountPath: /podinfo
                  name: podinfo
          dnsPolicy: ClusterFirst
          initContainers:
            - command:
                - sh
                - /config/configure
              env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
              imagePullPolicy: IfNotPresent
              name: configure
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /config
                  name: minio-configuration
                - mountPath: /minio
                  name: minio-server-config
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationGracePeriodSeconds: 30
          volumes:
            - downwardAPI:
                defaultMode: 420
                items:
                  - fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.labels
                    path: labels
              name: podinfo
            - name: export
              persistentVolumeClaim:
                claimName: gitlab-minio
            - name: minio-configuration
              projected:
                defaultMode: 420
                sources:
                  - configMap:
                      name: gitlab-minio-config-cm
                  - secret:
                      name: gitlab-minio-secret
            - emptyDir:
                medium: Memory
              name: minio-server-config
    status:
      availableReplicas: 1
      conditions:
        - lastTransitionTime: "2025-05-06T15:54:00Z"
          lastUpdateTime: "2025-05-06T15:54:00Z"
          message: Deployment has minimum availability.
          reason: MinimumReplicasAvailable
          status: "True"
          type: Available
        - lastTransitionTime: "2025-05-06T15:53:54Z"
          lastUpdateTime: "2025-05-06T15:54:00Z"
          message: ReplicaSet "gitlab-minio-68fdc7fdb4" has successfully progressed.
          reason: NewReplicaSetAvailable
          status: "True"
          type: Progressing
      observedGeneration: 1
      readyReplicas: 1
      replicas: 1
      updatedReplicas: 1
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "1"
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      generation: 1
      labels:
        app: registry
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: v17.11.1
        chart: registry-0.7.0
        heritage: Helm
        release: gitlab
      name: gitlab-registry
      namespace: gitlab
      resourceVersion: "8417"
      uid: 9869a7a5-e8fe-43a6-8e2e-532dadf3c6db
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: registry
          release: gitlab
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            checksum/configmap: 840dba49c1629192eac0ddefb235b0e1b6f2acae680290acc888bf1b8578ff7a
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          creationTimestamp: null
          labels:
            app: registry
            app.kubernetes.io/name: gitlab
            app.kubernetes.io/version: v17.11.1
            chart: registry-0.7.0
            heritage: Helm
            release: gitlab
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchLabels:
                        app: registry
                        release: gitlab
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          automountServiceAccountToken: false
          containers:
            - env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-container-registry:v4.19.0-gitlab
              imagePullPolicy: IfNotPresent
              lifecycle:
                preStop:
                  exec:
                    command:
                      - /bin/bash
                      - -c
                      - sleep 5
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /debug/health
                  port: debug
                  scheme: HTTP
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              name: registry
              ports:
                - containerPort: 5000
                  name: http
                  protocol: TCP
                - containerPort: 5001
                  name: debug
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /debug/health
                  port: debug
                  scheme: HTTP
                initialDelaySeconds: 5
                periodSeconds: 5
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                requests:
                  cpu: 50m
                  memory: 32Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/docker/registry/
                  name: registry-server-config
                  readOnly: true
                - mountPath: /etc/ssl/certs/
                  name: etc-ssl-certs
                  readOnly: true
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
                  readOnly: true
          dnsPolicy: ClusterFirst
          initContainers:
            - env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
              imagePullPolicy: IfNotPresent
              name: certificates
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/ssl/certs
                  name: etc-ssl-certs
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
            - args:
                - sh
                - /config/configure
              env:
                - name: CONFIG_TEMPLATE_DIRECTORY
                  value: /templates
                - name: CONFIG_DIRECTORY
                  value: /registry
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
              imagePullPolicy: IfNotPresent
              name: configure
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /config
                  name: registry-secrets
                - mountPath: /templates
                  name: registry-server-config-templates
                  readOnly: true
                - mountPath: /registry
                  name: registry-server-config
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationGracePeriodSeconds: 30
          volumes:
            - configMap:
                defaultMode: 420
                items:
                  - key: config.yml.tpl
                    path: config.yml.tpl
                name: gitlab-registry
              name: registry-server-config-templates
            - emptyDir:
                medium: Memory
              name: registry-server-config
            - name: registry-secrets
              projected:
                defaultMode: 420
                sources:
                  - configMap:
                      name: gitlab-registry
                  - secret:
                      items:
                        - key: registry-auth.crt
                          path: certificate.crt
                      name: gitlab-registry-secret
                  - secret:
                      items:
                        - key: secret
                          path: httpSecret
                      name: gitlab-registry-httpsecret
                  - secret:
                      name: gitlab-minio-secret
            - emptyDir:
                medium: Memory
              name: etc-ssl-certs
            - emptyDir:
                medium: Memory
              name: etc-pki-ca-trust-extracted-pem
    status:
      availableReplicas: 1
      conditions:
        - lastTransitionTime: "2025-05-06T15:54:09Z"
          lastUpdateTime: "2025-05-06T15:54:09Z"
          message: Deployment has minimum availability.
          reason: MinimumReplicasAvailable
          status: "True"
          type: Available
        - lastTransitionTime: "2025-05-06T15:53:54Z"
          lastUpdateTime: "2025-05-06T15:54:09Z"
          message: ReplicaSet "gitlab-registry-6dd584bfb5" has successfully progressed.
          reason: NewReplicaSetAvailable
          status: "True"
          type: Progressing
      observedGeneration: 1
      readyReplicas: 1
      replicas: 1
      updatedReplicas: 1
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "1"
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      generation: 1
      labels:
        app: sidekiq
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: v17.11.1
        chart: sidekiq-8.11.1
        heritage: Helm
        queue-pod-name: all-in-1
        release: gitlab
      name: gitlab-sidekiq-all-in-1-v2
      namespace: gitlab
      resourceVersion: "8675"
      uid: 08c73921-b41a-4594-8a32-b62c4de9dfbc
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: sidekiq
          queue-pod-name: all-in-1
          release: gitlab
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            checksum/configmap: 3fd9390b8ac4b62085613cb2b4a44fc5be33f31920ba6f7df58588277a8bdf74
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
            gitlab.com/prometheus_path: /metrics
            gitlab.com/prometheus_port: "3807"
            gitlab.com/prometheus_scrape: "true"
            prometheus.io/path: /metrics
            prometheus.io/port: "3807"
            prometheus.io/scrape: "true"
          creationTimestamp: null
          labels:
            app: sidekiq
            app.kubernetes.io/name: gitlab
            app.kubernetes.io/version: v17.11.1
            chart: sidekiq-8.11.1
            heritage: Helm
            queue-pod-name: all-in-1
            release: gitlab
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchLabels:
                        app: sidekiq
                        release: gitlab
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          automountServiceAccountToken: false
          containers:
            - env:
                - name: prometheus_multiproc_dir
                  value: /metrics
                - name: GITALY_FEATURE_DEFAULT_ON
                  value: "1"
                - name: CONFIG_TEMPLATE_DIRECTORY
                  value: /var/opt/gitlab/templates
                - name: CONFIG_DIRECTORY
                  value: /srv/gitlab/config
                - name: SIDEKIQ_CONCURRENCY
                  value: "20"
                - name: SIDEKIQ_TIMEOUT
                  value: "25"
                - name: SIDEKIQ_QUEUES
                - name: SIDEKIQ_DAEMON_MEMORY_KILLER
                  value: "1"
                - name: SIDEKIQ_MEMORY_KILLER_CHECK_INTERVAL
                  value: "3"
                - name: SIDEKIQ_MEMORY_KILLER_MAX_RSS
                  value: "2000000"
                - name: SIDEKIQ_MEMORY_KILLER_GRACE_TIME
                  value: "900"
                - name: SIDEKIQ_MEMORY_KILLER_SHUTDOWN_WAIT
                  value: "30"
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce:v17.11.1
              imagePullPolicy: IfNotPresent
              lifecycle:
                preStop:
                  exec:
                    command:
                      - /bin/bash
                      - -c
                      - pkill -f 'sidekiq'
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /liveness
                  port: 3808
                  scheme: HTTP
                initialDelaySeconds: 20
                periodSeconds: 60
                successThreshold: 1
                timeoutSeconds: 30
              name: sidekiq
              ports:
                - containerPort: 3807
                  name: http-metrics
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /readiness
                  port: 3808
                  scheme: HTTP
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 2
              resources:
                requests:
                  cpu: 900m
                  memory: 2G
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /metrics
                  name: sidekiq-metrics
                - mountPath: /var/opt/gitlab/templates
                  name: sidekiq-config
                  readOnly: true
                - mountPath: /etc/gitlab
                  name: sidekiq-secrets
                  readOnly: true
                - mountPath: /srv/gitlab/config/secrets.yml
                  name: sidekiq-secrets
                  subPath: rails-secrets/secrets.yml
                - mountPath: /etc/krb5.conf
                  name: sidekiq-config
                  subPath: krb5.conf
                - mountPath: /srv/gitlab/config/initializers/smtp_settings.rb
                  name: sidekiq-config
                  subPath: smtp_settings.rb
                - mountPath: /srv/gitlab/INSTALLATION_TYPE
                  name: sidekiq-config
                  subPath: installation_type
                - mountPath: /etc/ssl/certs/
                  name: etc-ssl-certs
                  readOnly: true
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
                  readOnly: true
          dnsPolicy: ClusterFirst
          initContainers:
            - env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
              imagePullPolicy: IfNotPresent
              name: certificates
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/ssl/certs
                  name: etc-ssl-certs
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
            - command:
                - sh
                - /config/configure
              env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
              imagePullPolicy: IfNotPresent
              name: configure
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /config
                  name: sidekiq-config
                  readOnly: true
                - mountPath: /init-config
                  name: init-sidekiq-secrets
                  readOnly: true
                - mountPath: /init-secrets
                  name: sidekiq-secrets
            - args:
                - /scripts/wait-for-deps
              env:
                - name: GITALY_FEATURE_DEFAULT_ON
                  value: "1"
                - name: CONFIG_TEMPLATE_DIRECTORY
                  value: /var/opt/gitlab/templates
                - name: CONFIG_DIRECTORY
                  value: /srv/gitlab/config
                - name: SIDEKIQ_CONCURRENCY
                  value: "20"
                - name: SIDEKIQ_TIMEOUT
                  value: "25"
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce:v17.11.1
              imagePullPolicy: IfNotPresent
              name: dependencies
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/ssl/certs/
                  name: etc-ssl-certs
                  readOnly: true
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
                  readOnly: true
                - mountPath: /var/opt/gitlab/templates
                  name: sidekiq-config
                  readOnly: true
                - mountPath: /etc/gitlab
                  name: sidekiq-secrets
                  readOnly: true
                - mountPath: /srv/gitlab/config/secrets.yml
                  name: sidekiq-secrets
                  readOnly: true
                  subPath: rails-secrets/secrets.yml
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationGracePeriodSeconds: 30
          volumes:
            - emptyDir:
                medium: Memory
              name: sidekiq-metrics
            - name: sidekiq-config
              projected:
                defaultMode: 420
                sources:
                  - configMap:
                      name: gitlab-sidekiq
            - name: init-sidekiq-secrets
              projected:
                defaultMode: 256
                sources:
                  - secret:
                      items:
                        - key: secrets.yml
                          path: rails-secrets/secrets.yml
                      name: gitlab-rails-secret
                  - secret:
                      items:
                        - key: token
                          path: gitaly/gitaly_token
                      name: gitlab-gitaly-secret
                  - secret:
                      items:
                        - key: secret
                          path: redis/redis-password
                      name: gitlab-redis-secret
                  - secret:
                      items:
                        - key: postgresql-password
                          path: postgres/psql-password-ci
                      name: gitlab-postgresql-password
                  - secret:
                      items:
                        - key: postgresql-password
                          path: postgres/psql-password-main
                      name: gitlab-postgresql-password
                  - secret:
                      items:
                        - key: registry-auth.key
                          path: registry/gitlab-registry.key
                      name: gitlab-registry-secret
                  - secret:
                      items:
                        - key: secret
                          path: registry/notificationSecret
                      name: gitlab-registry-notification
                  - secret:
                      items:
                        - key: kas_shared_secret
                          path: kas/.gitlab_kas_secret
                      name: gitlab-gitlab-kas-secret
                  - secret:
                      items:
                        - key: suggested_reviewers_secret
                          path: suggested_reviewers/.gitlab_suggested_reviewers_secret
                      name: gitlab-gitlab-suggested-reviewers
                  - secret:
                      items:
                        - key: gitlab_username
                          path: zoekt/.gitlab_zoekt_username
                        - key: gitlab_password
                          path: zoekt/.gitlab_zoekt_password
                      name: gitlab-zoekt-basicauth
                      optional: true
                  - secret:
                      items:
                        - key: accesskey
                          path: minio/accesskey
                        - key: secretkey
                          path: minio/secretkey
                      name: gitlab-minio-secret
            - emptyDir:
                medium: Memory
              name: sidekiq-secrets
            - emptyDir:
                medium: Memory
              name: etc-ssl-certs
            - emptyDir:
                medium: Memory
              name: etc-pki-ca-trust-extracted-pem
    status:
      availableReplicas: 1
      conditions:
        - lastTransitionTime: "2025-05-06T15:56:31Z"
          lastUpdateTime: "2025-05-06T15:56:31Z"
          message: Deployment has minimum availability.
          reason: MinimumReplicasAvailable
          status: "True"
          type: Available
        - lastTransitionTime: "2025-05-06T15:53:54Z"
          lastUpdateTime: "2025-05-06T15:56:31Z"
          message: ReplicaSet "gitlab-sidekiq-all-in-1-v2-79c9955c5d" has successfully progressed.
          reason: NewReplicaSetAvailable
          status: "True"
          type: Progressing
      observedGeneration: 1
      readyReplicas: 1
      replicas: 1
      updatedReplicas: 1
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "1"
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      generation: 1
      labels:
        app: toolbox
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: v17.11.1
        chart: toolbox-8.11.1
        heritage: Helm
        release: gitlab
      name: gitlab-toolbox
      namespace: gitlab
      resourceVersion: "8363"
      uid: 97a5458b-2ba4-42b8-9314-8e9d0cf06ca3
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: toolbox
          release: gitlab
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            checksum/config: b9d8cc05eee84b5d587b6b2f1830174bb8b0ee817ce90c82c9e871403f61332a
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          creationTimestamp: null
          labels:
            app: toolbox
            app.kubernetes.io/name: gitlab
            app.kubernetes.io/version: v17.11.1
            chart: toolbox-8.11.1
            heritage: Helm
            release: gitlab
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchLabels:
                        app: gitaly
                        release: gitlab
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          automountServiceAccountToken: false
          containers:
            - args:
                - /bin/bash
                - -c
                - cp -v -r -L /etc/gitlab/.s3cfg $HOME/.s3cfg && while sleep 3600; do :; done
              env:
                - name: ARTIFACTS_BUCKET_NAME
                  value: gitlab-artifacts
                - name: REGISTRY_BUCKET_NAME
                  value: registry
                - name: LFS_BUCKET_NAME
                  value: git-lfs
                - name: UPLOADS_BUCKET_NAME
                  value: gitlab-uploads
                - name: PACKAGES_BUCKET_NAME
                  value: gitlab-packages
                - name: EXTERNAL_DIFFS_BUCKET_NAME
                  value: gitlab-mr-diffs
                - name: TERRAFORM_STATE_BUCKET_NAME
                  value: gitlab-terraform-state
                - name: CI_SECURE_FILES_BUCKET_NAME
                  value: gitlab-ci-secure-files
                - name: BACKUP_BUCKET_NAME
                  value: gitlab-backups
                - name: BACKUP_BACKEND
                  value: s3
                - name: TMP_BUCKET_NAME
                  value: tmp
                - name: PAGES_BUCKET_NAME
                  value: gitlab-pages
                - name: GITALY_FEATURE_DEFAULT_ON
                  value: "1"
                - name: CONFIG_TEMPLATE_DIRECTORY
                  value: /var/opt/gitlab/templates
                - name: CONFIG_DIRECTORY
                  value: /srv/gitlab/config
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce:v17.11.1
              imagePullPolicy: IfNotPresent
              name: toolbox
              resources:
                requests:
                  cpu: 50m
                  memory: 350M
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/opt/gitlab/templates
                  name: toolbox-config
                - mountPath: /etc/krb5.conf
                  name: toolbox-config
                  subPath: krb5.conf
                - mountPath: /srv/gitlab/config/initializers/smtp_settings.rb
                  name: toolbox-config
                  subPath: smtp_settings.rb
                - mountPath: /etc/gitlab
                  name: toolbox-secrets
                  readOnly: true
                - mountPath: /srv/gitlab/config/secrets.yml
                  name: toolbox-secrets
                  subPath: rails-secrets/secrets.yml
                - mountPath: /srv/gitlab/tmp
                  name: toolbox-tmp
                - mountPath: /etc/ssl/certs/
                  name: etc-ssl-certs
                  readOnly: true
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
                  readOnly: true
          dnsPolicy: ClusterFirst
          initContainers:
            - env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
              imagePullPolicy: IfNotPresent
              name: certificates
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/ssl/certs
                  name: etc-ssl-certs
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
            - command:
                - sh
                - /config/configure
              env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
              imagePullPolicy: IfNotPresent
              name: configure
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /config
                  name: toolbox-config
                  readOnly: true
                - mountPath: /init-config
                  name: init-toolbox-secrets
                  readOnly: true
                - mountPath: /init-secrets
                  name: toolbox-secrets
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 1000
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationGracePeriodSeconds: 30
          volumes:
            - name: toolbox-config
              projected:
                defaultMode: 420
                sources:
                  - configMap:
                      name: gitlab-toolbox
            - emptyDir: {}
              name: toolbox-tmp
            - name: init-toolbox-secrets
              projected:
                defaultMode: 256
                sources:
                  - secret:
                      items:
                        - key: secrets.yml
                          path: rails-secrets/secrets.yml
                      name: gitlab-rails-secret
                  - secret:
                      items:
                        - key: secret
                          path: shell/.gitlab_shell_secret
                      name: gitlab-gitlab-shell-secret
                  - secret:
                      items:
                        - key: token
                          path: gitaly/gitaly_token
                      name: gitlab-gitaly-secret
                  - secret:
                      items:
                        - key: secret
                          path: redis/redis-password
                      name: gitlab-redis-secret
                  - secret:
                      items:
                        - key: postgresql-password
                          path: postgres/psql-password-ci
                      name: gitlab-postgresql-password
                  - secret:
                      items:
                        - key: postgresql-password
                          path: postgres/psql-password-main
                      name: gitlab-postgresql-password
                  - secret:
                      items:
                        - key: registry-auth.key
                          path: registry/gitlab-registry.key
                      name: gitlab-registry-secret
                  - secret:
                      items:
                        - key: secret
                          path: registry/notificationSecret
                      name: gitlab-registry-notification
                  - secret:
                      items:
                        - key: kas_shared_secret
                          path: kas/.gitlab_kas_secret
                      name: gitlab-gitlab-kas-secret
                  - secret:
                      items:
                        - key: suggested_reviewers_secret
                          path: suggested_reviewers/.gitlab_suggested_reviewers_secret
                      name: gitlab-gitlab-suggested-reviewers
                  - secret:
                      items:
                        - key: gitlab_username
                          path: zoekt/.gitlab_zoekt_username
                        - key: gitlab_password
                          path: zoekt/.gitlab_zoekt_password
                      name: gitlab-zoekt-basicauth
                      optional: true
                  - secret:
                      items:
                        - key: accesskey
                          path: minio/accesskey
                        - key: secretkey
                          path: minio/secretkey
                      name: gitlab-minio-secret
            - emptyDir:
                medium: Memory
              name: toolbox-secrets
            - emptyDir:
                medium: Memory
              name: etc-ssl-certs
            - emptyDir:
                medium: Memory
              name: etc-pki-ca-trust-extracted-pem
    status:
      availableReplicas: 1
      conditions:
        - lastTransitionTime: "2025-05-06T15:54:04Z"
          lastUpdateTime: "2025-05-06T15:54:04Z"
          message: Deployment has minimum availability.
          reason: MinimumReplicasAvailable
          status: "True"
          type: Available
        - lastTransitionTime: "2025-05-06T15:53:54Z"
          lastUpdateTime: "2025-05-06T15:54:04Z"
          message: ReplicaSet "gitlab-toolbox-6f44749bb7" has successfully progressed.
          reason: NewReplicaSetAvailable
          status: "True"
          type: Progressing
      observedGeneration: 1
      readyReplicas: 1
      replicas: 1
      updatedReplicas: 1
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "1"
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      generation: 1
      labels:
        app: webservice
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: v17.11.1
        chart: webservice-8.11.1
        gitlab.com/webservice-name: default
        heritage: Helm
        release: gitlab
      name: gitlab-webservice-default
      namespace: gitlab
      resourceVersion: "8682"
      uid: d2c49590-b146-4886-875d-fff1729806e3
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: webservice
          gitlab.com/webservice-name: default
          release: gitlab
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            checksum/config: d26dca7a19e69253f24a88ae26d0c1fba73ea8f9129c03d36eca4227fa175ff4
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
            gitlab.com/prometheus_path: /metrics
            gitlab.com/prometheus_port: "8083"
            gitlab.com/prometheus_scrape: "true"
            prometheus.io/path: /metrics
            prometheus.io/port: "8083"
            prometheus.io/scrape: "true"
          creationTimestamp: null
          labels:
            app: webservice
            app.kubernetes.io/name: gitlab
            app.kubernetes.io/version: v17.11.1
            chart: webservice-8.11.1
            gitlab.com/webservice-name: default
            heritage: Helm
            release: gitlab
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchLabels:
                        app: webservice
                        gitlab.com/webservice-name: default
                        release: gitlab
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          automountServiceAccountToken: false
          containers:
            - env:
                - name: TZ
                  value: UTC
                - name: GITLAB_WEBSERVER
                  value: puma
                - name: TMPDIR
                  value: /tmp/gitlab
                - name: GITALY_FEATURE_DEFAULT_ON
                  value: "1"
                - name: CONFIG_TEMPLATE_DIRECTORY
                  value: /var/opt/gitlab/templates
                - name: CONFIG_DIRECTORY
                  value: /srv/gitlab/config
                - name: prometheus_multiproc_dir
                  value: /metrics
                - name: WORKER_PROCESSES
                  value: "2"
                - name: WORKER_TIMEOUT
                  value: "60"
                - name: INTERNAL_PORT
                  value: "8080"
                - name: PUMA_THREADS_MIN
                  value: "4"
                - name: PUMA_THREADS_MAX
                  value: "4"
                - name: PUMA_WORKER_MAX_MEMORY
                - name: DISABLE_PUMA_WORKER_KILLER
                  value: "true"
                - name: SHUTDOWN_BLACKOUT_SECONDS
                  value: "10"
                - name: WORKHORSE_ARCHIVE_CACHE_DISABLED
                  value: "true"
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce:v17.11.1
              imagePullPolicy: IfNotPresent
              lifecycle:
                preStop:
                  exec:
                    command:
                      - /bin/bash
                      - -c
                      - pkill -SIGINT -o ruby
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /-/liveness
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 20
                periodSeconds: 60
                successThreshold: 1
                timeoutSeconds: 30
              name: webservice
              ports:
                - containerPort: 8080
                  name: http-webservice
                  protocol: TCP
                - containerPort: 8083
                  name: http-metrics-ws
                  protocol: TCP
              readinessProbe:
                failureThreshold: 2
                httpGet:
                  path: /-/readiness
                  port: 8080
                  scheme: HTTP
                periodSeconds: 5
                successThreshold: 1
                timeoutSeconds: 2
              resources:
                requests:
                  cpu: 300m
                  memory: 2500M
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /metrics
                  name: webservice-metrics
                - mountPath: /var/opt/gitlab/templates
                  name: webservice-config
                - mountPath: /etc/gitlab
                  name: webservice-secrets
                  readOnly: true
                - mountPath: /srv/gitlab/config/secrets.yml
                  name: webservice-secrets
                  subPath: rails-secrets/secrets.yml
                - mountPath: /etc/krb5.conf
                  name: webservice-config
                  subPath: krb5.conf
                - mountPath: /srv/gitlab/config/initializers/smtp_settings.rb
                  name: webservice-config
                  subPath: smtp_settings.rb
                - mountPath: /srv/gitlab/INSTALLATION_TYPE
                  name: webservice-config
                  subPath: installation_type
                - mountPath: /srv/gitlab/public/uploads/tmp
                  name: shared-upload-directory
                - mountPath: /tmp
                  name: shared-tmp
                - mountPath: /etc/ssl/certs/
                  name: etc-ssl-certs
                  readOnly: true
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
                  readOnly: true
            - env:
                - name: TZ
                  value: UTC
                - name: TMPDIR
                  value: /tmp/gitlab
                - name: GITLAB_WORKHORSE_AUTH_BACKEND
                  value: http://localhost:8080
                - name: GITLAB_WORKHORSE_EXTRA_ARGS
                - name: GITLAB_WORKHORSE_LISTEN_PORT
                  value: "8181"
                - name: GITLAB_WORKHORSE_LOG_FORMAT
                  value: json
                - name: CONFIG_TEMPLATE_DIRECTORY
                  value: /var/opt/gitlab/templates
                - name: CONFIG_DIRECTORY
                  value: /srv/gitlab/config
                - name: SHUTDOWN_BLACKOUT_SECONDS
                  value: "10"
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ce:v17.11.1
              imagePullPolicy: IfNotPresent
              lifecycle:
                preStop:
                  exec:
                    command:
                      - /bin/bash
                      - -c
                      - sleep $SHUTDOWN_BLACKOUT_SECONDS
              livenessProbe:
                exec:
                  command:
                    - /scripts/healthcheck
                failureThreshold: 3
                initialDelaySeconds: 20
                periodSeconds: 60
                successThreshold: 1
                timeoutSeconds: 30
              name: gitlab-workhorse
              ports:
                - containerPort: 8181
                  name: http-workhorse
                  protocol: TCP
              readinessProbe:
                exec:
                  command:
                    - /scripts/healthcheck
                failureThreshold: 3
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 2
              resources:
                requests:
                  cpu: 100m
                  memory: 100M
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/opt/gitlab/templates
                  name: workhorse-config
                - mountPath: /etc/gitlab
                  name: workhorse-secrets
                  readOnly: true
                - mountPath: /srv/gitlab/public/uploads/tmp
                  name: shared-upload-directory
                - mountPath: /tmp
                  name: shared-tmp
                - mountPath: /etc/ssl/certs/
                  name: etc-ssl-certs
                  readOnly: true
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
                  readOnly: true
          dnsPolicy: ClusterFirst
          initContainers:
            - env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
              imagePullPolicy: IfNotPresent
              name: certificates
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/ssl/certs
                  name: etc-ssl-certs
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
            - args:
                - -c
                - sh -x /config-webservice/configure ; sh -x /config-workhorse/configure ; mkdir -p -m 3770 /tmp/gitlab
              command:
                - sh
              env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
              imagePullPolicy: IfNotPresent
              name: configure
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /config-webservice
                  name: webservice-config
                  readOnly: true
                - mountPath: /config-workhorse
                  name: workhorse-config
                  readOnly: true
                - mountPath: /init-config
                  name: init-webservice-secrets
                  readOnly: true
                - mountPath: /init-secrets
                  name: webservice-secrets
                - mountPath: /init-secrets-workhorse
                  name: workhorse-secrets
                - mountPath: /tmp
                  name: shared-tmp
            - args:
                - /scripts/wait-for-deps
              env:
                - name: TZ
                  value: UTC
                - name: GITALY_FEATURE_DEFAULT_ON
                  value: "1"
                - name: CONFIG_TEMPLATE_DIRECTORY
                  value: /var/opt/gitlab/templates
                - name: CONFIG_DIRECTORY
                  value: /srv/gitlab/config
                - name: WORKHORSE_ARCHIVE_CACHE_DISABLED
                  value: "1"
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce:v17.11.1
              imagePullPolicy: IfNotPresent
              name: dependencies
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/ssl/certs/
                  name: etc-ssl-certs
                  readOnly: true
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
                  readOnly: true
                - mountPath: /var/opt/gitlab/templates
                  name: webservice-config
                - mountPath: /etc/gitlab
                  name: webservice-secrets
                  readOnly: true
                - mountPath: /srv/gitlab/config/secrets.yml
                  name: webservice-secrets
                  readOnly: true
                  subPath: rails-secrets/secrets.yml
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationGracePeriodSeconds: 30
          volumes:
            - emptyDir: {}
              name: shared-tmp
            - emptyDir:
                medium: Memory
              name: webservice-metrics
            - configMap:
                defaultMode: 420
                name: gitlab-webservice
              name: webservice-config
            - configMap:
                defaultMode: 420
                name: gitlab-workhorse-default
              name: workhorse-config
            - name: init-webservice-secrets
              projected:
                defaultMode: 256
                sources:
                  - secret:
                      items:
                        - key: secrets.yml
                          path: rails-secrets/secrets.yml
                      name: gitlab-rails-secret
                  - secret:
                      items:
                        - key: secret
                          path: shell/.gitlab_shell_secret
                      name: gitlab-gitlab-shell-secret
                  - secret:
                      items:
                        - key: token
                          path: gitaly/gitaly_token
                      name: gitlab-gitaly-secret
                  - secret:
                      items:
                        - key: secret
                          path: redis/redis-password
                      name: gitlab-redis-secret
                  - secret:
                      items:
                        - key: postgresql-password
                          path: postgres/psql-password-ci
                      name: gitlab-postgresql-password
                  - secret:
                      items:
                        - key: postgresql-password
                          path: postgres/psql-password-main
                      name: gitlab-postgresql-password
                  - secret:
                      items:
                        - key: registry-auth.key
                          path: registry/gitlab-registry.key
                      name: gitlab-registry-secret
                  - secret:
                      items:
                        - key: secret
                          path: registry/notificationSecret
                      name: gitlab-registry-notification
                  - secret:
                      items:
                        - key: shared_secret
                          path: gitlab-workhorse/secret
                      name: gitlab-gitlab-workhorse-secret
                  - secret:
                      items:
                        - key: kas_shared_secret
                          path: kas/.gitlab_kas_secret
                      name: gitlab-gitlab-kas-secret
                  - secret:
                      items:
                        - key: suggested_reviewers_secret
                          path: suggested_reviewers/.gitlab_suggested_reviewers_secret
                      name: gitlab-gitlab-suggested-reviewers
                  - secret:
                      items:
                        - key: gitlab_username
                          path: zoekt/.gitlab_zoekt_username
                        - key: gitlab_password
                          path: zoekt/.gitlab_zoekt_password
                      name: gitlab-zoekt-basicauth
                      optional: true
                  - secret:
                      items:
                        - key: accesskey
                          path: minio/accesskey
                        - key: secretkey
                          path: minio/secretkey
                      name: gitlab-minio-secret
            - emptyDir:
                medium: Memory
              name: webservice-secrets
            - emptyDir:
                medium: Memory
              name: workhorse-secrets
            - emptyDir: {}
              name: shared-upload-directory
            - emptyDir:
                medium: Memory
              name: etc-ssl-certs
            - emptyDir:
                medium: Memory
              name: etc-pki-ca-trust-extracted-pem
    status:
      availableReplicas: 1
      conditions:
        - lastTransitionTime: "2025-05-06T15:56:33Z"
          lastUpdateTime: "2025-05-06T15:56:33Z"
          message: Deployment has minimum availability.
          reason: MinimumReplicasAvailable
          status: "True"
          type: Available
        - lastTransitionTime: "2025-05-06T15:53:54Z"
          lastUpdateTime: "2025-05-06T15:56:33Z"
          message: ReplicaSet "gitlab-webservice-default-67b89c8759" has successfully progressed.
          reason: NewReplicaSetAvailable
          status: "True"
          type: Progressing
      observedGeneration: 1
      readyReplicas: 1
      replicas: 1
      updatedReplicas: 1
  - apiVersion: apps/v1
    kind: ReplicaSet
    metadata:
      annotations:
        deployment.kubernetes.io/desired-replicas: "1"
        deployment.kubernetes.io/max-replicas: "2"
        deployment.kubernetes.io/revision: "1"
        meta.helm.sh/release-name: gitlab-operator
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T16:00:15Z"
      generation: 1
      labels:
        control-plane: controller-manager
        pod-template-hash: 55c94b95bc
      name: gitlab-controller-manager-55c94b95bc
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: Deployment
          name: gitlab-controller-manager
          uid: d142805a-4d9b-4fb6-8b46-8d034fe80f78
      resourceVersion: "8927"
      uid: b8000e59-99b2-431e-a070-01dcb717fbcf
    spec:
      replicas: 1
      selector:
        matchLabels:
          control-plane: controller-manager
          pod-template-hash: 55c94b95bc
      template:
        metadata:
          annotations:
            kubectl.kubernetes.io/default-container: manager
          creationTimestamp: null
          labels:
            control-plane: controller-manager
            pod-template-hash: 55c94b95bc
        spec:
          containers:
            - args:
                - --metrics-addr=:8443
                - --enable-leader-election
                - --zap-devel=false
                - --zap-log-level=info
                - --zap-time-encoding=epoch
              command:
                - /manager
              env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: GITLAB_MANAGER_SERVICE_ACCOUNT
                  value: gitlab-manager
                - name: GITLAB_APP_NONROOT_SERVICE_ACCOUNT
                  value: gitlab-app-nonroot
                - name: NGINX_SERVICE_ACCOUNT
                  value: gitlab-nginx-ingress
                - name: PROMETHEUS_SERVICE_ACCOUNT
                  value: gitlab-prometheus-server
              image: registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator:1.12.1
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /liveness
                  port: health-port
                  scheme: HTTP
                initialDelaySeconds: 15
                periodSeconds: 20
                successThreshold: 1
                timeoutSeconds: 1
              name: manager
              ports:
                - containerPort: 9443
                  name: webhook-server
                  protocol: TCP
                - containerPort: 6060
                  name: health-port
                  protocol: TCP
                - containerPort: 8443
                  name: metrics
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /readiness
                  port: health-port
                  scheme: HTTP
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                limits:
                  cpu: 200m
                  memory: 300Mi
                requests:
                  cpu: 200m
                  memory: 100Mi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /tmp/k8s-webhook-server/serving-certs
                  name: cert
                  readOnly: true
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: gitlab-manager
          serviceAccountName: gitlab-manager
          terminationGracePeriodSeconds: 10
          volumes:
            - name: cert
              secret:
                defaultMode: 420
                secretName: webhook-server-cert
    status:
      availableReplicas: 1
      fullyLabeledReplicas: 1
      observedGeneration: 1
      readyReplicas: 1
      replicas: 1
  - apiVersion: apps/v1
    kind: ReplicaSet
    metadata:
      annotations:
        deployment.kubernetes.io/desired-replicas: "1"
        deployment.kubernetes.io/max-replicas: "2"
        deployment.kubernetes.io/revision: "1"
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      generation: 1
      labels:
        app: gitlab-exporter
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: v17.11.1
        chart: gitlab-exporter-8.11.1
        heritage: Helm
        pod-template-hash: 78f695889f
        release: gitlab
      name: gitlab-gitlab-exporter-78f695889f
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: Deployment
          name: gitlab-gitlab-exporter
          uid: f480df6f-4f29-4fe9-8809-78629296afe4
      resourceVersion: "8348"
      uid: eb0a5e84-02dc-443d-8917-9dd5fad93faf
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: gitlab-exporter
          pod-template-hash: 78f695889f
          release: gitlab
      template:
        metadata:
          annotations:
            checksum/config: 7b82c156cd9172f3acf0df7031d9fdb86cbc7ccb4f45c4f636591144d47d6ab4
            gitlab.com/prometheus_path: /metrics
            gitlab.com/prometheus_port: "9168"
            gitlab.com/prometheus_scrape: "true"
            prometheus.io/path: /metrics
            prometheus.io/port: "9168"
            prometheus.io/scrape: "true"
          creationTimestamp: null
          labels:
            app: gitlab-exporter
            app.kubernetes.io/name: gitlab
            app.kubernetes.io/version: v17.11.1
            chart: gitlab-exporter-8.11.1
            heritage: Helm
            pod-template-hash: 78f695889f
            release: gitlab
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchLabels:
                        app: gitlab-exporter
                        release: gitlab
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          automountServiceAccountToken: false
          containers:
            - env:
                - name: TZ
                  value: UTC
                - name: CONFIG_TEMPLATE_DIRECTORY
                  value: /var/opt/gitlab-exporter/templates
                - name: CONFIG_DIRECTORY
                  value: /etc/gitlab-exporter
                - name: MALLOC_CONF
                  value: dirty_decay_ms:0,muzzy_decay_ms:0
                - name: RUBY_GC_HEAP_FREE_SLOTS_MAX_RATIO
                  value: "0.111"
                - name: RUBY_GC_HEAP_FREE_SLOTS_MIN_RATIO
                  value: "0.055"
                - name: RUBY_GC_HEAP_INIT_SLOTS
                  value: "80000"
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-exporter:15.3.0
              imagePullPolicy: IfNotPresent
              lifecycle:
                preStop:
                  exec:
                    command:
                      - /bin/bash
                      - -c
                      - pkill -f 'gitlab-exporter'
              livenessProbe:
                exec:
                  command:
                    - pgrep
                    - -f
                    - gitlab-exporter
                failureThreshold: 3
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              name: gitlab-exporter
              ports:
                - containerPort: 9168
                  name: http-metrics
                  protocol: TCP
              readinessProbe:
                exec:
                  command:
                    - pgrep
                    - -f
                    - gitlab-exporter
                failureThreshold: 3
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                requests:
                  cpu: 75m
                  memory: 100M
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/opt/gitlab-exporter/templates/gitlab-exporter.yml.erb
                  name: gitlab-exporter-config
                  subPath: gitlab-exporter.yml.erb
                - mountPath: /etc/gitlab
                  name: gitlab-exporter-secrets
                  readOnly: true
                - mountPath: /etc/ssl/certs/
                  name: etc-ssl-certs
                  readOnly: true
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
                  readOnly: true
          dnsPolicy: ClusterFirst
          initContainers:
            - env:
                - name: TZ
                  value: UTC
                - name: MALLOC_CONF
                  value: dirty_decay_ms:0,muzzy_decay_ms:0
                - name: RUBY_GC_HEAP_FREE_SLOTS_MAX_RATIO
                  value: "0.111"
                - name: RUBY_GC_HEAP_FREE_SLOTS_MIN_RATIO
                  value: "0.055"
                - name: RUBY_GC_HEAP_INIT_SLOTS
                  value: "80000"
              image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
              imagePullPolicy: IfNotPresent
              name: certificates
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/ssl/certs
                  name: etc-ssl-certs
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
            - command:
                - sh
                - /config/configure
              env:
                - name: TZ
                  value: UTC
                - name: MALLOC_CONF
                  value: dirty_decay_ms:0,muzzy_decay_ms:0
                - name: RUBY_GC_HEAP_FREE_SLOTS_MAX_RATIO
                  value: "0.111"
                - name: RUBY_GC_HEAP_FREE_SLOTS_MIN_RATIO
                  value: "0.055"
                - name: RUBY_GC_HEAP_INIT_SLOTS
                  value: "80000"
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
              imagePullPolicy: IfNotPresent
              name: configure
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /config
                  name: gitlab-exporter-config
                  readOnly: true
                - mountPath: /init-config
                  name: init-gitlab-exporter-secrets
                  readOnly: true
                - mountPath: /init-secrets
                  name: gitlab-exporter-secrets
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationGracePeriodSeconds: 30
          volumes:
            - configMap:
                defaultMode: 420
                name: gitlab-gitlab-exporter
              name: gitlab-exporter-config
            - name: init-gitlab-exporter-secrets
              projected:
                defaultMode: 256
                sources:
                  - secret:
                      items:
                        - key: postgresql-password
                          path: postgres/psql-password-ci
                      name: gitlab-postgresql-password
                  - secret:
                      items:
                        - key: postgresql-password
                          path: postgres/psql-password-main
                      name: gitlab-postgresql-password
                  - secret:
                      items:
                        - key: secret
                          path: redis/redis-password
                      name: gitlab-redis-secret
            - emptyDir:
                medium: Memory
              name: gitlab-exporter-secrets
            - emptyDir:
                medium: Memory
              name: etc-ssl-certs
            - emptyDir:
                medium: Memory
              name: etc-pki-ca-trust-extracted-pem
    status:
      availableReplicas: 1
      fullyLabeledReplicas: 1
      observedGeneration: 1
      readyReplicas: 1
      replicas: 1
  - apiVersion: apps/v1
    kind: ReplicaSet
    metadata:
      annotations:
        deployment.kubernetes.io/desired-replicas: "1"
        deployment.kubernetes.io/max-replicas: "2"
        deployment.kubernetes.io/revision: "1"
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      generation: 1
      labels:
        app: gitlab-shell
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: v17.11.1
        chart: gitlab-shell-8.11.1
        heritage: Helm
        pod-template-hash: 64f8c9b487
        release: gitlab
      name: gitlab-gitlab-shell-64f8c9b487
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: Deployment
          name: gitlab-gitlab-shell
          uid: cfd16965-594a-4184-ad32-9b0ce0f02f2b
      resourceVersion: "8461"
      uid: 107dbcce-5dd1-4e3d-a245-fbd619f972ca
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: gitlab-shell
          pod-template-hash: 64f8c9b487
          release: gitlab
      template:
        metadata:
          annotations:
            checksum/config: e19c03fbe02a0049de6285b98359d4acaaf34e7222ac4026fe03ebd52688c72d
            checksum/config-sshd: 44ed1eca6e5f82430bf45cc116da39f7d235b4a0672a0bd34c54cb33eceb61a4
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          creationTimestamp: null
          labels:
            app: gitlab-shell
            app.kubernetes.io/name: gitlab
            app.kubernetes.io/version: v17.11.1
            chart: gitlab-shell-8.11.1
            heritage: Helm
            pod-template-hash: 64f8c9b487
            release: gitlab
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchLabels:
                        app: gitlab-shell
                        release: gitlab
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          automountServiceAccountToken: false
          containers:
            - env:
                - name: GITALY_FEATURE_DEFAULT_ON
                  value: "1"
                - name: CONFIG_TEMPLATE_DIRECTORY
                  value: /etc/gitlab-shell
                - name: CONFIG_DIRECTORY
                  value: /srv/gitlab-shell
                - name: KEYS_DIRECTORY
                  value: /etc/gitlab-secrets/ssh
                - name: SSH_DAEMON
                  value: openssh
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-shell:v14.41.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                exec:
                  command:
                    - /scripts/healthcheck
                failureThreshold: 3
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 3
              name: gitlab-shell
              ports:
                - containerPort: 2222
                  name: ssh
                  protocol: TCP
              readinessProbe:
                failureThreshold: 2
                initialDelaySeconds: 10
                periodSeconds: 5
                successThreshold: 1
                tcpSocket:
                  port: 2222
                timeoutSeconds: 3
              resources:
                requests:
                  cpu: "0"
                  memory: 6M
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/gitlab-shell
                  name: shell-config
                - mountPath: /etc/gitlab-secrets
                  name: shell-secrets
                  readOnly: true
                - mountPath: /etc/krb5.conf
                  name: shell-config
                  readOnly: true
                  subPath: krb5.conf
                - mountPath: /etc/ssh/sshd_config
                  name: sshd-config
                  readOnly: true
                  subPath: sshd_config
                - mountPath: /etc/ssl/certs/
                  name: etc-ssl-certs
                  readOnly: true
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
                  readOnly: true
          dnsPolicy: ClusterFirst
          initContainers:
            - env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
              imagePullPolicy: IfNotPresent
              name: certificates
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/ssl/certs
                  name: etc-ssl-certs
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
            - command:
                - sh
                - /config/configure
              env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
              imagePullPolicy: IfNotPresent
              name: configure
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /config
                  name: shell-config
                  readOnly: true
                - mountPath: /init-config
                  name: shell-init-secrets
                  readOnly: true
                - mountPath: /init-secrets
                  name: shell-secrets
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationGracePeriodSeconds: 30
          volumes:
            - configMap:
                defaultMode: 420
                name: gitlab-gitlab-shell
              name: shell-config
            - configMap:
                defaultMode: 420
                name: gitlab-gitlab-shell-sshd
              name: sshd-config
            - name: shell-init-secrets
              projected:
                defaultMode: 288
                sources:
                  - secret:
                      name: gitlab-gitlab-shell-host-keys
                  - secret:
                      items:
                        - key: secret
                          path: shell/.gitlab_shell_secret
                      name: gitlab-gitlab-shell-secret
            - emptyDir:
                medium: Memory
              name: shell-secrets
            - emptyDir:
                medium: Memory
              name: etc-ssl-certs
            - emptyDir:
                medium: Memory
              name: etc-pki-ca-trust-extracted-pem
    status:
      availableReplicas: 1
      fullyLabeledReplicas: 1
      observedGeneration: 1
      readyReplicas: 1
      replicas: 1
  - apiVersion: apps/v1
    kind: ReplicaSet
    metadata:
      annotations:
        deployment.kubernetes.io/desired-replicas: "2"
        deployment.kubernetes.io/max-replicas: "3"
        deployment.kubernetes.io/revision: "1"
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      generation: 2
      labels:
        app: kas
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: v17.11.1
        chart: kas-8.11.1
        heritage: Helm
        pod-template-hash: 799cc6dfff
        release: gitlab
      name: gitlab-kas-799cc6dfff
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: Deployment
          name: gitlab-kas
          uid: ce408bc7-f2cf-400d-afa4-a49849173569
      resourceVersion: "8544"
      uid: e8285def-aaa2-4fa1-9230-e988d5345e5e
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: kas
          pod-template-hash: 799cc6dfff
          release: gitlab
      template:
        metadata:
          annotations:
            checksum/config: cd0e5701cd886cdf296bbe882e8cee02c663ece7265d5fe2824c082611ec409f
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
            gitlab.com/prometheus_path: /metrics
            gitlab.com/prometheus_port: "8151"
            gitlab.com/prometheus_scrape: "true"
            prometheus.io/path: /metrics
            prometheus.io/port: "8151"
            prometheus.io/scrape: "true"
          creationTimestamp: null
          labels:
            app: kas
            app.kubernetes.io/name: gitlab
            app.kubernetes.io/version: v17.11.1
            chart: kas-8.11.1
            heritage: Helm
            pod-template-hash: 799cc6dfff
            release: gitlab
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchLabels:
                        app: kas
                        release: gitlab
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          automountServiceAccountToken: false
          containers:
            - args:
                - --configuration-file=/etc/kas/config.yaml
              env:
                - name: OWN_PRIVATE_API_HOST
                  value: gitlab-kas.gitlab.svc
                - name: POD_IP
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: status.podIP
                - name: OWN_PRIVATE_API_URL
                  value: grpc://$(POD_IP):8155
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-kas:v17.11.1
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /liveness
                  port: 8151
                  scheme: HTTP
                initialDelaySeconds: 15
                periodSeconds: 20
                successThreshold: 1
                timeoutSeconds: 1
              name: kas
              ports:
                - containerPort: 8150
                  name: kas
                  protocol: TCP
                - containerPort: 8154
                  name: kas-k8s-api
                  protocol: TCP
                - containerPort: 8155
                  name: kas-private-api
                  protocol: TCP
                - containerPort: 8151
                  name: http-metrics
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /readiness
                  port: 8151
                  scheme: HTTP
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                requests:
                  cpu: 100m
                  memory: 256Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 65532
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/kas
                  name: init-etc-kas
                  readOnly: true
                - mountPath: /etc/ssl/certs/
                  name: etc-ssl-certs
                  readOnly: true
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
                  readOnly: true
          dnsPolicy: ClusterFirst
          initContainers:
            - env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
              imagePullPolicy: IfNotPresent
              name: certificates
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/ssl/certs
                  name: etc-ssl-certs
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 65532
            runAsGroup: 65532
            runAsUser: 65532
            seccompProfile:
              type: RuntimeDefault
          terminationGracePeriodSeconds: 300
          volumes:
            - emptyDir:
                medium: Memory
              name: etc-ssl-certs
            - emptyDir:
                medium: Memory
              name: etc-pki-ca-trust-extracted-pem
            - name: init-etc-kas
              projected:
                defaultMode: 288
                sources:
                  - configMap:
                      name: gitlab-kas
                  - secret:
                      items:
                        - key: kas_shared_secret
                          path: .gitlab_kas_secret
                      name: gitlab-gitlab-kas-secret
                  - secret:
                      items:
                        - key: kas_private_api_secret
                          path: .gitlab_kas_private_api_secret
                      name: gitlab-kas-private-api
                  - secret:
                      items:
                        - key: kas_websocket_token_secret
                          path: .gitlab_kas_websocket_token_secret
                      name: gitlab-kas-websocket-token
                  - secret:
                      items:
                        - key: secret
                          path: redis/redis-password
                      name: gitlab-redis-secret
    status:
      availableReplicas: 2
      fullyLabeledReplicas: 2
      observedGeneration: 2
      readyReplicas: 2
      replicas: 2
  - apiVersion: apps/v1
    kind: ReplicaSet
    metadata:
      annotations:
        deployment.kubernetes.io/desired-replicas: "1"
        deployment.kubernetes.io/max-replicas: "1"
        deployment.kubernetes.io/revision: "1"
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      generation: 1
      labels:
        app: minio
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: RELEASE.2017-12-28T01-21-00Z
        chart: minio-0.4.3
        component: app
        heritage: Helm
        pod-template-hash: 68fdc7fdb4
        release: gitlab
      name: gitlab-minio-68fdc7fdb4
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: Deployment
          name: gitlab-minio
          uid: 057fd465-979e-42ec-ab97-0ff09258a246
      resourceVersion: "8244"
      uid: 5a2eb025-fd08-4a63-94ae-fce56d8e7a58
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: minio
          component: app
          pod-template-hash: 68fdc7fdb4
          release: gitlab
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: minio
            app.kubernetes.io/name: gitlab
            app.kubernetes.io/version: RELEASE.2017-12-28T01-21-00Z
            chart: minio-0.4.3
            component: app
            heritage: Helm
            pod-template-hash: 68fdc7fdb4
            release: gitlab
          name: gitlab-minio
        spec:
          automountServiceAccountToken: false
          containers:
            - args:
                - -C
                - /tmp/.minio
                - --quiet
                - server
                - /export
              env:
                - name: TZ
                  value: UTC
              image: minio/minio:RELEASE.2017-12-28T01-21-00Z
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 9000
                timeoutSeconds: 1
              name: minio
              ports:
                - containerPort: 9000
                  name: service
                  protocol: TCP
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /export
                  name: export
                - mountPath: /tmp/.minio
                  name: minio-server-config
                - mountPath: /podinfo
                  name: podinfo
          dnsPolicy: ClusterFirst
          initContainers:
            - command:
                - sh
                - /config/configure
              env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
              imagePullPolicy: IfNotPresent
              name: configure
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /config
                  name: minio-configuration
                - mountPath: /minio
                  name: minio-server-config
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationGracePeriodSeconds: 30
          volumes:
            - downwardAPI:
                defaultMode: 420
                items:
                  - fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.labels
                    path: labels
              name: podinfo
            - name: export
              persistentVolumeClaim:
                claimName: gitlab-minio
            - name: minio-configuration
              projected:
                defaultMode: 420
                sources:
                  - configMap:
                      name: gitlab-minio-config-cm
                  - secret:
                      name: gitlab-minio-secret
            - emptyDir:
                medium: Memory
              name: minio-server-config
    status:
      availableReplicas: 1
      fullyLabeledReplicas: 1
      observedGeneration: 1
      readyReplicas: 1
      replicas: 1
  - apiVersion: apps/v1
    kind: ReplicaSet
    metadata:
      annotations:
        deployment.kubernetes.io/desired-replicas: "1"
        deployment.kubernetes.io/max-replicas: "2"
        deployment.kubernetes.io/revision: "1"
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      generation: 1
      labels:
        app: registry
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: v17.11.1
        chart: registry-0.7.0
        heritage: Helm
        pod-template-hash: 6dd584bfb5
        release: gitlab
      name: gitlab-registry-6dd584bfb5
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: Deployment
          name: gitlab-registry
          uid: 9869a7a5-e8fe-43a6-8e2e-532dadf3c6db
      resourceVersion: "8415"
      uid: 77242983-8045-47f0-967b-fa9a62a865b3
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: registry
          pod-template-hash: 6dd584bfb5
          release: gitlab
      template:
        metadata:
          annotations:
            checksum/configmap: 840dba49c1629192eac0ddefb235b0e1b6f2acae680290acc888bf1b8578ff7a
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          creationTimestamp: null
          labels:
            app: registry
            app.kubernetes.io/name: gitlab
            app.kubernetes.io/version: v17.11.1
            chart: registry-0.7.0
            heritage: Helm
            pod-template-hash: 6dd584bfb5
            release: gitlab
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchLabels:
                        app: registry
                        release: gitlab
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          automountServiceAccountToken: false
          containers:
            - env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-container-registry:v4.19.0-gitlab
              imagePullPolicy: IfNotPresent
              lifecycle:
                preStop:
                  exec:
                    command:
                      - /bin/bash
                      - -c
                      - sleep 5
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /debug/health
                  port: debug
                  scheme: HTTP
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              name: registry
              ports:
                - containerPort: 5000
                  name: http
                  protocol: TCP
                - containerPort: 5001
                  name: debug
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /debug/health
                  port: debug
                  scheme: HTTP
                initialDelaySeconds: 5
                periodSeconds: 5
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                requests:
                  cpu: 50m
                  memory: 32Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/docker/registry/
                  name: registry-server-config
                  readOnly: true
                - mountPath: /etc/ssl/certs/
                  name: etc-ssl-certs
                  readOnly: true
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
                  readOnly: true
          dnsPolicy: ClusterFirst
          initContainers:
            - env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
              imagePullPolicy: IfNotPresent
              name: certificates
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/ssl/certs
                  name: etc-ssl-certs
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
            - args:
                - sh
                - /config/configure
              env:
                - name: CONFIG_TEMPLATE_DIRECTORY
                  value: /templates
                - name: CONFIG_DIRECTORY
                  value: /registry
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
              imagePullPolicy: IfNotPresent
              name: configure
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /config
                  name: registry-secrets
                - mountPath: /templates
                  name: registry-server-config-templates
                  readOnly: true
                - mountPath: /registry
                  name: registry-server-config
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationGracePeriodSeconds: 30
          volumes:
            - configMap:
                defaultMode: 420
                items:
                  - key: config.yml.tpl
                    path: config.yml.tpl
                name: gitlab-registry
              name: registry-server-config-templates
            - emptyDir:
                medium: Memory
              name: registry-server-config
            - name: registry-secrets
              projected:
                defaultMode: 420
                sources:
                  - configMap:
                      name: gitlab-registry
                  - secret:
                      items:
                        - key: registry-auth.crt
                          path: certificate.crt
                      name: gitlab-registry-secret
                  - secret:
                      items:
                        - key: secret
                          path: httpSecret
                      name: gitlab-registry-httpsecret
                  - secret:
                      name: gitlab-minio-secret
            - emptyDir:
                medium: Memory
              name: etc-ssl-certs
            - emptyDir:
                medium: Memory
              name: etc-pki-ca-trust-extracted-pem
    status:
      availableReplicas: 1
      fullyLabeledReplicas: 1
      observedGeneration: 1
      readyReplicas: 1
      replicas: 1
  - apiVersion: apps/v1
    kind: ReplicaSet
    metadata:
      annotations:
        deployment.kubernetes.io/desired-replicas: "1"
        deployment.kubernetes.io/max-replicas: "2"
        deployment.kubernetes.io/revision: "1"
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      generation: 1
      labels:
        app: sidekiq
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: v17.11.1
        chart: sidekiq-8.11.1
        heritage: Helm
        pod-template-hash: 79c9955c5d
        queue-pod-name: all-in-1
        release: gitlab
      name: gitlab-sidekiq-all-in-1-v2-79c9955c5d
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: Deployment
          name: gitlab-sidekiq-all-in-1-v2
          uid: 08c73921-b41a-4594-8a32-b62c4de9dfbc
      resourceVersion: "8673"
      uid: d282ad98-d0cc-4692-9dd8-207c2be573db
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: sidekiq
          pod-template-hash: 79c9955c5d
          queue-pod-name: all-in-1
          release: gitlab
      template:
        metadata:
          annotations:
            checksum/configmap: 3fd9390b8ac4b62085613cb2b4a44fc5be33f31920ba6f7df58588277a8bdf74
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
            gitlab.com/prometheus_path: /metrics
            gitlab.com/prometheus_port: "3807"
            gitlab.com/prometheus_scrape: "true"
            prometheus.io/path: /metrics
            prometheus.io/port: "3807"
            prometheus.io/scrape: "true"
          creationTimestamp: null
          labels:
            app: sidekiq
            app.kubernetes.io/name: gitlab
            app.kubernetes.io/version: v17.11.1
            chart: sidekiq-8.11.1
            heritage: Helm
            pod-template-hash: 79c9955c5d
            queue-pod-name: all-in-1
            release: gitlab
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchLabels:
                        app: sidekiq
                        release: gitlab
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          automountServiceAccountToken: false
          containers:
            - env:
                - name: prometheus_multiproc_dir
                  value: /metrics
                - name: GITALY_FEATURE_DEFAULT_ON
                  value: "1"
                - name: CONFIG_TEMPLATE_DIRECTORY
                  value: /var/opt/gitlab/templates
                - name: CONFIG_DIRECTORY
                  value: /srv/gitlab/config
                - name: SIDEKIQ_CONCURRENCY
                  value: "20"
                - name: SIDEKIQ_TIMEOUT
                  value: "25"
                - name: SIDEKIQ_QUEUES
                - name: SIDEKIQ_DAEMON_MEMORY_KILLER
                  value: "1"
                - name: SIDEKIQ_MEMORY_KILLER_CHECK_INTERVAL
                  value: "3"
                - name: SIDEKIQ_MEMORY_KILLER_MAX_RSS
                  value: "2000000"
                - name: SIDEKIQ_MEMORY_KILLER_GRACE_TIME
                  value: "900"
                - name: SIDEKIQ_MEMORY_KILLER_SHUTDOWN_WAIT
                  value: "30"
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce:v17.11.1
              imagePullPolicy: IfNotPresent
              lifecycle:
                preStop:
                  exec:
                    command:
                      - /bin/bash
                      - -c
                      - pkill -f 'sidekiq'
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /liveness
                  port: 3808
                  scheme: HTTP
                initialDelaySeconds: 20
                periodSeconds: 60
                successThreshold: 1
                timeoutSeconds: 30
              name: sidekiq
              ports:
                - containerPort: 3807
                  name: http-metrics
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /readiness
                  port: 3808
                  scheme: HTTP
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 2
              resources:
                requests:
                  cpu: 900m
                  memory: 2G
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /metrics
                  name: sidekiq-metrics
                - mountPath: /var/opt/gitlab/templates
                  name: sidekiq-config
                  readOnly: true
                - mountPath: /etc/gitlab
                  name: sidekiq-secrets
                  readOnly: true
                - mountPath: /srv/gitlab/config/secrets.yml
                  name: sidekiq-secrets
                  subPath: rails-secrets/secrets.yml
                - mountPath: /etc/krb5.conf
                  name: sidekiq-config
                  subPath: krb5.conf
                - mountPath: /srv/gitlab/config/initializers/smtp_settings.rb
                  name: sidekiq-config
                  subPath: smtp_settings.rb
                - mountPath: /srv/gitlab/INSTALLATION_TYPE
                  name: sidekiq-config
                  subPath: installation_type
                - mountPath: /etc/ssl/certs/
                  name: etc-ssl-certs
                  readOnly: true
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
                  readOnly: true
          dnsPolicy: ClusterFirst
          initContainers:
            - env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
              imagePullPolicy: IfNotPresent
              name: certificates
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/ssl/certs
                  name: etc-ssl-certs
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
            - command:
                - sh
                - /config/configure
              env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
              imagePullPolicy: IfNotPresent
              name: configure
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /config
                  name: sidekiq-config
                  readOnly: true
                - mountPath: /init-config
                  name: init-sidekiq-secrets
                  readOnly: true
                - mountPath: /init-secrets
                  name: sidekiq-secrets
            - args:
                - /scripts/wait-for-deps
              env:
                - name: GITALY_FEATURE_DEFAULT_ON
                  value: "1"
                - name: CONFIG_TEMPLATE_DIRECTORY
                  value: /var/opt/gitlab/templates
                - name: CONFIG_DIRECTORY
                  value: /srv/gitlab/config
                - name: SIDEKIQ_CONCURRENCY
                  value: "20"
                - name: SIDEKIQ_TIMEOUT
                  value: "25"
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-sidekiq-ce:v17.11.1
              imagePullPolicy: IfNotPresent
              name: dependencies
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/ssl/certs/
                  name: etc-ssl-certs
                  readOnly: true
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
                  readOnly: true
                - mountPath: /var/opt/gitlab/templates
                  name: sidekiq-config
                  readOnly: true
                - mountPath: /etc/gitlab
                  name: sidekiq-secrets
                  readOnly: true
                - mountPath: /srv/gitlab/config/secrets.yml
                  name: sidekiq-secrets
                  readOnly: true
                  subPath: rails-secrets/secrets.yml
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationGracePeriodSeconds: 30
          volumes:
            - emptyDir:
                medium: Memory
              name: sidekiq-metrics
            - name: sidekiq-config
              projected:
                defaultMode: 420
                sources:
                  - configMap:
                      name: gitlab-sidekiq
            - name: init-sidekiq-secrets
              projected:
                defaultMode: 256
                sources:
                  - secret:
                      items:
                        - key: secrets.yml
                          path: rails-secrets/secrets.yml
                      name: gitlab-rails-secret
                  - secret:
                      items:
                        - key: token
                          path: gitaly/gitaly_token
                      name: gitlab-gitaly-secret
                  - secret:
                      items:
                        - key: secret
                          path: redis/redis-password
                      name: gitlab-redis-secret
                  - secret:
                      items:
                        - key: postgresql-password
                          path: postgres/psql-password-ci
                      name: gitlab-postgresql-password
                  - secret:
                      items:
                        - key: postgresql-password
                          path: postgres/psql-password-main
                      name: gitlab-postgresql-password
                  - secret:
                      items:
                        - key: registry-auth.key
                          path: registry/gitlab-registry.key
                      name: gitlab-registry-secret
                  - secret:
                      items:
                        - key: secret
                          path: registry/notificationSecret
                      name: gitlab-registry-notification
                  - secret:
                      items:
                        - key: kas_shared_secret
                          path: kas/.gitlab_kas_secret
                      name: gitlab-gitlab-kas-secret
                  - secret:
                      items:
                        - key: suggested_reviewers_secret
                          path: suggested_reviewers/.gitlab_suggested_reviewers_secret
                      name: gitlab-gitlab-suggested-reviewers
                  - secret:
                      items:
                        - key: gitlab_username
                          path: zoekt/.gitlab_zoekt_username
                        - key: gitlab_password
                          path: zoekt/.gitlab_zoekt_password
                      name: gitlab-zoekt-basicauth
                      optional: true
                  - secret:
                      items:
                        - key: accesskey
                          path: minio/accesskey
                        - key: secretkey
                          path: minio/secretkey
                      name: gitlab-minio-secret
            - emptyDir:
                medium: Memory
              name: sidekiq-secrets
            - emptyDir:
                medium: Memory
              name: etc-ssl-certs
            - emptyDir:
                medium: Memory
              name: etc-pki-ca-trust-extracted-pem
    status:
      availableReplicas: 1
      fullyLabeledReplicas: 1
      observedGeneration: 1
      readyReplicas: 1
      replicas: 1
  - apiVersion: apps/v1
    kind: ReplicaSet
    metadata:
      annotations:
        deployment.kubernetes.io/desired-replicas: "1"
        deployment.kubernetes.io/max-replicas: "1"
        deployment.kubernetes.io/revision: "1"
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      generation: 1
      labels:
        app: toolbox
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: v17.11.1
        chart: toolbox-8.11.1
        heritage: Helm
        pod-template-hash: 6f44749bb7
        release: gitlab
      name: gitlab-toolbox-6f44749bb7
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: Deployment
          name: gitlab-toolbox
          uid: 97a5458b-2ba4-42b8-9314-8e9d0cf06ca3
      resourceVersion: "8354"
      uid: 4403ddcf-883f-42c9-85a3-de3939694bd5
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: toolbox
          pod-template-hash: 6f44749bb7
          release: gitlab
      template:
        metadata:
          annotations:
            checksum/config: b9d8cc05eee84b5d587b6b2f1830174bb8b0ee817ce90c82c9e871403f61332a
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          creationTimestamp: null
          labels:
            app: toolbox
            app.kubernetes.io/name: gitlab
            app.kubernetes.io/version: v17.11.1
            chart: toolbox-8.11.1
            heritage: Helm
            pod-template-hash: 6f44749bb7
            release: gitlab
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchLabels:
                        app: gitaly
                        release: gitlab
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          automountServiceAccountToken: false
          containers:
            - args:
                - /bin/bash
                - -c
                - cp -v -r -L /etc/gitlab/.s3cfg $HOME/.s3cfg && while sleep 3600; do :; done
              env:
                - name: ARTIFACTS_BUCKET_NAME
                  value: gitlab-artifacts
                - name: REGISTRY_BUCKET_NAME
                  value: registry
                - name: LFS_BUCKET_NAME
                  value: git-lfs
                - name: UPLOADS_BUCKET_NAME
                  value: gitlab-uploads
                - name: PACKAGES_BUCKET_NAME
                  value: gitlab-packages
                - name: EXTERNAL_DIFFS_BUCKET_NAME
                  value: gitlab-mr-diffs
                - name: TERRAFORM_STATE_BUCKET_NAME
                  value: gitlab-terraform-state
                - name: CI_SECURE_FILES_BUCKET_NAME
                  value: gitlab-ci-secure-files
                - name: BACKUP_BUCKET_NAME
                  value: gitlab-backups
                - name: BACKUP_BACKEND
                  value: s3
                - name: TMP_BUCKET_NAME
                  value: tmp
                - name: PAGES_BUCKET_NAME
                  value: gitlab-pages
                - name: GITALY_FEATURE_DEFAULT_ON
                  value: "1"
                - name: CONFIG_TEMPLATE_DIRECTORY
                  value: /var/opt/gitlab/templates
                - name: CONFIG_DIRECTORY
                  value: /srv/gitlab/config
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce:v17.11.1
              imagePullPolicy: IfNotPresent
              name: toolbox
              resources:
                requests:
                  cpu: 50m
                  memory: 350M
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/opt/gitlab/templates
                  name: toolbox-config
                - mountPath: /etc/krb5.conf
                  name: toolbox-config
                  subPath: krb5.conf
                - mountPath: /srv/gitlab/config/initializers/smtp_settings.rb
                  name: toolbox-config
                  subPath: smtp_settings.rb
                - mountPath: /etc/gitlab
                  name: toolbox-secrets
                  readOnly: true
                - mountPath: /srv/gitlab/config/secrets.yml
                  name: toolbox-secrets
                  subPath: rails-secrets/secrets.yml
                - mountPath: /srv/gitlab/tmp
                  name: toolbox-tmp
                - mountPath: /etc/ssl/certs/
                  name: etc-ssl-certs
                  readOnly: true
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
                  readOnly: true
          dnsPolicy: ClusterFirst
          initContainers:
            - env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
              imagePullPolicy: IfNotPresent
              name: certificates
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/ssl/certs
                  name: etc-ssl-certs
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
            - command:
                - sh
                - /config/configure
              env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
              imagePullPolicy: IfNotPresent
              name: configure
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /config
                  name: toolbox-config
                  readOnly: true
                - mountPath: /init-config
                  name: init-toolbox-secrets
                  readOnly: true
                - mountPath: /init-secrets
                  name: toolbox-secrets
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 1000
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationGracePeriodSeconds: 30
          volumes:
            - name: toolbox-config
              projected:
                defaultMode: 420
                sources:
                  - configMap:
                      name: gitlab-toolbox
            - emptyDir: {}
              name: toolbox-tmp
            - name: init-toolbox-secrets
              projected:
                defaultMode: 256
                sources:
                  - secret:
                      items:
                        - key: secrets.yml
                          path: rails-secrets/secrets.yml
                      name: gitlab-rails-secret
                  - secret:
                      items:
                        - key: secret
                          path: shell/.gitlab_shell_secret
                      name: gitlab-gitlab-shell-secret
                  - secret:
                      items:
                        - key: token
                          path: gitaly/gitaly_token
                      name: gitlab-gitaly-secret
                  - secret:
                      items:
                        - key: secret
                          path: redis/redis-password
                      name: gitlab-redis-secret
                  - secret:
                      items:
                        - key: postgresql-password
                          path: postgres/psql-password-ci
                      name: gitlab-postgresql-password
                  - secret:
                      items:
                        - key: postgresql-password
                          path: postgres/psql-password-main
                      name: gitlab-postgresql-password
                  - secret:
                      items:
                        - key: registry-auth.key
                          path: registry/gitlab-registry.key
                      name: gitlab-registry-secret
                  - secret:
                      items:
                        - key: secret
                          path: registry/notificationSecret
                      name: gitlab-registry-notification
                  - secret:
                      items:
                        - key: kas_shared_secret
                          path: kas/.gitlab_kas_secret
                      name: gitlab-gitlab-kas-secret
                  - secret:
                      items:
                        - key: suggested_reviewers_secret
                          path: suggested_reviewers/.gitlab_suggested_reviewers_secret
                      name: gitlab-gitlab-suggested-reviewers
                  - secret:
                      items:
                        - key: gitlab_username
                          path: zoekt/.gitlab_zoekt_username
                        - key: gitlab_password
                          path: zoekt/.gitlab_zoekt_password
                      name: gitlab-zoekt-basicauth
                      optional: true
                  - secret:
                      items:
                        - key: accesskey
                          path: minio/accesskey
                        - key: secretkey
                          path: minio/secretkey
                      name: gitlab-minio-secret
            - emptyDir:
                medium: Memory
              name: toolbox-secrets
            - emptyDir:
                medium: Memory
              name: etc-ssl-certs
            - emptyDir:
                medium: Memory
              name: etc-pki-ca-trust-extracted-pem
    status:
      availableReplicas: 1
      fullyLabeledReplicas: 1
      observedGeneration: 1
      readyReplicas: 1
      replicas: 1
  - apiVersion: apps/v1
    kind: ReplicaSet
    metadata:
      annotations:
        deployment.kubernetes.io/desired-replicas: "1"
        deployment.kubernetes.io/max-replicas: "2"
        deployment.kubernetes.io/revision: "1"
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      generation: 1
      labels:
        app: webservice
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: v17.11.1
        chart: webservice-8.11.1
        gitlab.com/webservice-name: default
        heritage: Helm
        pod-template-hash: 67b89c8759
        release: gitlab
      name: gitlab-webservice-default-67b89c8759
      namespace: gitlab
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: Deployment
          name: gitlab-webservice-default
          uid: d2c49590-b146-4886-875d-fff1729806e3
      resourceVersion: "8679"
      uid: 7e7d4602-9612-4352-b840-e2ae2b945d46
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: webservice
          gitlab.com/webservice-name: default
          pod-template-hash: 67b89c8759
          release: gitlab
      template:
        metadata:
          annotations:
            checksum/config: d26dca7a19e69253f24a88ae26d0c1fba73ea8f9129c03d36eca4227fa175ff4
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
            gitlab.com/prometheus_path: /metrics
            gitlab.com/prometheus_port: "8083"
            gitlab.com/prometheus_scrape: "true"
            prometheus.io/path: /metrics
            prometheus.io/port: "8083"
            prometheus.io/scrape: "true"
          creationTimestamp: null
          labels:
            app: webservice
            app.kubernetes.io/name: gitlab
            app.kubernetes.io/version: v17.11.1
            chart: webservice-8.11.1
            gitlab.com/webservice-name: default
            heritage: Helm
            pod-template-hash: 67b89c8759
            release: gitlab
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchLabels:
                        app: webservice
                        gitlab.com/webservice-name: default
                        release: gitlab
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          automountServiceAccountToken: false
          containers:
            - env:
                - name: TZ
                  value: UTC
                - name: GITLAB_WEBSERVER
                  value: puma
                - name: TMPDIR
                  value: /tmp/gitlab
                - name: GITALY_FEATURE_DEFAULT_ON
                  value: "1"
                - name: CONFIG_TEMPLATE_DIRECTORY
                  value: /var/opt/gitlab/templates
                - name: CONFIG_DIRECTORY
                  value: /srv/gitlab/config
                - name: prometheus_multiproc_dir
                  value: /metrics
                - name: WORKER_PROCESSES
                  value: "2"
                - name: WORKER_TIMEOUT
                  value: "60"
                - name: INTERNAL_PORT
                  value: "8080"
                - name: PUMA_THREADS_MIN
                  value: "4"
                - name: PUMA_THREADS_MAX
                  value: "4"
                - name: PUMA_WORKER_MAX_MEMORY
                - name: DISABLE_PUMA_WORKER_KILLER
                  value: "true"
                - name: SHUTDOWN_BLACKOUT_SECONDS
                  value: "10"
                - name: WORKHORSE_ARCHIVE_CACHE_DISABLED
                  value: "true"
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce:v17.11.1
              imagePullPolicy: IfNotPresent
              lifecycle:
                preStop:
                  exec:
                    command:
                      - /bin/bash
                      - -c
                      - pkill -SIGINT -o ruby
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /-/liveness
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 20
                periodSeconds: 60
                successThreshold: 1
                timeoutSeconds: 30
              name: webservice
              ports:
                - containerPort: 8080
                  name: http-webservice
                  protocol: TCP
                - containerPort: 8083
                  name: http-metrics-ws
                  protocol: TCP
              readinessProbe:
                failureThreshold: 2
                httpGet:
                  path: /-/readiness
                  port: 8080
                  scheme: HTTP
                periodSeconds: 5
                successThreshold: 1
                timeoutSeconds: 2
              resources:
                requests:
                  cpu: 300m
                  memory: 2500M
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /metrics
                  name: webservice-metrics
                - mountPath: /var/opt/gitlab/templates
                  name: webservice-config
                - mountPath: /etc/gitlab
                  name: webservice-secrets
                  readOnly: true
                - mountPath: /srv/gitlab/config/secrets.yml
                  name: webservice-secrets
                  subPath: rails-secrets/secrets.yml
                - mountPath: /etc/krb5.conf
                  name: webservice-config
                  subPath: krb5.conf
                - mountPath: /srv/gitlab/config/initializers/smtp_settings.rb
                  name: webservice-config
                  subPath: smtp_settings.rb
                - mountPath: /srv/gitlab/INSTALLATION_TYPE
                  name: webservice-config
                  subPath: installation_type
                - mountPath: /srv/gitlab/public/uploads/tmp
                  name: shared-upload-directory
                - mountPath: /tmp
                  name: shared-tmp
                - mountPath: /etc/ssl/certs/
                  name: etc-ssl-certs
                  readOnly: true
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
                  readOnly: true
            - env:
                - name: TZ
                  value: UTC
                - name: TMPDIR
                  value: /tmp/gitlab
                - name: GITLAB_WORKHORSE_AUTH_BACKEND
                  value: http://localhost:8080
                - name: GITLAB_WORKHORSE_EXTRA_ARGS
                - name: GITLAB_WORKHORSE_LISTEN_PORT
                  value: "8181"
                - name: GITLAB_WORKHORSE_LOG_FORMAT
                  value: json
                - name: CONFIG_TEMPLATE_DIRECTORY
                  value: /var/opt/gitlab/templates
                - name: CONFIG_DIRECTORY
                  value: /srv/gitlab/config
                - name: SHUTDOWN_BLACKOUT_SECONDS
                  value: "10"
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ce:v17.11.1
              imagePullPolicy: IfNotPresent
              lifecycle:
                preStop:
                  exec:
                    command:
                      - /bin/bash
                      - -c
                      - sleep $SHUTDOWN_BLACKOUT_SECONDS
              livenessProbe:
                exec:
                  command:
                    - /scripts/healthcheck
                failureThreshold: 3
                initialDelaySeconds: 20
                periodSeconds: 60
                successThreshold: 1
                timeoutSeconds: 30
              name: gitlab-workhorse
              ports:
                - containerPort: 8181
                  name: http-workhorse
                  protocol: TCP
              readinessProbe:
                exec:
                  command:
                    - /scripts/healthcheck
                failureThreshold: 3
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 2
              resources:
                requests:
                  cpu: 100m
                  memory: 100M
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/opt/gitlab/templates
                  name: workhorse-config
                - mountPath: /etc/gitlab
                  name: workhorse-secrets
                  readOnly: true
                - mountPath: /srv/gitlab/public/uploads/tmp
                  name: shared-upload-directory
                - mountPath: /tmp
                  name: shared-tmp
                - mountPath: /etc/ssl/certs/
                  name: etc-ssl-certs
                  readOnly: true
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
                  readOnly: true
          dnsPolicy: ClusterFirst
          initContainers:
            - env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
              imagePullPolicy: IfNotPresent
              name: certificates
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/ssl/certs
                  name: etc-ssl-certs
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
            - args:
                - -c
                - sh -x /config-webservice/configure ; sh -x /config-workhorse/configure ; mkdir -p -m 3770 /tmp/gitlab
              command:
                - sh
              env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
              imagePullPolicy: IfNotPresent
              name: configure
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /config-webservice
                  name: webservice-config
                  readOnly: true
                - mountPath: /config-workhorse
                  name: workhorse-config
                  readOnly: true
                - mountPath: /init-config
                  name: init-webservice-secrets
                  readOnly: true
                - mountPath: /init-secrets
                  name: webservice-secrets
                - mountPath: /init-secrets-workhorse
                  name: workhorse-secrets
                - mountPath: /tmp
                  name: shared-tmp
            - args:
                - /scripts/wait-for-deps
              env:
                - name: TZ
                  value: UTC
                - name: GITALY_FEATURE_DEFAULT_ON
                  value: "1"
                - name: CONFIG_TEMPLATE_DIRECTORY
                  value: /var/opt/gitlab/templates
                - name: CONFIG_DIRECTORY
                  value: /srv/gitlab/config
                - name: WORKHORSE_ARCHIVE_CACHE_DISABLED
                  value: "1"
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ce:v17.11.1
              imagePullPolicy: IfNotPresent
              name: dependencies
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/ssl/certs/
                  name: etc-ssl-certs
                  readOnly: true
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
                  readOnly: true
                - mountPath: /var/opt/gitlab/templates
                  name: webservice-config
                - mountPath: /etc/gitlab
                  name: webservice-secrets
                  readOnly: true
                - mountPath: /srv/gitlab/config/secrets.yml
                  name: webservice-secrets
                  readOnly: true
                  subPath: rails-secrets/secrets.yml
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationGracePeriodSeconds: 30
          volumes:
            - emptyDir: {}
              name: shared-tmp
            - emptyDir:
                medium: Memory
              name: webservice-metrics
            - configMap:
                defaultMode: 420
                name: gitlab-webservice
              name: webservice-config
            - configMap:
                defaultMode: 420
                name: gitlab-workhorse-default
              name: workhorse-config
            - name: init-webservice-secrets
              projected:
                defaultMode: 256
                sources:
                  - secret:
                      items:
                        - key: secrets.yml
                          path: rails-secrets/secrets.yml
                      name: gitlab-rails-secret
                  - secret:
                      items:
                        - key: secret
                          path: shell/.gitlab_shell_secret
                      name: gitlab-gitlab-shell-secret
                  - secret:
                      items:
                        - key: token
                          path: gitaly/gitaly_token
                      name: gitlab-gitaly-secret
                  - secret:
                      items:
                        - key: secret
                          path: redis/redis-password
                      name: gitlab-redis-secret
                  - secret:
                      items:
                        - key: postgresql-password
                          path: postgres/psql-password-ci
                      name: gitlab-postgresql-password
                  - secret:
                      items:
                        - key: postgresql-password
                          path: postgres/psql-password-main
                      name: gitlab-postgresql-password
                  - secret:
                      items:
                        - key: registry-auth.key
                          path: registry/gitlab-registry.key
                      name: gitlab-registry-secret
                  - secret:
                      items:
                        - key: secret
                          path: registry/notificationSecret
                      name: gitlab-registry-notification
                  - secret:
                      items:
                        - key: shared_secret
                          path: gitlab-workhorse/secret
                      name: gitlab-gitlab-workhorse-secret
                  - secret:
                      items:
                        - key: kas_shared_secret
                          path: kas/.gitlab_kas_secret
                      name: gitlab-gitlab-kas-secret
                  - secret:
                      items:
                        - key: suggested_reviewers_secret
                          path: suggested_reviewers/.gitlab_suggested_reviewers_secret
                      name: gitlab-gitlab-suggested-reviewers
                  - secret:
                      items:
                        - key: gitlab_username
                          path: zoekt/.gitlab_zoekt_username
                        - key: gitlab_password
                          path: zoekt/.gitlab_zoekt_password
                      name: gitlab-zoekt-basicauth
                      optional: true
                  - secret:
                      items:
                        - key: accesskey
                          path: minio/accesskey
                        - key: secretkey
                          path: minio/secretkey
                      name: gitlab-minio-secret
            - emptyDir:
                medium: Memory
              name: webservice-secrets
            - emptyDir:
                medium: Memory
              name: workhorse-secrets
            - emptyDir: {}
              name: shared-upload-directory
            - emptyDir:
                medium: Memory
              name: etc-ssl-certs
            - emptyDir:
                medium: Memory
              name: etc-pki-ca-trust-extracted-pem
    status:
      availableReplicas: 1
      fullyLabeledReplicas: 1
      observedGeneration: 1
      readyReplicas: 1
      replicas: 1
  - apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      annotations:
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      generation: 1
      labels:
        app: gitaly
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: v17.11.1
        chart: gitaly-8.11.1
        heritage: Helm
        release: gitlab
      name: gitlab-gitaly
      namespace: gitlab
      resourceVersion: "8427"
      uid: 54a06dda-4f06-4c60-9956-0088c62e9930
    spec:
      persistentVolumeClaimRetentionPolicy:
        whenDeleted: Retain
        whenScaled: Retain
      podManagementPolicy: Parallel
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: gitaly
          release: gitlab
      serviceName: gitlab-gitaly
      template:
        metadata:
          annotations:
            checksum/config: d9a5409ab980906f8c80dfc1b06bad4367e204641330ab72875ddffd0efe1bf2
            gitlab.com/prometheus_path: /metrics
            gitlab.com/prometheus_port: "9236"
            gitlab.com/prometheus_scrape: "true"
            prometheus.io/path: /metrics
            prometheus.io/port: "9236"
            prometheus.io/scrape: "true"
          creationTimestamp: null
          labels:
            app: gitaly
            app.kubernetes.io/name: gitlab
            app.kubernetes.io/version: v17.11.1
            chart: gitaly-8.11.1
            heritage: Helm
            release: gitlab
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchLabels:
                        app: gitaly
                        release: gitlab
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          automountServiceAccountToken: false
          containers:
            - env:
                - name: CONFIG_TEMPLATE_DIRECTORY
                  value: /etc/gitaly/templates
                - name: CONFIG_DIRECTORY
                  value: /etc/gitaly
                - name: GITALY_CONFIG_FILE
                  value: /etc/gitaly/config.toml
                - name: SSL_CERT_DIR
                  value: /etc/ssl/certs
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitaly:v17.11.1
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                grpc:
                  port: 8075
                  service: ""
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 3
              name: gitaly
              ports:
                - containerPort: 8075
                  name: grpc-gitaly
                  protocol: TCP
                - containerPort: 9236
                  name: http-metrics
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                grpc:
                  port: 8075
                  service: ""
                periodSeconds: 5
                successThreshold: 1
                timeoutSeconds: 3
              resources:
                requests:
                  cpu: 100m
                  memory: 200Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              startupProbe:
                failureThreshold: 60
                grpc:
                  port: 8075
                  service: ""
                initialDelaySeconds: 1
                periodSeconds: 1
                successThreshold: 1
                timeoutSeconds: 1
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/ssl/certs/
                  name: etc-ssl-certs
                  readOnly: true
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
                  readOnly: true
                - mountPath: /etc/gitaly/templates
                  name: gitaly-config
                - mountPath: /etc/gitlab-secrets
                  name: gitaly-secrets
                  readOnly: true
                - mountPath: /home/git/repositories
                  name: repo-data
          dnsPolicy: ClusterFirst
          initContainers:
            - env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
              imagePullPolicy: IfNotPresent
              name: certificates
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/ssl/certs
                  name: etc-ssl-certs
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
            - command:
                - sh
                - /config/configure
              env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
              imagePullPolicy: IfNotPresent
              name: configure
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /config
                  name: gitaly-config
                  readOnly: true
                - mountPath: /init-config
                  name: init-gitaly-secrets
                  readOnly: true
                - mountPath: /init-secrets
                  name: gitaly-secrets
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 1000
            runAsUser: 1000
          terminationGracePeriodSeconds: 30
          volumes:
            - configMap:
                defaultMode: 420
                name: gitlab-gitaly
              name: gitaly-config
            - emptyDir:
                medium: Memory
              name: gitaly-secrets
            - name: init-gitaly-secrets
              projected:
                defaultMode: 288
                sources:
                  - secret:
                      items:
                        - key: token
                          path: gitaly_token
                      name: gitlab-gitaly-secret
                  - secret:
                      items:
                        - key: secret
                          path: .gitlab_shell_secret
                      name: gitlab-gitlab-shell-secret
            - emptyDir:
                medium: Memory
              name: etc-ssl-certs
            - emptyDir:
                medium: Memory
              name: etc-pki-ca-trust-extracted-pem
      updateStrategy:
        rollingUpdate:
          partition: 0
        type: RollingUpdate
      volumeClaimTemplates:
        - apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            creationTimestamp: null
            labels:
              app: gitaly
              release: gitlab
            name: repo-data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 50Gi
            volumeMode: Filesystem
          status:
            phase: Pending
    status:
      availableReplicas: 1
      collisionCount: 0
      currentReplicas: 1
      currentRevision: gitlab-gitaly-78f5fd556f
      observedGeneration: 1
      readyReplicas: 1
      replicas: 1
      updateRevision: gitlab-gitaly-78f5fd556f
      updatedReplicas: 1
  - apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      annotations:
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      generation: 1
      labels:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: gitlab
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/version: 15.4.0
        helm.sh/chart: postgresql-12.12.10
      name: gitlab-postgresql
      namespace: gitlab
      resourceVersion: "8434"
      uid: 7d594ada-a434-48ee-914b-efa87b48c648
    spec:
      persistentVolumeClaimRetentionPolicy:
        whenDeleted: Retain
        whenScaled: Retain
      podManagementPolicy: OrderedReady
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app.kubernetes.io/component: primary
          app.kubernetes.io/instance: gitlab
          app.kubernetes.io/name: postgresql
      serviceName: gitlab-postgresql-hl
      template:
        metadata:
          annotations:
            postgresql.gitlab/init-revision: "1"
          creationTimestamp: null
          labels:
            app.kubernetes.io/component: primary
            app.kubernetes.io/instance: gitlab
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgresql
            app.kubernetes.io/version: 15.4.0
            helm.sh/chart: postgresql-12.12.10
          name: gitlab-postgresql
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchLabels:
                        app.kubernetes.io/component: primary
                        app.kubernetes.io/instance: gitlab
                        app.kubernetes.io/name: postgresql
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          containers:
            - env:
                - name: BITNAMI_DEBUG
                  value: "false"
                - name: POSTGRESQL_PORT_NUMBER
                  value: "5432"
                - name: POSTGRESQL_VOLUME_DIR
                  value: /bitnami/postgresql
                - name: PGDATA
                  value: /bitnami/postgresql/data
                - name: POSTGRES_USER
                  value: gitlab
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: postgresql-password
                      name: gitlab-postgresql-password
                - name: POSTGRES_POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: postgresql-postgres-password
                      name: gitlab-postgresql-password
                - name: POSTGRES_DATABASE
                  value: gitlabhq_production
                - name: POSTGRESQL_ENABLE_LDAP
                  value: "no"
                - name: POSTGRESQL_ENABLE_TLS
                  value: "no"
                - name: POSTGRESQL_LOG_HOSTNAME
                  value: "false"
                - name: POSTGRESQL_LOG_CONNECTIONS
                  value: "false"
                - name: POSTGRESQL_LOG_DISCONNECTIONS
                  value: "false"
                - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
                  value: "off"
                - name: POSTGRESQL_CLIENT_MIN_MESSAGES
                  value: error
                - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
                  value: pgaudit
              image: docker.io/bitnami/postgresql:14.8.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                exec:
                  command:
                    - /bin/sh
                    - -c
                    - exec pg_isready -U "gitlab" -d "dbname=gitlabhq_production" -h 127.0.0.1 -p 5432
                failureThreshold: 6
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              name: postgresql
              ports:
                - containerPort: 5432
                  name: tcp-postgresql
                  protocol: TCP
              readinessProbe:
                exec:
                  command:
                    - /bin/sh
                    - -c
                    - -e
                    - |
                      exec pg_isready -U "gitlab" -d "dbname=gitlabhq_production" -h 127.0.0.1 -p 5432
                      [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
                failureThreshold: 6
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              resources:
                requests:
                  cpu: 250m
                  memory: 256Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 0
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /docker-entrypoint-initdb.d/
                  name: custom-init-scripts
                - mountPath: /dev/shm
                  name: dshm
                - mountPath: /bitnami/postgresql
                  name: data
                - mountPath: /docker-entrypoint-preinitdb.d/init_revision.sh
                  name: custom-init-scripts
                  subPath: init_revision.sh
            - env:
                - name: DATA_SOURCE_URI
                  value: 127.0.0.1:5432/gitlabhq_production?sslmode=disable
                - name: DATA_SOURCE_PASS
                  valueFrom:
                    secretKeyRef:
                      key: postgresql-password
                      name: gitlab-postgresql-password
                - name: DATA_SOURCE_USER
                  value: gitlab
              image: docker.io/bitnami/postgres-exporter:0.14.0-debian-11-r2
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 6
                httpGet:
                  path: /
                  port: http-metrics
                  scheme: HTTP
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              name: metrics
              ports:
                - containerPort: 9187
                  name: http-metrics
                  protocol: TCP
              readinessProbe:
                failureThreshold: 6
                httpGet:
                  path: /
                  port: http-metrics
                  scheme: HTTP
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              resources: {}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 0
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 1001
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          volumes:
            - configMap:
                defaultMode: 420
                name: gitlab-postgresql-init-db
              name: custom-init-scripts
            - emptyDir:
                medium: Memory
              name: dshm
      updateStrategy:
        rollingUpdate:
          partition: 0
        type: RollingUpdate
      volumeClaimTemplates:
        - apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            creationTimestamp: null
            name: data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 8Gi
            volumeMode: Filesystem
          status:
            phase: Pending
    status:
      availableReplicas: 1
      collisionCount: 0
      currentReplicas: 1
      currentRevision: gitlab-postgresql-688bb84654
      observedGeneration: 1
      readyReplicas: 1
      replicas: 1
      updateRevision: gitlab-postgresql-688bb84654
      updatedReplicas: 1
  - apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      annotations:
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      generation: 1
      labels:
        app.kubernetes.io/component: master
        app.kubernetes.io/instance: gitlab
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redis
        app.kubernetes.io/version: 7.2.4
        helm.sh/chart: redis-18.19.4
      name: gitlab-redis-master
      namespace: gitlab
      resourceVersion: "8494"
      uid: ae5c8a26-84e1-4c04-bb8c-3e5dc8a70e47
    spec:
      persistentVolumeClaimRetentionPolicy:
        whenDeleted: Retain
        whenScaled: Retain
      podManagementPolicy: OrderedReady
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app.kubernetes.io/component: master
          app.kubernetes.io/instance: gitlab
          app.kubernetes.io/name: redis
      serviceName: gitlab-redis-headless
      template:
        metadata:
          annotations:
            checksum/configmap: 86bcc953bb473748a3d3dc60b7c11f34e60c93519234d4c37f42e22ada559d47
            checksum/health: aff24913d801436ea469d8d374b2ddb3ec4c43ee7ab24663d5f8ff1a1b6991a9
            checksum/scripts: 560c33ff34d845009b51830c332aa05fa211444d1877d3526d3599be7543aaa5
            checksum/secret: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
            prometheus.io/port: "9121"
            prometheus.io/scrape: "true"
          creationTimestamp: null
          labels:
            app.kubernetes.io/component: master
            app.kubernetes.io/instance: gitlab
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: redis
            app.kubernetes.io/version: 7.2.4
            helm.sh/chart: redis-18.19.4
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchLabels:
                        app.kubernetes.io/component: master
                        app.kubernetes.io/instance: gitlab
                        app.kubernetes.io/name: redis
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          automountServiceAccountToken: false
          containers:
            - args:
                - -c
                - /opt/bitnami/scripts/start-scripts/start-master.sh
              command:
                - /bin/bash
              env:
                - name: BITNAMI_DEBUG
                  value: "false"
                - name: REDIS_REPLICATION_MODE
                  value: master
                - name: ALLOW_EMPTY_PASSWORD
                  value: "no"
                - name: REDIS_PASSWORD_FILE
                  value: /opt/bitnami/redis/secrets/redis-password
                - name: REDIS_TLS_ENABLED
                  value: "no"
                - name: REDIS_PORT
                  value: "6379"
              image: docker.io/bitnami/redis:7.2.4-debian-12-r9
              imagePullPolicy: IfNotPresent
              livenessProbe:
                exec:
                  command:
                    - sh
                    - -c
                    - /health/ping_liveness_local.sh 5
                failureThreshold: 5
                initialDelaySeconds: 20
                periodSeconds: 5
                successThreshold: 1
                timeoutSeconds: 6
              name: redis
              ports:
                - containerPort: 6379
                  name: redis
                  protocol: TCP
              readinessProbe:
                exec:
                  command:
                    - sh
                    - -c
                    - /health/ping_readiness_local.sh 1
                failureThreshold: 5
                initialDelaySeconds: 20
                periodSeconds: 5
                successThreshold: 1
                timeoutSeconds: 2
              resources: {}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                readOnlyRootFilesystem: false
                runAsGroup: 0
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /opt/bitnami/scripts/start-scripts
                  name: start-scripts
                - mountPath: /health
                  name: health
                - mountPath: /opt/bitnami/redis/secrets/
                  name: redis-password
                - mountPath: /data
                  name: redis-data
                - mountPath: /opt/bitnami/redis/mounted-etc
                  name: config
                - mountPath: /opt/bitnami/redis/etc/
                  name: empty-dir
                  subPath: app-conf-dir
                - mountPath: /tmp
                  name: empty-dir
                  subPath: tmp-dir
            - command:
                - /bin/bash
                - -c
                - |
                  if [[ -f '/secrets/redis-password' ]]; then
                  export REDIS_PASSWORD=$(cat /secrets/redis-password)
                  fi
                  redis_exporter
              env:
                - name: REDIS_ALIAS
                  value: gitlab-redis
                - name: REDIS_EXPORTER_WEB_LISTEN_ADDRESS
                  value: :9121
                - name: REDIS_USER
                  value: default
              image: docker.io/bitnami/redis-exporter:1.58.0-debian-12-r4
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 5
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: metrics
                timeoutSeconds: 5
              name: metrics
              ports:
                - containerPort: 9121
                  name: metrics
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /
                  port: metrics
                  scheme: HTTP
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources: {}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                readOnlyRootFilesystem: false
                runAsGroup: 0
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /tmp
                  name: empty-dir
                  subPath: app-tmp-dir
                - mountPath: /secrets/
                  name: redis-password
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: Always
          serviceAccount: gitlab-redis-master
          serviceAccountName: gitlab-redis-master
          terminationGracePeriodSeconds: 30
          volumes:
            - configMap:
                defaultMode: 493
                name: gitlab-redis-scripts
              name: start-scripts
            - configMap:
                defaultMode: 493
                name: gitlab-redis-health
              name: health
            - name: redis-password
              secret:
                defaultMode: 420
                items:
                  - key: secret
                    path: redis-password
                secretName: gitlab-redis-secret
            - configMap:
                defaultMode: 420
                name: gitlab-redis-configuration
              name: config
            - emptyDir: {}
              name: empty-dir
      updateStrategy:
        type: RollingUpdate
      volumeClaimTemplates:
        - apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            creationTimestamp: null
            labels:
              app.kubernetes.io/component: master
              app.kubernetes.io/instance: gitlab
              app.kubernetes.io/name: redis
            name: redis-data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 8Gi
            volumeMode: Filesystem
          status:
            phase: Pending
    status:
      availableReplicas: 1
      collisionCount: 0
      currentReplicas: 1
      currentRevision: gitlab-redis-master-5d556fd764
      observedGeneration: 1
      readyReplicas: 1
      replicas: 1
      updateRevision: gitlab-redis-master-5d556fd764
      updatedReplicas: 1
  - apiVersion: autoscaling/v2
    kind: HorizontalPodAutoscaler
    metadata:
      annotations:
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      labels:
        app: gitlab-shell
        app.kubernetes.io/managed-by: Helm
        chart: gitlab-shell-8.11.1
        heritage: Helm
        release: gitlab
      name: gitlab-gitlab-shell
      namespace: gitlab
      resourceVersion: "9199"
      uid: da2d9520-454c-4ac9-a728-395bd3ba7ac5
    spec:
      behavior:
        scaleDown:
          policies:
            - periodSeconds: 15
              type: Percent
              value: 100
          selectPolicy: Max
          stabilizationWindowSeconds: 300
        scaleUp:
          policies:
            - periodSeconds: 15
              type: Pods
              value: 4
            - periodSeconds: 15
              type: Percent
              value: 100
          selectPolicy: Max
          stabilizationWindowSeconds: 0
      maxReplicas: 1
      metrics:
        - resource:
            name: cpu
            target:
              averageValue: 100m
              type: AverageValue
          type: Resource
      minReplicas: 1
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: gitlab-gitlab-shell
    status:
      conditions:
        - lastTransitionTime: "2025-05-06T15:54:09Z"
          message: recommended size matches current size
          reason: ReadyForNewScale
          status: "True"
          type: AbleToScale
        - lastTransitionTime: "2025-05-06T15:54:54Z"
          message: the HPA was able to successfully calculate a replica count from cpu resource
          reason: ValidMetricFound
          status: "True"
          type: ScalingActive
        - lastTransitionTime: "2025-05-06T15:54:54Z"
          message: the desired count is within the acceptable range
          reason: DesiredWithinRange
          status: "False"
          type: ScalingLimited
      currentMetrics:
        - resource:
            current:
              averageValue: 9m
            name: cpu
          type: Resource
      currentReplicas: 1
      desiredReplicas: 1
  - apiVersion: autoscaling/v2
    kind: HorizontalPodAutoscaler
    metadata:
      annotations:
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      labels:
        app: kas
        app.kubernetes.io/managed-by: Helm
        chart: kas-8.11.1
        heritage: Helm
        release: gitlab
      name: gitlab-kas
      namespace: gitlab
      resourceVersion: "9118"
      uid: 54ed9d99-00ca-40e5-89b0-85f31300372e
    spec:
      behavior:
        scaleDown:
          policies:
            - periodSeconds: 15
              type: Percent
              value: 100
          selectPolicy: Max
          stabilizationWindowSeconds: 300
        scaleUp:
          policies:
            - periodSeconds: 15
              type: Pods
              value: 4
            - periodSeconds: 15
              type: Percent
              value: 100
          selectPolicy: Max
          stabilizationWindowSeconds: 0
      maxReplicas: 10
      metrics:
        - resource:
            name: cpu
            target:
              averageValue: 100m
              type: AverageValue
          type: Resource
      minReplicas: 2
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: gitlab-kas
    status:
      conditions:
        - lastTransitionTime: "2025-05-06T15:54:09Z"
          message: recommended size matches current size
          reason: ReadyForNewScale
          status: "True"
          type: AbleToScale
        - lastTransitionTime: "2025-05-06T15:54:54Z"
          message: the HPA was able to successfully calculate a replica count from cpu resource
          reason: ValidMetricFound
          status: "True"
          type: ScalingActive
        - lastTransitionTime: "2025-05-06T15:54:54Z"
          message: the desired replica count is less than the minimum replica count
          reason: TooFewReplicas
          status: "True"
          type: ScalingLimited
      currentMetrics:
        - resource:
            current:
              averageValue: 1m
            name: cpu
          type: Resource
      currentReplicas: 2
      desiredReplicas: 2
      lastScaleTime: "2025-05-06T15:54:09Z"
  - apiVersion: autoscaling/v2
    kind: HorizontalPodAutoscaler
    metadata:
      annotations:
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      labels:
        app: registry
        app.kubernetes.io/managed-by: Helm
        chart: registry-0.7.0
        heritage: Helm
        release: gitlab
      name: gitlab-registry
      namespace: gitlab
      resourceVersion: "8534"
      uid: f36e8477-75d9-40ff-9331-1ef4641865e9
    spec:
      behavior:
        scaleDown:
          policies:
            - periodSeconds: 15
              type: Percent
              value: 100
          selectPolicy: Max
          stabilizationWindowSeconds: 300
        scaleUp:
          policies:
            - periodSeconds: 15
              type: Pods
              value: 4
            - periodSeconds: 15
              type: Percent
              value: 100
          selectPolicy: Max
          stabilizationWindowSeconds: 0
      maxReplicas: 1
      metrics:
        - resource:
            name: cpu
            target:
              averageUtilization: 75
              type: Utilization
          type: Resource
      minReplicas: 1
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: gitlab-registry
    status:
      conditions:
        - lastTransitionTime: "2025-05-06T15:54:09Z"
          message: recommended size matches current size
          reason: ReadyForNewScale
          status: "True"
          type: AbleToScale
        - lastTransitionTime: "2025-05-06T15:54:39Z"
          message: the HPA was able to successfully calculate a replica count from cpu resource utilization (percentage of request)
          reason: ValidMetricFound
          status: "True"
          type: ScalingActive
        - lastTransitionTime: "2025-05-06T15:54:39Z"
          message: the desired count is within the acceptable range
          reason: DesiredWithinRange
          status: "False"
          type: ScalingLimited
      currentMetrics:
        - resource:
            current:
              averageUtilization: 2
              averageValue: 1m
            name: cpu
          type: Resource
      currentReplicas: 1
      desiredReplicas: 1
  - apiVersion: autoscaling/v2
    kind: HorizontalPodAutoscaler
    metadata:
      annotations:
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      labels:
        app: sidekiq
        app.kubernetes.io/managed-by: Helm
        chart: sidekiq-8.11.1
        heritage: Helm
        release: gitlab
      name: gitlab-sidekiq-all-in-1-v2
      namespace: gitlab
      resourceVersion: "9198"
      uid: 3dc538dc-5e23-4468-bcfa-d2c4c7d7d180
    spec:
      behavior:
        scaleDown:
          policies:
            - periodSeconds: 15
              type: Percent
              value: 100
          selectPolicy: Max
          stabilizationWindowSeconds: 300
        scaleUp:
          policies:
            - periodSeconds: 15
              type: Pods
              value: 4
            - periodSeconds: 15
              type: Percent
              value: 100
          selectPolicy: Max
          stabilizationWindowSeconds: 0
      maxReplicas: 1
      metrics:
        - resource:
            name: cpu
            target:
              averageValue: 350m
              type: AverageValue
          type: Resource
      minReplicas: 1
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: gitlab-sidekiq-all-in-1-v2
    status:
      conditions:
        - lastTransitionTime: "2025-05-06T15:54:09Z"
          message: recommended size matches current size
          reason: ReadyForNewScale
          status: "True"
          type: AbleToScale
        - lastTransitionTime: "2025-05-06T15:57:09Z"
          message: the HPA was able to successfully calculate a replica count from cpu resource
          reason: ValidMetricFound
          status: "True"
          type: ScalingActive
        - lastTransitionTime: "2025-05-06T15:57:09Z"
          message: the desired count is within the acceptable range
          reason: DesiredWithinRange
          status: "False"
          type: ScalingLimited
      currentMetrics:
        - resource:
            current:
              averageValue: 140m
            name: cpu
          type: Resource
      currentReplicas: 1
      desiredReplicas: 1
  - apiVersion: autoscaling/v2
    kind: HorizontalPodAutoscaler
    metadata:
      annotations:
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      labels:
        app: webservice
        app.kubernetes.io/managed-by: Helm
        chart: webservice-8.11.1
        gitlab.com/webservice-name: default
        heritage: Helm
        release: gitlab
      name: gitlab-webservice-default
      namespace: gitlab
      resourceVersion: "9200"
      uid: 03b0deae-05a3-4fd8-a458-df0b7348f01b
    spec:
      behavior:
        scaleDown:
          policies:
            - periodSeconds: 15
              type: Percent
              value: 100
          selectPolicy: Max
          stabilizationWindowSeconds: 300
        scaleUp:
          policies:
            - periodSeconds: 15
              type: Pods
              value: 4
            - periodSeconds: 15
              type: Percent
              value: 100
          selectPolicy: Max
          stabilizationWindowSeconds: 0
      maxReplicas: 1
      metrics:
        - resource:
            name: cpu
            target:
              averageValue: "1"
              type: AverageValue
          type: Resource
      minReplicas: 1
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: gitlab-webservice-default
    status:
      conditions:
        - lastTransitionTime: "2025-05-06T15:54:09Z"
          message: recommended size matches current size
          reason: ReadyForNewScale
          status: "True"
          type: AbleToScale
        - lastTransitionTime: "2025-05-06T15:57:09Z"
          message: the HPA was able to successfully calculate a replica count from cpu resource
          reason: ValidMetricFound
          status: "True"
          type: ScalingActive
        - lastTransitionTime: "2025-05-06T15:57:09Z"
          message: the desired count is within the acceptable range
          reason: DesiredWithinRange
          status: "False"
          type: ScalingLimited
      currentMetrics:
        - resource:
            current:
              averageValue: 15m
            name: cpu
          type: Resource
      currentReplicas: 1
      desiredReplicas: 1
  - apiVersion: batch/v1
    kind: Job
    metadata:
      annotations:
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      generation: 1
      labels:
        app: migrations
        app.kubernetes.io/managed-by: Helm
        chart: migrations-8.11.1
        heritage: Helm
        release: gitlab
      name: gitlab-migrations-e83ea2f
      namespace: gitlab
      resourceVersion: "8711"
      uid: b941baf1-f2a8-4c46-9412-e2adfb6bda58
    spec:
      activeDeadlineSeconds: 3600
      backoffLimit: 6
      completionMode: NonIndexed
      completions: 1
      manualSelector: false
      parallelism: 1
      podReplacementPolicy: TerminatingOrFailed
      selector:
        matchLabels:
          batch.kubernetes.io/controller-uid: b941baf1-f2a8-4c46-9412-e2adfb6bda58
      suspend: false
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: migrations
            batch.kubernetes.io/controller-uid: b941baf1-f2a8-4c46-9412-e2adfb6bda58
            batch.kubernetes.io/job-name: gitlab-migrations-e83ea2f
            chart: migrations-8.11.1
            controller-uid: b941baf1-f2a8-4c46-9412-e2adfb6bda58
            heritage: Helm
            job-name: gitlab-migrations-e83ea2f
            release: gitlab
        spec:
          automountServiceAccountToken: false
          containers:
            - args:
                - /bin/bash
                - -c
                - "set -e;\n/scripts/wait-for-deps;\n/scripts/db-migrate;\n                    \n"
              env:
                - name: CONFIG_TEMPLATE_DIRECTORY
                  value: /var/opt/gitlab/templates
                - name: CONFIG_DIRECTORY
                  value: /srv/gitlab/config
                - name: BYPASS_SCHEMA_VERSION
                  value: "true"
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce:v17.11.1
              imagePullPolicy: IfNotPresent
              name: migrations
              resources:
                requests:
                  cpu: 250m
                  memory: 200Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/opt/gitlab/templates
                  name: migrations-config
                - mountPath: /etc/gitlab
                  name: migrations-secrets
                  readOnly: true
                - mountPath: /srv/gitlab/config/secrets.yml
                  name: migrations-secrets
                  subPath: rails-secrets/secrets.yml
                - mountPath: /srv/gitlab/config/initial_root_password
                  name: migrations-secrets
                  subPath: migrations/initial_root_password
                - mountPath: /srv/gitlab/config/gitlab_shared_runners_registration_token
                  name: migrations-secrets
                  subPath: migrations/gitlab_shared_runners_registration_token
                - mountPath: /etc/ssl/certs/
                  name: etc-ssl-certs
                  readOnly: true
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
                  readOnly: true
          dnsPolicy: ClusterFirst
          initContainers:
            - env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/certificates:v17.11.1
              imagePullPolicy: IfNotPresent
              name: certificates
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/ssl/certs
                  name: etc-ssl-certs
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: etc-pki-ca-trust-extracted-pem
            - command:
                - sh
                - /config/configure
              env:
                - name: TZ
                  value: UTC
              image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v17.11.1
              imagePullPolicy: IfNotPresent
              name: configure
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /config
                  name: migrations-config
                  readOnly: true
                - mountPath: /init-config
                  name: init-migrations-secrets
                  readOnly: true
                - mountPath: /init-secrets
                  name: migrations-secrets
          restartPolicy: OnFailure
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationGracePeriodSeconds: 30
          volumes:
            - configMap:
                defaultMode: 420
                name: gitlab-migrations
              name: migrations-config
            - name: init-migrations-secrets
              projected:
                defaultMode: 256
                sources:
                  - secret:
                      items:
                        - key: secrets.yml
                          path: rails-secrets/secrets.yml
                      name: gitlab-rails-secret
                  - secret:
                      items:
                        - key: token
                          path: gitaly/gitaly_token
                      name: gitlab-gitaly-secret
                  - secret:
                      items:
                        - key: secret
                          path: redis/redis-password
                      name: gitlab-redis-secret
                  - secret:
                      items:
                        - key: postgresql-password
                          path: postgres/psql-password-ci
                      name: gitlab-postgresql-password
                  - secret:
                      items:
                        - key: postgresql-password
                          path: postgres/psql-password-main
                      name: gitlab-postgresql-password
                  - secret:
                      items:
                        - key: password
                          path: migrations/initial_root_password
                      name: gitlab-gitlab-initial-root-password
                  - secret:
                      items:
                        - key: runner-registration-token
                          path: migrations/gitlab_shared_runners_registration_token
                      name: gitlab-gitlab-runner-secret
            - emptyDir:
                medium: Memory
              name: migrations-secrets
            - emptyDir:
                medium: Memory
              name: etc-ssl-certs
            - emptyDir:
                medium: Memory
              name: etc-pki-ca-trust-extracted-pem
    status:
      completionTime: "2025-05-06T15:56:44Z"
      conditions:
        - lastProbeTime: "2025-05-06T15:56:44Z"
          lastTransitionTime: "2025-05-06T15:56:44Z"
          message: Reached expected number of succeeded pods
          reason: CompletionsReached
          status: "True"
          type: SuccessCriteriaMet
        - lastProbeTime: "2025-05-06T15:56:44Z"
          lastTransitionTime: "2025-05-06T15:56:44Z"
          message: Reached expected number of succeeded pods
          reason: CompletionsReached
          status: "True"
          type: Complete
      ready: 0
      startTime: "2025-05-06T15:53:54Z"
      succeeded: 1
      terminating: 0
      uncountedTerminatedPods: {}
  - apiVersion: batch/v1
    kind: Job
    metadata:
      annotations:
        meta.helm.sh/release-name: gitlab
        meta.helm.sh/release-namespace: gitlab
      creationTimestamp: "2025-05-06T15:53:54Z"
      generation: 1
      labels:
        app: minio
        app.kubernetes.io/managed-by: Helm
        chart: minio-0.4.3
        heritage: Helm
        release: gitlab
      name: gitlab-minio-create-buckets-c71e587
      namespace: gitlab
      resourceVersion: "8375"
      uid: 8bd7872d-fe36-4db5-83a0-f8211048fcf2
    spec:
      activeDeadlineSeconds: 600
      backoffLimit: 6
      completionMode: NonIndexed
      completions: 1
      manualSelector: false
      parallelism: 1
      podReplacementPolicy: TerminatingOrFailed
      selector:
        matchLabels:
          batch.kubernetes.io/controller-uid: 8bd7872d-fe36-4db5-83a0-f8211048fcf2
      suspend: false
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: minio
            batch.kubernetes.io/controller-uid: 8bd7872d-fe36-4db5-83a0-f8211048fcf2
            batch.kubernetes.io/job-name: gitlab-minio-create-buckets-c71e587
            chart: minio-0.4.3
            component: create-buckets
            controller-uid: 8bd7872d-fe36-4db5-83a0-f8211048fcf2
            heritage: Helm
            job-name: gitlab-minio-create-buckets-c71e587
            release: gitlab
        spec:
          automountServiceAccountToken: false
          containers:
            - command:
                - /bin/sh
                - /config/initialize
              env:
                - name: HOME
                  value: /tmp
                - name: MINIO_ENDPOINT
                  value: gitlab-minio-svc.gitlab.svc
                - name: MINIO_PORT
                  value: "9000"
              image: minio/mc:RELEASE.2018-07-13T00-53-22Z
              imagePullPolicy: IfNotPresent
              name: minio-mc
              resources:
                requests:
                  cpu: 50m
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /config
                  name: minio-configuration
          dnsPolicy: ClusterFirst
          restartPolicy: OnFailure
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationGracePeriodSeconds: 30
          volumes:
            - name: minio-configuration
              projected:
                defaultMode: 420
                sources:
                  - configMap:
                      name: gitlab-minio-config-cm
                  - secret:
                      name: gitlab-minio-secret
    status:
      completionTime: "2025-05-06T15:54:07Z"
      conditions:
        - lastProbeTime: "2025-05-06T15:54:07Z"
          lastTransitionTime: "2025-05-06T15:54:07Z"
          message: Reached expected number of succeeded pods
          reason: CompletionsReached
          status: "True"
          type: SuccessCriteriaMet
        - lastProbeTime: "2025-05-06T15:54:07Z"
          lastTransitionTime: "2025-05-06T15:54:07Z"
          message: Reached expected number of succeeded pods
          reason: CompletionsReached
          status: "True"
          type: Complete
      ready: 0
      startTime: "2025-05-06T15:53:54Z"
      succeeded: 1
      terminating: 0
      uncountedTerminatedPods: {}
kind: List
metadata:
  resourceVersion: ""
