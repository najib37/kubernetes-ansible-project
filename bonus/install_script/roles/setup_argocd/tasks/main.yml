--- 
- name: Create ArgoCD namespace
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: argocd

- name: Add ArgoCD Helm repository
  kubernetes.core.helm_repository:
    name: argo
    repo_url: https://argoproj.github.io/argo-helm

- name: Install ArgoCD using Helm
  kubernetes.core.helm:
    name: argocd
    chart_ref: argo/argo-cd
    release_namespace: argocd
    create_namespace: true
    wait: true
    values:
        ingress:
          enabled: true
          ingressClassName: "traefik"
          pathType: Prefix
        configs:
          params:
            server.insecure: true

- name: Apply my argocd ingress router
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('file', playbook_dir + '/../argocd_config/ingress-router.yml') | from_yaml }}"
    namespace: argocd
    wait: true
    wait_timeout: 1000

- name: Apply my argocd application
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('file', playbook_dir + '/../argocd_config/argocd-application.yml') | from_yaml }}"
    namespace: argocd
    wait: true
    wait_timeout: 1000

- name: Get ArgoCD initial admin password
  kubernetes.core.k8s_info:
    kind: Secret
    name: argocd-initial-admin-secret
    namespace: argocd
  register: argocd_secret

- name: Log ArgoCD admin credentials
  ansible.builtin.debug:
    msg: "Username: admin || Password: {{ argocd_secret.resources[0].data.password | b64decode }}"
